<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CF920G List of Integers</title>
    <url>/2020/09/25/CF920G-List-of-Integers/</url>
    <content><![CDATA[<h1 id="List-of-Intergers"><a href="#List-of-Intergers" class="headerlink" title="List of Intergers"></a><a href="https://www.luogu.com.cn/problem/CF920G" target="_blank" rel="noopener">List of Intergers</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>求第$k$大的大于等于 $x$ 且与 $p$ 互质的数</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>即，求最小的 $y$ 使：</p>
<script type="math/tex; mode=display">
\sum_{i=1}^y[i\perp p]-\sum_{i=1}^x[i\perp p]=k</script><h2 id="莫比乌斯反演"><a href="#莫比乌斯反演" class="headerlink" title="莫比乌斯反演"></a>莫比乌斯反演</h2><p>那么看见这个形式，自然而然地会想到这个东西：$\mu*1=\epsilon$</p>
<p>所以就可以把 $[i\perp p]$ 写成：</p>
<script type="math/tex; mode=display">
\sum_{d|\gcd(i,p)}\mu(d)</script><p>那么交求和顺序，先枚举 $p$ 的因子 $d$，可以得到:</p>
<script type="math/tex; mode=display">
\begin{align*}
\sum_{i=1}^y[i\perp p]&=\sum_{i=1}^y\sum_{d|\gcd(i,p)}\mu(d)\\
&=\sum_{d|p}\mu(d)\sum_{i=1}^\left\lfloor\frac y d\right\rfloor1
\\&=\sum_{d|p}\mu(d)\left\lfloor\frac y d\right\rfloor
\end{align*}</script><p>那么，这个时候，后面这一块，已经是十分好求的了，可以直接枚举 $\sqrt y$ 范围内 $y$ 的因子(顺便得到 $&gt;\sqrt y$ )的因子，按照这个直接加就可以了</p>
<h2 id="容斥"><a href="#容斥" class="headerlink" title="容斥"></a>容斥</h2><p>还是考虑$[i\perp p]$，换一种写法呢就是$[\gcd(i,p)==1]$</p>
<p>那么就是说，不合法的就是$\gcd(i,p) &gt; 1$</p>
<p>那么按照套路，还是应该用总共的减去不合法的，</p>
<p>那么就要枚举$p$的每个因子对答案的贡献</p>
<p>同样的，还是可以得到容斥系数就是$\mu$</p>
<p>那么还是能够得到同一个式子：</p>
<script type="math/tex; mode=display">
\sum_{i=1}^y[i\perp p]=\sum_{d|p}^y\mu(d)\left\lfloor\frac y d\right\rfloor</script><p>当然，这并不是巧合，有兴趣的同学可以自行了解一下(<del>我也说不清</del>)</p>
<p>时间复杂度为$O(n\log n\sqrt n)$</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) &#123;</span><br><span class="line">        x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mu[maxn], pr[maxn], cnt, line;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxn; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i]) pr[++cnt] = i, mu[i] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * pr[j] &lt; maxn; ++j) &#123;</span><br><span class="line">            vis[i * pr[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % pr[j]) mu[i * pr[j]] = -mu[i];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>; l * l &lt;= x; ++l) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x % l) <span class="keyword">continue</span>;</span><br><span class="line">        ans += mu[l] * (n / l);</span><br><span class="line">        <span class="keyword">if</span> (l * l &lt; x) ans += mu[x / l] * (n / (x / l));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="keyword">int</span> T = __read();</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = __read(), p = __read(), k = __read();</span><br><span class="line">        int l(1), r(1e7), ans(0);</span><br><span class="line">        line = Query(x, p);</span><br><span class="line">        <span class="keyword">while</span> (l &lt;= r) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (Query(mid, p) - line &gt;= k) ans = mid, r = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>UPT：</strong>有位机房巨佬认为我写的这个是有点小问题的，我觉得这个可以解释一下</p>
<p>他的意思是按照样例给的$7\;22\;1$，我的$Query$函数求得的$9$和$10$的答案都是$5$，那么为什么我取得的是$9$而不是$10$，然后$10$与$22$并不互质，为什么对$10$还有答案呢？</p>
<p>回到最开头，有这样一个东西：</p>
<script type="math/tex; mode=display">
\sum_{i=1}^y[i\perp p]-\sum_{i=1}^x[i\perp p]=k</script><p>会发现，我们求得的值，并不是说$y$是第几个，我们求得的值是在$[1,y]$有几个</p>
<p>令：</p>
<script type="math/tex; mode=display">
f(x)=\sum_{i=1}^x[i\perp p]</script><p>当$f(y)-f(y-1)=1$时，当且仅当$[y\perp p]=1$，所以，我们二分答案要取的是第一个满足条件的数</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>莫比乌斯反演</tag>
        <tag>容斥</tag>
        <tag>前缀和</tag>
      </tags>
  </entry>
  <entry>
    <title>CF932D Tree</title>
    <url>/2020/09/04/CF932D/</url>
    <content><![CDATA[<h1 id="CF932D-Tree"><a href="#CF932D-Tree" class="headerlink" title="CF932D Tree"></a><a href="https://www.luogu.com.cn/problem/CF932D" target="_blank" rel="noopener">CF932D Tree</a></h1><h2 id="题目大意："><a href="#题目大意：" class="headerlink" title="题目大意："></a>题目大意：</h2><ul>
<li>首先，我们有$Q$次操作</li>
</ul>
<blockquote>
<ul>
<li>操作$1$：在节点$R$下面再加一个权值为$W$的点</li>
<li>操作$2$：询问从点$X$开始往上走，（每次遇到权值大于当前选过的最后一个点的点必定会选），问最多能选多少点</li>
</ul>
</blockquote>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>我们可以很容易的发现，我们选中的点一定是一个单调不下降序列</p>
<p>那么就是说，我们可以稍微改动一下操作一，让每一条链都一定是单调不上升的（从根出发的链）</p>
<p>然后，我们每次加入的点必定不会是已经存在的某个点的祖先，所以我们改变他的位置对原来的树是没有影响的</p>
<p>若有节点成为了这个被我们认为操作的节点的儿子，它的值依赖于我们人为操作的那个点，所以这个答案也不会因为我们的操作出现问题</p>
<p>那么我们就可以在加入节点的时候，找到第一个权值大于该节点的点做为这个点的父节点</p>
<p>顺便跟新一下前缀和</p>
<p>这个用倍增实现就好了</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddPoint</span><span class="params">(ll u, ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll v = ++cnt;</span><br><span class="line">    wight[v] = p;</span><br><span class="line">    <span class="keyword">if</span> (wight[u] &gt;= wight[v]) &#123;</span><br><span class="line">        father[v][<span class="number">0</span>] = u;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">19</span>; ~i; --i)</span><br><span class="line">            <span class="keyword">if</span> (wight[father[u][i]] &lt; wight[v])</span><br><span class="line">                u = father[u][i];</span><br><span class="line">        father[v][<span class="number">0</span>] = father[u][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    sum[v][<span class="number">0</span>] = wight[father[v][<span class="number">0</span>]]; </span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt; <span class="number">20</span>; ++i) &#123;</span><br><span class="line">        father[v][i] = father[father[v][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (sum[v][i - <span class="number">1</span>] &lt; inf &amp;&amp; father[v][i]) &#123;</span><br><span class="line">            sum[v][i] = sum[v][i - <span class="number">1</span>] + sum[father[v][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后查询的话，能跳就跳，每次向上跳了更新一下限制即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (wight[x] &gt; limit) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    limit -= wight[x];</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">19</span>; ~i; --i)</span><br><span class="line">        <span class="keyword">if</span> (sum[x][i] &lt;= limit) &#123;</span><br><span class="line">            ans += (<span class="number">1</span> &lt;&lt; i);<span class="comment">//向上跳了2的i次方层，那就有2的i次方个点</span></span><br><span class="line">            limit -= sum[x][i];</span><br><span class="line">            x = father[x][i];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">4e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll inf = <span class="number">0x6f6f6f6f6f6f6f6f</span>;</span><br><span class="line"></span><br><span class="line">ll father[maxn][<span class="number">20</span>], wight[maxn], cnt(<span class="number">1</span>);</span><br><span class="line">ll sum[maxn][<span class="number">20</span>], lastans, limit;</span><br><span class="line">ll Q, Opt, X, Y;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddPoint</span><span class="params">(ll u, ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll v = ++cnt;</span><br><span class="line">    wight[v] = p;</span><br><span class="line">    <span class="keyword">if</span> (wight[u] &gt;= wight[v]) &#123;</span><br><span class="line">        father[v][<span class="number">0</span>] = u;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">19</span>; ~i; --i)</span><br><span class="line">            <span class="keyword">if</span> (wight[father[u][i]] &lt; wight[v])</span><br><span class="line">                u = father[u][i];</span><br><span class="line">        father[v][<span class="number">0</span>] = father[u][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    sum[v][<span class="number">0</span>] = wight[father[v][<span class="number">0</span>]]; </span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt; <span class="number">20</span>; ++i) &#123;</span><br><span class="line">        father[v][i] = father[father[v][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (sum[v][i - <span class="number">1</span>] &lt; inf &amp;&amp; father[v][i]) &#123;</span><br><span class="line">            sum[v][i] = sum[v][i - <span class="number">1</span>] + sum[father[v][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (wight[x] &gt; limit) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    limit -= wight[x];</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">19</span>; ~i; --i)</span><br><span class="line">        <span class="keyword">if</span> (sum[x][i] &lt;= limit) &#123;</span><br><span class="line">            ans += (<span class="number">1</span> &lt;&lt; i);</span><br><span class="line">            limit -= sum[x][i];</span><br><span class="line">            x = father[x][i];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">x</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span><span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) o = getchar();</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span> (sum, <span class="number">0x6f</span>, <span class="keyword">sizeof</span> sum);</span><br><span class="line">    wight[<span class="number">0</span>] = inf;</span><br><span class="line">    Q = Read();</span><br><span class="line">    <span class="keyword">while</span> (Q--)</span><br><span class="line">    &#123;</span><br><span class="line">        Opt = Read(), X = Read() ^ lastans, Y = Read() ^ lastans;</span><br><span class="line">        <span class="keyword">if</span> (Opt == <span class="number">1</span>) AddPoint(X, Y);</span><br><span class="line">        <span class="keyword">else</span> limit = Y, <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, lastans = Query(X));</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>倍增</tag>
      </tags>
  </entry>
  <entry>
    <title>[CQOI2017]小Q的表格</title>
    <url>/2020/09/21/CQOI2017-%E5%B0%8FQ%E7%9A%84%E8%A1%A8%E6%A0%BC/</url>
    <content><![CDATA[<h1 id="CQOI2017-小Q的表格"><a href="#CQOI2017-小Q的表格" class="headerlink" title="[CQOI2017]小Q的表格"></a><a href="https://www.luogu.com.cn/problem/P3700" target="_blank" rel="noopener">[CQOI2017]小Q的表格</a></h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个表格，满足：</p>
<ul>
<li>$\forall a,b\;f(a,b)=f(b,a)$</li>
<li>$\forall a,b\;b\cdot f(a,a+b)=(a+b)\cdot f(a,b)$</li>
</ul>
<p>有$m$次操作</p>
<ul>
<li>每次操作修改$f(a,b)$的值，为了使整个表满足条件，所以要修改的点还挺多的</li>
<li>然后让你输出$k*k$的范围内的数的和</li>
</ul>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>对于性质$\forall a,b\;b\cdot f(a,a+b)=(a+b)\cdot f(a,b)$，观察发现它可以转化一下：</p>
<script type="math/tex; mode=display">
\begin{align*}
b\cdot f(a,a+b)&=(a+b)\cdot f(a,b)\\
\Leftrightarrow ab\cdot f(a,a+b)&=a(a+b)\cdot f(a,b)\\
\Leftrightarrow\quad\;\frac{f(a,a+b)}{a(a+b)}&=\frac{f(a,b)}{ab}\\
\Leftrightarrow\qquad\;\;\;\frac{f(a,b)}{a,b}&=\frac{f(\gcd(a,b), \gcd(a,b))}{\gcd^2(a,b)}
\end{align*}</script><p>所以可以得到一个结论：</p>
<script type="math/tex; mode=display">
\begin{align*}
f(a,b)&=f(gcd(a,b),gcd(a,b))\times\frac{ab}{\gcd^2(a,b)}\\
&=g(d)\times\frac{ab}{d^2}
\end{align*}</script><p>那么就得到了一个线性的表了</p>
<p>那么再回头看看题目要求的问题</p>
<script type="math/tex; mode=display">
\begin{align*}
ans&=\sum_{d=1}^ng(d)\sum_{i=1}^n\sum_{j=1}^n\frac{ij}{\gcd^2(i,j)}[\gcd(i,j)=d]\\
&=\sum_{d=1}^ng(d)\sum_{i=1}^{\left\lfloor\frac nd\right\rfloor}\sum_{j=1}^{\left\lfloor\frac md\right\rfloor}ij[\gcd(i,j)=1]\\
&=\sum_{d=1}^ng(d)\sum_{i=1}^{\left\lfloor\frac nd\right\rfloor}i\sum_{j=1}^{\left\lfloor\frac nd\right\rfloor}j[\gcd(i,j)=1]\\
\end{align*}</script><p>考虑:</p>
<script type="math/tex; mode=display">
\sum_{i=1}^ni[\gcd(i,n)=1]=\frac{n\times\varphi(n)}{2}</script><p>所以原式可以化为:</p>
<script type="math/tex; mode=display">
ans= \sum_{d=1}^ng(d)\sum_{i=1}^{\left\lfloor\frac nd\right\rfloor}i^2\varphi(i)</script><p>那么这个时候我们发现，后面的是可以直接$O(1)$求解的（先预处理，就可以直接查询）</p>
<p>然而前面那个$g(d)$是会发生改变的</p>
<p>这个可以用树状数组或者是分块来维护</p>
<p>这两个理论上是可以过的，实测再<a href="loj.ac">loj</a>是可以过的</p>
<p>洛谷似乎有点卡常，要$TLE$一两个点</p>
<p><a href="https://loj.ac/submission/937220" target="_blank" rel="noopener">树状数组实现</a>，<a href="https://loj.ac/submission/937110" target="_blank" rel="noopener">分块实现</a></p>
<h3 id="Code-树状数组"><a href="#Code-树状数组" class="headerlink" title="Code(树状数组)"></a>Code(树状数组)</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; -x)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">4e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read() &#123;</span><br><span class="line">    <span class="function">ll <span class="title">x</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span><span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) o = getchar();</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = ((x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>)) % mod;</span><br><span class="line">    <span class="keyword">return</span> x % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll size, n, q, len;</span><br><span class="line">ll pr[maxn], phi[maxn], f[maxn], cnt;</span><br><span class="line">ll id[maxn], st[maxn], ed[maxn];</span><br><span class="line">ll val[maxn], sum[maxn], Sum[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">inc</span><span class="params">(ll &amp;x, ll y)</span> </span>&#123;</span><br><span class="line">    x += y;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= mod)</span><br><span class="line">        x -= mod;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x &lt; <span class="number">0</span>)</span><br><span class="line">        x += mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">add</span><span class="params">(ll x, ll y)</span> </span>&#123;</span><br><span class="line">    ll temp = x + y;</span><br><span class="line">    <span class="keyword">if</span> (temp &gt;= mod)</span><br><span class="line">        temp -= mod;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (temp &lt; <span class="number">0</span>)</span><br><span class="line">        temp += mod;</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Pow</span><span class="params">(ll x, ll y)</span> </span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (y) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y &amp; <span class="number">1</span>)</span><br><span class="line">            ans = ans * x % mod;</span><br><span class="line">        x = x * x % mod;</span><br><span class="line">        y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">Gcd</span><span class="params">(ll x, ll y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!y)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> Gcd(y, x % y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">(ll x, ll val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (x &lt;= n) &#123;</span><br><span class="line">        inc(sum[x], val);</span><br><span class="line">        x += lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(ll x)</span> </span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        inc(ans, sum[x]);</span><br><span class="line">        x -= lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(ll l, ll r)</span> </span>&#123; <span class="keyword">return</span> add(Query(r), <span class="number">-1l</span>l * Query(l - <span class="number">1</span>)); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i])</span><br><span class="line">            pr[++cnt] = i, phi[i] = i - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (ll j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * pr[j] &lt;= n; ++j) &#123;</span><br><span class="line">            vis[i * pr[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % pr[j]) &#123;</span><br><span class="line">                phi[i * pr[j]] = phi[i] * phi[pr[j]];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                phi[i * pr[j]] = phi[i] * pr[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) f[i] = (f[i - <span class="number">1</span>] + i * i % mod * phi[i] % mod) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    q = __read(), n = __read();</span><br><span class="line">    init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        val[i] = <span class="number">1l</span>l * i * i % mod;</span><br><span class="line">        Update(i, val[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (q--) &#123;</span><br><span class="line">        ll a = __read(), b = __read(), x = __read(), k = __read(), d = Gcd(a, b);</span><br><span class="line"></span><br><span class="line">        ll upt = x * d % mod * d % mod * Pow(<span class="number">1l</span>l * a * b % mod, mod - <span class="number">2</span>) % mod;</span><br><span class="line">        Update(d, add(upt, -val[d]));</span><br><span class="line">        val[d] = upt;</span><br><span class="line"></span><br><span class="line">        <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (ll l = <span class="number">1</span>, r; l &lt;= k; l = r + <span class="number">1</span>) &#123;</span><br><span class="line">            r = k / (k / l);</span><br><span class="line">            inc(ans, f[k / l] * Query(l, r) % mod);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Code-分块"><a href="#Code-分块" class="headerlink" title="Code(分块)"></a>Code(分块)</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">4e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read() &#123;</span><br><span class="line">    <span class="function">ll <span class="title">x</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span><span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) o = getchar();</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = ((x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>)) % mod;</span><br><span class="line">    <span class="keyword">return</span> x % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll size, n, q, len;</span><br><span class="line">ll pr[maxn], phi[maxn], f[maxn], cnt;</span><br><span class="line">ll id[maxn], st[maxn], ed[maxn];</span><br><span class="line">ll val[maxn], sum[maxn], Sum[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">inc</span><span class="params">(ll &amp;x, ll y)</span> </span>&#123;</span><br><span class="line">    x += y;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= mod)</span><br><span class="line">        x -= mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">add</span><span class="params">(ll x, ll y)</span> </span>&#123;</span><br><span class="line">    ll temp = x + y;</span><br><span class="line">    <span class="keyword">if</span> (temp &gt;= mod)</span><br><span class="line">        temp -= mod;</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Pow</span><span class="params">(ll x, ll y)</span> </span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (y) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y &amp; <span class="number">1</span>)</span><br><span class="line">            ans = ans * x % mod;</span><br><span class="line">        x = x * x % mod;</span><br><span class="line">        y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">Gcd</span><span class="params">(ll x, ll y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!y)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> Gcd(y, x % y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Get_sum</span><span class="params">(ll x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!x)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> add(Sum[id[x] - <span class="number">1</span>], sum[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Get_sum</span><span class="params">(ll l, ll r)</span> </span>&#123; <span class="keyword">return</span> ((Get_sum(r) - Get_sum(l - <span class="number">1</span>)) % mod + mod) % mod; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i])</span><br><span class="line">            pr[++cnt] = i, phi[i] = i - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (ll j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * pr[j] &lt;= n; ++j) &#123;</span><br><span class="line">            vis[i * pr[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % pr[j]) &#123;</span><br><span class="line">                phi[i * pr[j]] = phi[i] * phi[pr[j]];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                phi[i * pr[j]] = phi[i] * pr[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) f[i] = (f[i - <span class="number">1</span>] + i * i % mod * phi[i] % mod) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">(ll x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == st[id[x]])</span><br><span class="line">        sum[x] = val[x];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        sum[x] = sum[x - <span class="number">1</span>] + val[x];</span><br><span class="line">    <span class="keyword">for</span> (ll i = x + <span class="number">1</span>; i &lt;= ed[id[x]]; ++i) sum[i] = add(sum[i - <span class="number">1</span>], val[i]);</span><br><span class="line">    <span class="keyword">for</span> (ll i = id[x]; i &lt;= len; ++i) Sum[i] = add(Sum[i - <span class="number">1</span>], sum[ed[i]]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    q = __read(), n = __read();</span><br><span class="line">    size = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        id[i] = i / size + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (i % size)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        st[id[i]] = i, ed[id[i] - <span class="number">1</span>] = i - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    len = id[n], ed[id[n]] = n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) val[i] = <span class="number">1l</span>l * i * i % mod;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= len; ++i) &#123;</span><br><span class="line">        sum[st[i]] = val[st[i]];</span><br><span class="line">        <span class="keyword">for</span> (ll j = st[i] + <span class="number">1</span>; j &lt;= ed[i]; ++j) sum[j] = add(sum[j - <span class="number">1</span>], val[j]);</span><br><span class="line">        Sum[i] = add(Sum[i - <span class="number">1</span>], sum[ed[i]]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (q--) &#123;</span><br><span class="line">        ll a = __read(), b = __read(), x = __read(), k = __read(), d = Gcd(a, b);</span><br><span class="line"></span><br><span class="line">        val[d] = x * d % mod * d % mod * Pow(<span class="number">1l</span>l * a * b % mod, mod - <span class="number">2</span>) % mod;</span><br><span class="line"></span><br><span class="line">        Update(d);</span><br><span class="line"></span><br><span class="line">        <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (ll l = <span class="number">1</span>, r; l &lt;= k; l = r + <span class="number">1</span>) &#123;</span><br><span class="line">            r = k / (k / l);</span><br><span class="line">            inc(ans, f[k / l] * Get_sum(l, r) % mod);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="进一步考虑"><a href="#进一步考虑" class="headerlink" title="进一步考虑"></a>进一步考虑</h2><p>我们每次修改的值其实是$f(\gcd(a,b))$，所以真时要改的值并不多</p>
<ul>
<li><p>那么我们可以先求出原表中$k*k$范围内的值</p>
</li>
<li><p>再求出修改的值对答案贡献相对原来的偏移量</p>
</li>
</ul>
<script type="math/tex; mode=display">
\Delta ans=\sum_{i=1}^{cnt}(改(i)-原^2(i))\sum_{j=1}^{\left\lfloor\frac ki\right\rfloor}j^2\varphi(j)</script><p>所以这个就是$O(cnt)$的复杂度</p>
<p>然后又是可以证明对于所有的$\gcd(n,m)$的个数时处于$\log n\sim\sqrt n$这个级别的</p>
<p>所以修改大概就是$O(m\log n)\sim O(m\sqrt n)$</p>
<p>然而实际跑下来要比这快得多</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">4e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read() &#123;</span><br><span class="line">    <span class="function">ll <span class="title">x</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span><span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) o = getchar();</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll size, n, q, len;</span><br><span class="line">ll pr[maxn], phi[maxn], f[maxn], cnt;</span><br><span class="line">ll stk[maxn], upt[maxn], top;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn], che[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i])</span><br><span class="line">            pr[++cnt] = i, phi[i] = i - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (ll j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * pr[j] &lt;= n; ++j) &#123;</span><br><span class="line">            vis[i * pr[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % pr[j]) &#123;</span><br><span class="line">                phi[i * pr[j]] = phi[i] * phi[pr[j]];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                phi[i * pr[j]] = phi[i] * pr[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) f[i] = (f[i - <span class="number">1</span>] + i * i % mod * phi[i] % mod) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">sum</span><span class="params">(ll x)</span> </span>&#123; <span class="keyword">return</span> x * (x + <span class="number">1</span>) / <span class="number">2</span> % mod; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!y)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> gcd(y, x % y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    q = __read(), n = __read();</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">while</span> (q--) &#123;</span><br><span class="line">        ll a = __read(), b = __read(), x = __read(), k = __read(), d = gcd(a, b);</span><br><span class="line"></span><br><span class="line">        upt[d] = x / (a / d) / (b / d) % mod;</span><br><span class="line">        <span class="keyword">if</span> (!che[d]) &#123;</span><br><span class="line">            stk[++top] = d;</span><br><span class="line">            che[d] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function">ll <span class="title">ans</span><span class="params">(sum(k))</span></span>;</span><br><span class="line">        ans = ans * ans % mod;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= top; ++i) &#123;</span><br><span class="line">            d = stk[i];</span><br><span class="line">            ans = (ans + ((upt[d] - d * d % mod) % mod + mod) % mod * f[k / d] % mod) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>莫比乌斯反演</tag>
        <tag>前缀和</tag>
      </tags>
  </entry>
  <entry>
    <title>Closest Equals</title>
    <url>/2020/09/15/Closest-Equals/</url>
    <content><![CDATA[<h1 id="Closest-Equals"><a href="#Closest-Equals" class="headerlink" title="Closest Equals"></a><a href="https://ac.nowcoder.com/acm/problem/110867" target="_blank" rel="noopener">Closest Equals</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意:"></a>题目大意:</h2><p>给你一串数,有$m$次询问,每次求问一个区间$[l,r]$,问在区间内最近的两个相同的数的距离是多少</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>第一反应就是记录一下这个值上一次出现的位置,这就可以记录一次答案了</p>
<p>然后可以构造出一个新的序列,因为当某两个可行的数在另外两个可行的数内时,外面的数是没有贡献的</p>
<p>然后就可以找到第一个$prev[i]\ge l$的$i$, 然后再找到最后一个$last[i]\le r$</p>
<p>这就构成了一个新的可行区间</p>
<p>那么如果找到的新的$r &lt; l$那么这就是无解的, 直接输出$-1$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, cnt, cur;</span><br><span class="line"><span class="keyword">int</span> a[maxn], d[maxn], p[maxn], f[maxn][<span class="number">25</span>];</span><br><span class="line"><span class="keyword">int</span> __prev[maxn],  __last[maxn], __log[maxn] = &#123;<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="built_in">map</span> &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Vis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> _lower_bound(<span class="keyword">int</span> x)</span><br><span class="line">&#123;</span><br><span class="line">    int l(1), r(cur), ans(cur + 1);</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r) &#123;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">mid</span><span class="params">((l + r) &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (__prev[mid] &lt; x) l = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> ans = mid, r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> _upper_bound(<span class="keyword">int</span> x)</span><br><span class="line">&#123;</span><br><span class="line">    int l(1), r(cur), ans(cur + 1);</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r) &#123;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">mid</span><span class="params">((l + r) &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (__last[mid] &lt;= x) l = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> ans = mid, r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">min__</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &lt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), m = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">1</span>); i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = __read();</span><br><span class="line">        <span class="keyword">if</span> (!Vis[temp]) Vis[temp] = ++cnt;</span><br><span class="line">        a[i] = Vis[temp];</span><br><span class="line">        <span class="keyword">int</span> j = p[a[i]];</span><br><span class="line">        p[a[i]] = i;</span><br><span class="line">        <span class="keyword">if</span> (__prev[cur] &gt;= j) <span class="keyword">continue</span>;</span><br><span class="line">        __prev[++cur] = j, __last[cur] = i, d[cur] = i - j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">1</span>); i &lt;= cur; ++i)</span><br><span class="line">        f[i][<span class="number">0</span>] = d[i], __log[i] = __log[i &gt;&gt; <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j(<span class="number">1</span>); (<span class="number">1</span> &lt;&lt; j) &lt;= cur; ++j)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">1</span>); i + (<span class="number">1</span> &lt;&lt; j) - <span class="number">1</span> &lt;= cur; ++i)</span><br><span class="line">            f[i][j] = min__(f[i][j - <span class="number">1</span>], f[i + (<span class="number">1</span> &lt;&lt; j - <span class="number">1</span>)][j - <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = _lower_bound(__read()), y = _upper_bound(__read());</span><br><span class="line">        <span class="keyword">if</span> (y &lt; x) &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> len = __log[y - x + <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, min__(f[x][len], f[y - (<span class="number">1</span> &lt;&lt; len) + <span class="number">1</span>][len]));</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>RMQ</tag>
        <tag>二分</tag>
      </tags>
  </entry>
  <entry>
    <title>[AFOI]区间与除法</title>
    <url>/2020/09/16/AFOI-%E5%8C%BA%E9%97%B4%E4%B8%8E%E9%99%A4%E6%B3%95/</url>
    <content><![CDATA[<h1 id="AFOI-区间与除法"><a href="#AFOI-区间与除法" class="headerlink" title="[AFOI]区间与除法"></a><a href="https://www.luogu.com.cn/problem/P5629" target="_blank" rel="noopener">[AFOI]区间与除法</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意:"></a>题目大意:</h2><p>给定一个序列$A$, 叫操作序列, 序列$B$, 叫原序列</p>
<p>给定一个除数$d$, 若$A_i$能够通过不断整除$d$变成$B_j$, 那么就称作$A_i$可以被$B_j$消除</p>
<p>有$q$次询问, 每次询问给定一个区间$[l,r]$</p>
<p>求在区间$[l,r]$中至少需要多少个原数才能消除$A_l\sim A_r$</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>拿着题的第一想法是把所有的$A$去操作一下, 得到可行的原数, 然后就能得到一个二进制数表示分别能被那些原数消除, 然后再贪心的求得答案</p>
<p>显然这样做是不好实现的</p>
<p><del>于是看看题解</del></p>
<p>真的是绝了!</p>
<p>那么久转化一下思路, 我们似乎可以把所有的数看成一个$d$进制的数</p>
<p>似乎这样就简单多了, 只要原数是$A_i$的某个前缀就可以了</p>
<p>如果某个原数是某个原数的<strong>真</strong>前缀, 那么我们只需要被包含的那个前缀即可</p>
<p>所以, 我们最后得到的每个$A_i$对应的原数一定是唯一的</p>
<p>那么这个时候, 直接或起来, 求这个二进制数有多少个$1$即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read()</span><br><span class="line">&#123;</span><br><span class="line">    ll x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll n, m, d, q;</span><br><span class="line">ll a[maxn], ys[maxn];</span><br><span class="line">ll f[maxn][<span class="number">22</span>], log_[maxn] = &#123;<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> Ch[maxn][<span class="number">15</span>], end[maxn], id;</span><br><span class="line"><span class="keyword">int</span> stk[maxn], top, cnt;</span><br><span class="line"><span class="keyword">bool</span> t[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">cf</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        stk[++top] = x % d;</span><br><span class="line">        x /= d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Insert</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cf(x);</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">root</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = top; i; --i) &#123;</span><br><span class="line">        <span class="keyword">int</span> now = stk[i];</span><br><span class="line">        <span class="keyword">if</span> (!Ch[root][now]) Ch[root][now] = ++id;</span><br><span class="line">        root = Ch[root][now];</span><br><span class="line">        <span class="keyword">if</span> (end[root]) <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    end[root] = ++cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Query</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cf(x);</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">root</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = top; i; --i) &#123;</span><br><span class="line">        <span class="keyword">int</span> now = stk[i];</span><br><span class="line">        <span class="keyword">if</span> (!Ch[root][now]) <span class="keyword">break</span>;</span><br><span class="line">        root = Ch[root][now];</span><br><span class="line">        <span class="keyword">if</span> (end[root]) <span class="keyword">return</span> end[root]; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), m = __read(), d = __read(), q = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i] = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) ys[i] = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) Insert(ys[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> k = Query(a[i]);</span><br><span class="line">        log_[i] = log_[i &gt;&gt; <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (~k) f[i][<span class="number">0</span>] = (<span class="number">1l</span>l &lt;&lt; k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= log_[n]; ++j)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i + (<span class="number">1</span> &lt;&lt; j) - <span class="number">1</span> &lt;= n; ++i)</span><br><span class="line">            f[i][j] = f[i][j - <span class="number">1</span>] | f[i + (<span class="number">1</span> &lt;&lt; j - <span class="number">1</span>)][j - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">while</span> (q--) &#123;</span><br><span class="line">        <span class="keyword">int</span> l = __read(), r = __read();</span><br><span class="line">        <span class="keyword">int</span> len = log_[r - l + <span class="number">1</span>];</span><br><span class="line">        ll ans = f[l][len] | f[r - (<span class="number">1</span> &lt;&lt; len) + <span class="number">1</span>][len];</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">cnt</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">while</span> (ans) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ans &amp; <span class="number">1</span>) ++cnt;</span><br><span class="line">            ans &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>倍增</tag>
        <tag>RMQ</tag>
        <tag>字典树</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>HAOI2015树上染色</title>
    <url>/2020/07/21/HAOI2015%E6%A0%91%E4%B8%8A%E6%9F%93%E8%89%B2/</url>
    <content><![CDATA[<h1 id="HAOI2015-树上染色"><a href="#HAOI2015-树上染色" class="headerlink" title="[HAOI2015]树上染色"></a><a href="https://loj.ac/problem/2124" target="_blank" rel="noopener">[HAOI2015]树上染色</a></h1><p>简单的说, 就是求树上所有边对答案的贡献之和</p>
<p>我们可以用$Dp[i][j]$表示以$i$为根的子树内, 有$j$个点为黑点的情况下, 这个子树中的边对答案的贡献之和</p>
<p>每次新加入一个$i$的子节点时, 另新节点中有$k$个黑点, 那么:</p>
<script type="math/tex; mode=display">
Dp[i][j]=max(Dp[i][j],\; Dp[i][j-k]+Dp[i_{new}]+W_{new}*Times);\\
其中Times=子树内的黑点*子树外的黑点+子树内的白点*子树外的白点</script><p>所以这道题就算是做完了</p>
<p>$Dp$一定要考虑好状态的<strong>表示, 转移和初始化</strong></p>
<h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">2e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> N, K, U, V, W, Size[Maxn];</span><br><span class="line"><span class="keyword">int</span> Head[Maxn], E[Maxn &lt;&lt; <span class="number">1</span>], Cost[Maxn &lt;&lt; <span class="number">1</span>], Next[Maxn &lt;&lt; <span class="number">1</span>], Cur;</span><br><span class="line">ll Dp[Maxn][Maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> U, <span class="keyword">int</span> V, <span class="keyword">int</span> W)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Next[++Cur] = Head[U];</span><br><span class="line">    Head[U] = Cur;</span><br><span class="line">    E[Cur] = V;</span><br><span class="line">    Cost[Cur] = W;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> U, <span class="keyword">int</span> _F)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Size[U] = <span class="number">1</span>;</span><br><span class="line">    Dp[U][<span class="number">0</span>] = Dp[U][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = Head[U]; i; i = Next[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> V = E[i];</span><br><span class="line">        <span class="keyword">if</span> (V == _F) <span class="keyword">continue</span>;</span><br><span class="line">        DFS(V, U);</span><br><span class="line">        Size[U] += Size[V];</span><br><span class="line">        <span class="keyword">int</span> W = Cost[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = min(K, Size[U]); i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= min(i, Size[V]); ++j)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Dp[U][i - j] == <span class="number">-1</span>) <span class="keyword">continue</span>;<span class="comment">//不成立的直接跳过</span></span><br><span class="line">                ll Val = W * ((ll)j * (K - j) + (ll)(Size[V] - j) * (N - K + j - Size[V]));</span><br><span class="line">                Dp[U][i] = max(Dp[U][i], Dp[U][i - j] + Dp[V][j] + Val);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(Dp, <span class="number">-1</span>, <span class="keyword">sizeof</span> Dp);<span class="comment">//初始化, 因为有些状态是不会成立的</span></span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d %d"</span>, &amp;N, &amp;K);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%d %d %d"</span>, &amp;U, &amp;V, &amp;W);</span><br><span class="line">        AddEdge (U, V, W), AddEdge(V, U, W);</span><br><span class="line">    &#125;</span><br><span class="line">    DFS (<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, Dp[<span class="number">1</span>][K]);</span><br><span class="line">    system (<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>树型Dp</tag>
      </tags>
  </entry>
  <entry>
    <title>HDU6035 Colorful Tree</title>
    <url>/2020/07/21/HDU6035%20Colorful%20Tree/</url>
    <content><![CDATA[<h1 id="Colorful-Tree"><a href="#Colorful-Tree" class="headerlink" title="Colorful Tree"></a><a href="https://vjudge.net/problem/HDU-6035" target="_blank" rel="noopener">Colorful Tree</a></h1><p>简言之, 求总权值减去不合法的权值</p>
<p>即对于每种颜色, 求不经过这种颜色的边的个数</p>
<p>考虑删除这种颜色, 那么剩下的点会构成几个连通块, 对于每个连通块的权值都为$Size*(Size-1)/2$</p>
<p>一遍$DFS$貌似可以解决了</p>
<h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> Head[Maxn], E[Maxn &lt;&lt; <span class="number">1</span>], Next[Maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> N, U, V, Tot, Cur, C[Maxn];</span><br><span class="line"><span class="keyword">bool</span> Vis[Maxn];</span><br><span class="line">ll Sum[Maxn], Size[Maxn];</span><br><span class="line">ll Res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> U, <span class="keyword">int</span> V)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Next[++Cur] = Head[U];</span><br><span class="line">    Head[U] = Cur;</span><br><span class="line">    E[Cur] = V;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> U, <span class="keyword">int</span> _F)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Size[U] = <span class="number">1</span>;</span><br><span class="line">    ll X = Sum[C[U]], Y = X;<span class="comment">//这一步很妙啊</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = Head[U]; i; i = Next[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> V = E[i];</span><br><span class="line">        <span class="keyword">if</span> (V == _F) <span class="keyword">continue</span>;</span><br><span class="line">        DFS (V, U);</span><br><span class="line">        Size[U] += Size[V];</span><br><span class="line">        ll Temp = Size[V] - Sum[C[U]] + X;<span class="comment">//好好想为啥</span></span><br><span class="line">        Res += (Temp - <span class="number">1</span>) * Temp / <span class="number">2</span>;</span><br><span class="line">        X = Sum[C[U]];</span><br><span class="line">    &#125;</span><br><span class="line">    Sum[C[U]] += Size[U] - (Sum[C[U]] - Y);<span class="comment">//简直妙哉</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span> (Head, <span class="number">0</span>, <span class="keyword">sizeof</span> Head);</span><br><span class="line">    <span class="built_in">memset</span> (Sum, <span class="number">0</span>, <span class="keyword">sizeof</span> Sum);</span><br><span class="line">    <span class="built_in">memset</span> (Vis, <span class="number">0</span>, <span class="keyword">sizeof</span> Vis);</span><br><span class="line">    Tot = Res = Cur = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Case</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;N) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        Init();</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">Cnt</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span> (<span class="string">"%d"</span>, C + i);</span><br><span class="line">            <span class="keyword">if</span> (!Vis[C[i]]) ++Cnt, Vis[C[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span> (<span class="string">"%d %d"</span>, &amp;U, &amp;V);</span><br><span class="line">            AddEdge(U, V), AddEdge(V, U);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        DFS(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        ll Ans = <span class="number">1l</span>l * N * (N - <span class="number">1</span>) * Cnt / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">            <span class="keyword">if</span> (Vis[i])</span><br><span class="line">            &#123;</span><br><span class="line">                ll Temp = N - Sum[i];</span><br><span class="line">                Ans -= Temp * (Temp - <span class="number">1</span>) / <span class="number">2</span>;<span class="comment">//这个是最后一个连通块</span></span><br><span class="line">            &#125; </span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"Case #%d: %lld\n"</span>, ++Case, Ans - Res);</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>树型Dp</tag>
      </tags>
  </entry>
  <entry>
    <title>[HEOI]2015公约数序列</title>
    <url>/2020/09/25/HEOI-2015%E5%85%AC%E7%BA%A6%E6%95%B0%E5%BA%8F%E5%88%97/</url>
    <content><![CDATA[<h1 id="HEOI2015-公约数数列"><a href="#HEOI2015-公约数数列" class="headerlink" title="[HEOI2015]公约数数列"></a><a href="https://www.luogu.com.cn/problem/P4108" target="_blank" rel="noopener">[HEOI2015]公约数数列</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给定一个序列，有两种操作</p>
<ul>
<li>修改第 $id$ 个数，让它变成$x$</li>
<li>查询最小的$id$，让他满足<script type="math/tex; mode=display">
(\otimes_{i=0}^{id}a_i)*\gcd(a_0,a_1\cdots a_{id})=x</script></li>
</ul>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这个$\gcd$有点东西，是这只可能不断变小的</p>
<p>所以这个是单调的，没鸟用</p>
<p>所以直接暴力分块乱搞，练练代码能力还是不错的选择</p>
<p>只是说有地方时可以优化的</p>
<p>比如说，当前$\gcd$前缀不是查询的$x$的约数，就可以直接跳过的</p>
<p>还有，如果说这个块对答案没有$\gcd$没有贡献，就可以直接二分查找异或前缀和了</p>
<p>然后似乎就完了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read()</span><br><span class="line">&#123;</span><br><span class="line">    ll x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) &#123;</span><br><span class="line">        x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (y == <span class="number">0</span>) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> gcd(y, x % y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll n, p, q, a[maxn], l[<span class="number">505</span>], r[<span class="number">505</span>], id[maxn];</span><br><span class="line">ll gd[maxn], xr[maxn], map_id[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (xr[x] == xr[y]) <span class="keyword">return</span> x &lt; y;</span><br><span class="line">    <span class="keyword">return</span> xr[x] &lt; xr[y];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">(ll pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pos &gt; l[id[pos]]) &#123;</span><br><span class="line">        gd[pos] = gcd(gd[pos - <span class="number">1</span>], a[pos]);</span><br><span class="line">        xr[pos] = xr[pos - <span class="number">1</span>] ^ a[pos];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        gd[pos] = xr[pos] = a[pos];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = pos + <span class="number">1</span>; i &lt;= r[id[pos]]; ++i) &#123;</span><br><span class="line">        gd[i] = gcd(gd[i - <span class="number">1</span>], a[i]);</span><br><span class="line">        xr[i] = xr[i - <span class="number">1</span>] ^ a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(map_id + l[id[pos]], map_id + r[id[pos]] + <span class="number">1</span>, cmp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Find</span><span class="params">(ll l, ll r, ll val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(l)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r) &#123;</span><br><span class="line">        <span class="function">ll <span class="title">mid</span> <span class="params">((l + r) &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (xr[map_id[mid]] &gt;= val) ans = mid, r = mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans(-1), q_gd(a[1]), q_xr(0);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= id[n] &amp;&amp; ans == <span class="number">-1</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x % gcd(q_gd, gd[r[i]])) &#123;</span><br><span class="line">            q_gd = gcd(q_gd, gd[r[i]]);</span><br><span class="line">            q_xr ^= xr[r[i]];</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (gcd(q_gd, gd[r[i]]) == q_gd) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x % q_gd == <span class="number">0</span>) &#123;</span><br><span class="line">                ll targer = (x / q_gd) ^ q_xr;</span><br><span class="line">                ll pos = Find(l[i], r[i], targer);</span><br><span class="line">                <span class="keyword">if</span> (xr[map_id[pos]] == targer) ans = map_id[pos];</span><br><span class="line">            &#125;</span><br><span class="line">            q_xr ^= xr[r[i]];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = l[i]; j &lt;= r[i]; ++j) &#123;</span><br><span class="line">                q_gd = gcd(q_gd, a[j]);</span><br><span class="line">                q_xr = q_xr ^ a[j];</span><br><span class="line">                <span class="keyword">if</span> (q_gd * q_xr == x) &#123;</span><br><span class="line">                    ans = j;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> Opt[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read();</span><br><span class="line">    p = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        a[i] = __read();</span><br><span class="line">        id[i] = (i - <span class="number">1</span>) / p + <span class="number">1</span>;</span><br><span class="line">        map_id[i] = i;</span><br><span class="line">        <span class="keyword">if</span> (!l[id[i]]) l[id[i]] = i;</span><br><span class="line">        r[id[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= id[n]; ++i) Update(l[i]);</span><br><span class="line"></span><br><span class="line">    q = __read();</span><br><span class="line">    <span class="keyword">while</span> (q--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%s"</span>, Opt);</span><br><span class="line">        <span class="keyword">if</span> (*Opt == <span class="string">'M'</span>) &#123;</span><br><span class="line">            ll pos = __read() + <span class="number">1</span>, x = __read();</span><br><span class="line">            a[pos] = x;</span><br><span class="line">            Update(pos);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ll x = __read();</span><br><span class="line">            ll ans = Query(x);</span><br><span class="line">            <span class="keyword">if</span> (ans == <span class="number">-1</span>) <span class="built_in">puts</span>(<span class="string">"no"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, ans - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>[HEOI2014]南园满地推轻絮</title>
    <url>/2020/09/03/HEOI2014-%E5%8D%97%E5%9B%AD%E6%BB%A1%E5%9C%B0%E6%8E%A8%E8%BD%BB%E7%B5%AE/</url>
    <content><![CDATA[<h1 id="HEOI2014-南园满地推轻絮"><a href="#HEOI2014-南园满地推轻絮" class="headerlink" title="[HEOI2014]南园满地推轻絮"></a><a href="https://www.luogu.com.cn/problem/P4105" target="_blank" rel="noopener">[HEOI2014]南园满地推轻絮</a></h1><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p>就是二分去找$\max(x)$, 满足$|a_i-b_i|\le x$</p>
<p>那么就是要让$b_i$尽可能小的满足$a_i-b_i&lt;x$，然后在保证$b_i$单调不下降的情况下，不等式是否成立</p>
<blockquote>
<p>  易证：</p>
<p> 当$x &gt; y$时，若$b_i$数组满足条件$a_i-b_i\le y$且$b_i$单调不下降，那么$b_i$数组也一定满足$a_i-b_i\le y$且$b_i$单调不下降</p>
<p> 那么有了这个性质就可以二分答案了，因为当小的取值成立时，大的取值一定成立</p>
</blockquote>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, sa, sb, sc, sd, p;</span><br><span class="line"><span class="keyword">int</span> l, r, ans, a[maxn], b[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="number">1l</span>l * sa * x  % p * x % p * x % p + <span class="number">1l</span>l * sb * x % p * x % p + <span class="number">1l</span>l * sc * x % p + sd) % p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">Check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    b[<span class="number">1</span>] = max(<span class="number">0</span>, a[<span class="number">1</span>] - x);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i] = max(b[i - <span class="number">1</span>], a[i] - x);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(b[i] - a[i]) &gt; x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d %d %d %d %d %d %d"</span>, &amp;n, &amp;sa, &amp;sb, &amp;sc, &amp;sd, a + <span class="number">1</span>, &amp;p);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) a[i] = (f(a[i - <span class="number">1</span>]) + f(a[i - <span class="number">2</span>])) % p, r = max(r, a[i]);</span><br><span class="line">    r = max(a[<span class="number">1</span>], r);</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (Check(mid)) ans = mid, r = mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>二分</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>Min_25筛</title>
    <url>/2020/09/20/Min-25%E7%AD%9B/</url>
    <content><![CDATA[<h1 id="Min-25筛"><a href="#Min-25筛" class="headerlink" title="Min_25筛"></a>Min_25筛</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>用来处理积性函数前缀和的不错选择， 时间复杂度为$O(\frac{n^{\frac 34}}{\log_2n})$，空间复杂度为$O(\sqrt n)$</p>
<p><strong>限制：</strong>要求质数$p$处的函数值是个多项式，且$p^k$处的函数值也容易计算</p>
<p><strong>规定：</strong></p>
<ul>
<li>$\mathbb{P}$表示素数集合</li>
<li>$cnt$表示$n$范围内的素数个数</li>
<li>$p_i$表示第$i$个素数，特别的$p_0=0$</li>
<li>$lpf(x)$表示$x$的最小质因子</li>
<li>$F(x)$是我们要求的一个积性函数</li>
<li>$f(i)$是我们构造出来的计算方式与$F(x)$相似的完全积性函数</li>
</ul>
<h2 id="计算方式"><a href="#计算方式" class="headerlink" title="计算方式"></a>计算方式</h2><p>大致思路是将$F(x)$分为两部分来考虑，一部分是素数，另一部分是合数</p>
<h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><ul>
<li><p>先考虑求解：</p>
<script type="math/tex; mode=display">
\sum_{i=1}^{cnt}F(p_i)=\sum_{x=1}^nF(x)[x\in \mathbb{P}]</script></li>
<li><p>定义二元函数$g$：</p>
<script type="math/tex; mode=display">
g(n,j)=\sum_{i=2}^nf(i)[i\in \mathbb{p}\;\lor\; lpf(i)>p_j]</script></li>
</ul>
<p><strong>注：</strong></p>
<ul>
<li><p>这里的$f(i)$的具体计算方式与$i\in\mathbb{p}$时的$F(i)$的计算方式相同，如当$F(x)=\varphi(x)$时$f(x)=x-1$，即得到的应当是一个完全积性函数</p>
</li>
<li><p>所以我们可以发现，当且仅当$j=cnt$时，所求得的值才是要求的值</p>
</li>
<li><p>这里可以易证$lpf(i)\le \sqrt n$，即若$lpf(j)^2\ge n$，则$g(n,j)=g(n,j-1)$，因为不存在$lpf(i)&gt;p_j$， 否则：</p>
<script type="math/tex; mode=display">
g(n,j)=g(n,j-1)-f(p_j)\cdot\big(g(\frac{n}{p_j},j-1)-g(p_{j-1},j-1)\big)</script></li>
</ul>
<p><strong>证明：</strong></p>
<script type="math/tex; mode=display">
\begin{align*}
g(n,j)&=\sum_{i=2}^nf(i)[i\in\mathbb{P}\;\lor\;lpf(i)>p_j]\\
g(n,j-1)&=\sum_{i=2}^nf(i)[i\in\mathbb{P}\;\lor\;lpf(i)>p_{j-1}]\\
\end{align*}</script><ul>
<li><p>那么我们就可以发现，从$j-1$递推到$j$的过程中，我们多计算了一部分贡献，就是$i\notin \mathbb{P} \;\land\; i\ne 1 \;\land\; lpf(i)=p_j$这一部分的贡献</p>
</li>
<li><p>所以我们要减去它们</p>
</li>
<li><p>那么这一部分共有的特点就是都存在最小的质因子$p_j$</p>
</li>
<li><p>那么我们就可以先把$f(p_j)$提出来</p>
</li>
<li><p>即剩下的部分的贡献可以表示为：$\big(g(\frac n{p_j},j-1)-g(p_j-1,j-1)\big)$</p>
</li>
</ul>
<blockquote>
<ul>
<li><p>关于</p>
</li>
<li><script type="math/tex; mode=display">
f(p_j)\cdot g(p_{j-1},j-1)</script></li>
<li><p>这一部分又可以写为:</p>
</li>
<li><script type="math/tex; mode=display">
\sum_{i=1}^{j-1}f(p_i\cdot p_j)</script></li>
<li><p>发现这一部分的数并满足上文所说的$i\notin \mathbb{P} \;\land\; i\ne 1 \;\land\; lpf(i)=p_j$，所以这不能减，得消掉</p>
</li>
</ul>
</blockquote>
<ul>
<li><p>于是就得到了$g$的递推式，进而可以将空间压缩至$\sqrt n$</p>
</li>
<li><p>对于$g$的第一维，其实只有$\frac n1,\frac n2,\frac n3\cdots\frac nn$这些值有被用到。观察递推式，第一位的转移只有$n\rightarrow \frac np$，而下取整又满足结合律：</p>
</li>
<li><script type="math/tex; mode=display">
\left\lfloor\frac{\lfloor\frac {n}{a}\rfloor}{b}\right\rfloor=\left\lfloor\frac{n}{ab}\right\rfloor</script></li>
<li><p>所以无论怎样，这个函数只会用到那么$\sqrt n$个值</p>
</li>
<li><p>对于$g$的第二维，转移只有$j\rightarrow j-1$，与此同时第一位也在缩小，所以我们从大到小更新，就可以直接滚掉第二维</p>
</li>
</ul>
<p><del>据说这一步的时间复杂度就是$O(\frac{n^{\frac {3}{4}}}{\log_2n})$</del></p>
<h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>现在，我们要求的就是</p>
<script type="math/tex; mode=display">
ans=\sum_{i=1}^nf(i)</script><ul>
<li><p>定义二元函数$S$：</p>
</li>
<li><script type="math/tex; mode=display">
S(n,j)=\sum_{i=2}^nF(i)[lpf(i)> p_j]</script></li>
<li><p>显然$ans=S(n,0)$</p>
</li>
<li><p>考虑将答案拆分成素数和合数两个部分计算</p>
</li>
<li><p>显然素数部分的贡献为 </p>
</li>
<li><script type="math/tex; mode=display">
S(n,j)_{素}=g(n,cnt)-g(p_j,j)</script></li>
<li><p>在考虑合数部分：枚举一批数的最小质因子为$p_k$，指数为$e$，那么就可以不重复的计算$lpf(i)\ge p_k$的合数</p>
</li>
<li><p>因为枚举了幂次，所以将${p_k}^e$提出来后，这批数就没有质因子$p_k$了，就可积了</p>
</li>
<li><p><strong>注意</strong>，${p_k}^e$并没有被看作合数，所以贡献是还要加上去的</p>
</li>
<li><p>不用记忆化，直接递归计算即可，边界为$p_j &gt;n,S(n,j)=0$</p>
</li>
<li><script type="math/tex; mode=display">
S(n,j)=g(n,cnt)-g(p_j,j)+\sum_{k=j}^{p_k^2\le n}\sum_{e=1}^{p_k^e\le n}F(p_k^e)(S(\left\lfloor\frac n{p_k^e}\right\rfloor,k)+[e\ne1]</script></li>
<li><p>总时间复杂度为$O(\frac{n^{\frac {3}{4}}}{\log_2n})$</p>
</li>
</ul>
<h2 id="时间复杂度分析"><a href="#时间复杂度分析" class="headerlink" title="时间复杂度分析"></a>时间复杂度分析</h2><script type="math/tex; mode=display">
 \begin{aligned} T(n) &= \sum_{i^{2} \le n} O\left(\pi\left(\sqrt{i}\right)\right) + \sum_{i^{2} \le n} O\left(\pi\left(\sqrt{\frac{n}{i}}\right)\right) \\ &= \sum_{i^{2} \le n} O\left(\frac{\sqrt{i}}{\ln{\sqrt{i}}}\right) + \sum_{i^{2} \le n} O\left(\frac{\sqrt{\frac{n}{i}}}{\ln{\sqrt{\frac{n}{i}}}}\right) \\ &= O\left(\int_{1}^{\sqrt{n}} \frac{\sqrt{\frac{n}{x}}}{\log{\sqrt{\frac{n}{x}}}} \mathrm{d} x\right) \\ &= O\left(\frac{n^{\frac{3}{4}}}{\log{n}}\right) \end{aligned}</script><p><del>直接表示看不懂好吧，跑路了</del></p>
<h1 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h1><h2 id="Min-25筛-1"><a href="#Min-25筛-1" class="headerlink" title="Min_25筛"></a><a href="https://www.luogu.com.cn/problem/P5325" target="_blank" rel="noopener">Min_25筛</a></h2><h3 id="题目大意："><a href="#题目大意：" class="headerlink" title="题目大意："></a>题目大意：</h3><p>求：$\sum_{i=1}^nF(i)$</p>
<p>其中$\forall p\in \mathbb{P}\quad\forall k\in[1,\inf]\quad F(p^k)=p^k(p^k-1)$</p>
<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>那么我们可以直接另$f(i) = i(i-1)$</p>
<p>然后就可以直接做了，完全的套式子，十分无脑</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> ll inv = <span class="number">166666668</span>;</span><br><span class="line"></span><br><span class="line">ll n;</span><br><span class="line">ll sq, tot, pr[maxn], id1[maxn], id2[maxn], w[maxn];</span><br><span class="line">ll cnt, sum1[maxn], sum2[maxn], g1[maxn], g2[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">inc</span><span class="params">(ll &amp;x, ll y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x += y;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= mod) x -= mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">add</span><span class="params">(ll x, ll y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll temp = x + y;</span><br><span class="line">    <span class="keyword">return</span> temp &gt;= mod ? temp - mod : temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sq = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= sq; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i]) pr[++cnt] = i;</span><br><span class="line">        <span class="keyword">for</span> (ll j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; pr[j] * i &lt;= sq; ++j) &#123;</span><br><span class="line">            vis[i * pr[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (!(i % pr[j])) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= cnt; ++i)</span><br><span class="line">        inc(sum1[i], add(sum1[i - <span class="number">1</span>], pr[i])),</span><br><span class="line">        inc(sum2[i], add(sum2[i - <span class="number">1</span>], <span class="number">1l</span>l * pr[i] * pr[i] % mod));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">id</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= sq) <span class="keyword">return</span> id1[x];</span><br><span class="line">    <span class="keyword">return</span> id2[n / x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">f1</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x %= mod;</span><br><span class="line">    <span class="keyword">return</span> x * (x + <span class="number">1</span>) / <span class="number">2</span> % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">f2</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x %= mod;</span><br><span class="line">    <span class="keyword">return</span> x * (x + <span class="number">1</span>) % mod * (<span class="number">2</span> * x % mod + <span class="number">1</span>) % mod * inv % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">S</span><span class="params">(ll x, ll j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pr[j] &gt; x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll ans = ((g2[id(x)] - g1[id(x)] + mod) % mod - (sum2[j] - sum1[j] + mod) % mod + mod) % mod;</span><br><span class="line">    <span class="keyword">for</span> (ll i = j + <span class="number">1</span>; i &lt;= cnt &amp;&amp; <span class="number">1l</span>l * pr[i] * pr[i] &lt;= x; ++i)</span><br><span class="line">        <span class="keyword">for</span> (ll e = <span class="number">1</span>, sp = pr[i]; sp &lt;= x; sp *= pr[i], ++e)</span><br><span class="line">            ans = (ans + sp % mod * (sp % mod - <span class="number">1</span>) % mod * (S(x / sp, i) + (e &gt; <span class="number">1</span>)) % mod) % mod;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%lld"</span>, &amp;n);</span><br><span class="line">    init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (ll l = <span class="number">1</span>, r; l &lt;= n; l = r + <span class="number">1</span>) &#123;</span><br><span class="line">        r = n / (n / l);</span><br><span class="line">        w[++tot] = n / l;</span><br><span class="line">        g1[tot] = f1(w[tot]) - <span class="number">1</span>, g2[tot] = f2(w[tot]) - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (w[tot] &lt;= sq) id1[w[tot]] = tot;</span><br><span class="line">        <span class="keyword">else</span> id2[n / w[tot]] = tot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= cnt; ++i)</span><br><span class="line">        <span class="keyword">for</span> (ll j = <span class="number">1</span>; j &lt;= tot &amp;&amp; <span class="number">1l</span>l * pr[i] * pr[i] &lt;= w[j]; ++j) &#123;</span><br><span class="line">            ll k = id(w[j] / pr[i]);</span><br><span class="line">            g1[j] = (g1[j] - pr[i] * (g1[k] - sum1[i - <span class="number">1</span>]) % mod + mod) % mod;</span><br><span class="line">            g2[j] = (g2[j] - <span class="number">1l</span>l * pr[i] * pr[i] % mod * (g2[k] - sum2[i - <span class="number">1</span>]) % mod + mod) % mod;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, (S(n, <span class="number">0</span>) + <span class="number">1</span>) % mod);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>参考资料：</strong></p>
<p><a href="http://jklover.hs-blog.cf/2019/06/05/min-25筛学习笔记/" target="_blank" rel="noopener">JKLover(姥爷的原味博客)</a></p>
<p><a href="https://oi-wiki.org/math/min-25/" target="_blank" rel="noopener">OI-wiki不是给人看的好东西</a></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>Min_25筛</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>CF703D Mishaka and Interesting sum</title>
    <url>/2020/09/15/Mishaka-and-Interesting-sum/</url>
    <content><![CDATA[<h1 id="CF703D-Mishka-and-Interesting-sum"><a href="#CF703D-Mishka-and-Interesting-sum" class="headerlink" title="CF703D Mishka and Interesting sum"></a><a href="https://www.luogu.com.cn/problem/CF703D" target="_blank" rel="noopener">CF703D Mishka and Interesting sum</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意:"></a>题目大意:</h2><p>给定一个序列, 有$m$次询问</p>
<p>每次询问会给你一个$[l, r]$, 让你求区间内出现偶数次的数的异或和</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h2><p>首先我们可以想到异或的某些性质:$x\otimes y \otimes x = y$</p>
<p>那么我们可以转化一下题目的意思, 我们可以先求一次区间的异或和, 再去异或一个东西, 可能就是我们想要的答案了</p>
<p>那么抑或什么呢, 按照由题意, 要异或一个能让奇数变成偶数的东西, 简单地说, 就是异或这个区间所有出现的数的异或和, 而并非整个区间的异或和</p>
<p>那么这个就和$\text{HH}$的项链有点类似了</p>
<p>时间复杂度就是一个$O(n\log n)$的了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; -x)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxn], sum[maxn], ans[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m, cnt, tree[maxn];</span><br><span class="line"><span class="keyword">int</span> __prev[maxn], __last[maxn];</span><br><span class="line"><span class="built_in">map</span> &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; T;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Node &amp; T) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> r &lt; T.r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;Que[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> val)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (p &lt;= n) &#123;</span><br><span class="line">        tree[p] ^= val;</span><br><span class="line">        p += lowbit(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        ans ^= tree[p];</span><br><span class="line">        p -= lowbit(p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Query(r) ^ Query(l - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">1</span>); i &lt;= n; i++) &#123;</span><br><span class="line">        a[i] = __read();</span><br><span class="line">        <span class="keyword">if</span> (!T[a[i]]) T[a[i]] = ++cnt;</span><br><span class="line">        <span class="keyword">int</span> p = T[a[i]];</span><br><span class="line">        __last[i] = __prev[p];</span><br><span class="line">        __prev[p] = i;</span><br><span class="line">        sum[i] = sum[i - <span class="number">1</span>] ^ a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    m = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">1</span>); i &lt;= m; ++i)</span><br><span class="line">        Que[i].l = __read(), Que[i].r = __read(), Que[i].id = i;</span><br><span class="line">    sort (Que + <span class="number">1</span>, Que + m + <span class="number">1</span>);</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">p</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">1</span>); i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="keyword">while</span> (p &lt;= Que[i].r) &#123;</span><br><span class="line">            <span class="keyword">if</span> (__last[p]) Update(__last[p], a[p]);\\确保这个数只有一次的贡献</span><br><span class="line">            Update(p, a[p]);</span><br><span class="line">            ++p;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[Que[i].id] = Query(Que[i].l, Que[i].r) ^ sum[Que[i].r] ^ sum[Que[i].l - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">1</span>); i &lt;= m; ++i) <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, ans[i]);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>数据结构</tag>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title>MooFest</title>
    <url>/2020/09/15/MooFest/</url>
    <content><![CDATA[<h1 id="MooFest"><a href="#MooFest" class="headerlink" title="MooFest"></a><a href="https://www.luogu.com.cn/problem/P5094" target="_blank" rel="noopener">MooFest</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>其实我们发现这个$\max$十分不好维护</p>
<p>就是说，如果已经保证了$v_i\ge v_j$，那么原式可以写为</p>
<script type="math/tex; mode=display">
\sum_{i=1}^nv_i\sum_{j=1}^ndis(i,j)</script><p>这个按照$v_i$从大到小就可以了吧</p>
<p>那么就是$\sum_{j=i+1}^ndis(i,j)$的问题了</p>
<p>这个看看数据，这个大概是需要一个$\log$的复杂度</p>
<p>那么发现像什么线段树，树状数组之类的<del>高级</del>数据结构就可以维护</p>
<p>就分成两种情况，一种是$x_p&gt;x_i$的，一种是$x_p &lt; x_i$的</p>
<p>那就分别求和，那么就可以写成这样</p>
<script type="math/tex; mode=display">
sum\{x_p[x_p>x_i]\}-cnt\{[x_p>x_i]\}*x_i+cnt\{[x_p<x_i]\}*x_i-sum\{x_p[x_p<x_i]\}</script><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>这个用了一个十分易懂的方式来维护</p>
<p>那就是先按照$x_i$从小到大排序</p>
<p>用树状数组一个点一个点插入，记录一下每头牛的$x_i$的排序，方便下文的删除操作</p>
<p>然后再按$v_i$从大到小排序</p>
<p>然后每次就查询完了就从树状数组中把这头牛删掉</p>
<p>然后重载了一下运算符，操作可能会方便一些吧</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span><span class="keyword">int</span> v, x, p;&#125;c[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmpx</span><span class="params">(node x, node y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.x &lt; y.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmpv</span><span class="params">(node x, node y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.v &gt; y.v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; -x)</span></span><br><span class="line"><span class="keyword">int</span> tree[maxn], cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> v, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (x &lt;= n) &#123;</span><br><span class="line">        tree[x] += v;</span><br><span class="line">        cnt[x] += p;</span><br><span class="line">        x += lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">inline pair&lt;int, int&gt; query(int x)</span><br><span class="line">&#123;</span><br><span class="line">    int ans(0), cur(0);</span><br><span class="line">    <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        ans += tree[x];</span><br><span class="line">        cur += cnt[x];</span><br><span class="line">        x -= lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> make_pair(ans, cur);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sum first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> num second</span></span><br><span class="line"></span><br><span class="line">pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; <span class="keyword">operator</span> - (pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; a, pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; b)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> make_pair (a.sum - b.sum, a.num - b.num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">inline pair&lt;int, int&gt; query(int l, int r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> query(r) - query(l);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span> (<span class="string">"%d %d"</span>, &amp;c[i].v, &amp;c[i].x);</span><br><span class="line">    sort (c + <span class="number">1</span>, c + n + <span class="number">1</span>, cmpx);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) add(i, c[i].x, <span class="number">1</span>), c[i].p = i;</span><br><span class="line">    sort (c + <span class="number">1</span>, c + n + <span class="number">1</span>, cmpv);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; r = query(c[i].p, n), l = query(c[i].p - <span class="number">1</span>);</span><br><span class="line">        ans += <span class="number">1l</span>l * c[i].v * (r.sum - r.num * c[i].x + l.num * c[i].x - l.sum);</span><br><span class="line">        add(c[i].p, -c[i].x, <span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>[NOI2018]屠龙勇士</title>
    <url>/2020/09/23/NOI2018-%E5%B1%A0%E9%BE%99%E5%8B%87%E5%A3%AB/</url>
    <content><![CDATA[<h1 id="NOI2018-屠龙勇士"><a href="#NOI2018-屠龙勇士" class="headerlink" title="[NOI2018]屠龙勇士"></a><a href="https://www.luogu.com.cn/problem/P4774" target="_blank" rel="noopener">[NOI2018]屠龙勇士</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>你有一些刀，然后要去杀龙吃</p>
<p>没把刀都有自己的攻击力</p>
<p>然后固定每次砍它多少刀，然后龙还会回血。。。</p>
<p>如果能刚好回到零，这龙才是彻底的死了，可以吃了</p>
<p>否则输出 $-1$ </p>
<h2 id="Sulotion"><a href="#Sulotion" class="headerlink" title="Sulotion"></a>Sulotion</h2><p>对于这些剑​🗡​，你可以写平衡树维护，支持查询，删除，还有插入操作（<del>还tm可能有重复元素</del>）</p>
<p>算了，$\text{STL}$大法好，$\text{multiset}$全都支持的，理论上平板电视也可以（我离$\text{AC}$只差一个$\text{C++11}$）</p>
<p>那么假设已经得到了所有应该用的剑，那么就可以得到如下好东西：</p>
<script type="math/tex; mode=display">
\begin{cases}
atk_2\cdot x\equiv a_1\pmod {p_1}\\
atk_2\cdot x\equiv a_2\pmod {p_2}\\
\quad\vdots\\ 
atk_3\cdot x\equiv a_3\pmod {p_3}\\
\end{cases}\\</script><p>还要满足所有的$atk_3\times x\ge p_3$</p>
<p>所以还要维护一个$\max(\left\lceil\frac {p_i}{atk_i}\right\rceil)$</p>
<p>那么把所有的$atk_i$的逆元乘到右边去似乎就可以了？</p>
<p>由于题目并不保证互质，所以再操作前是一定一定要判断操作是否是可行的</p>
<p>似乎就结束啦</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read()</span><br><span class="line">&#123;</span><br><span class="line">    ll x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll a[maxn], p[maxn], b[maxn];</span><br><span class="line">ll x, y, g;</span><br><span class="line"><span class="built_in">multiset</span> &lt;ll&gt; s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(ll a, ll b, ll &amp;x, ll &amp;y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        g = a;</span><br><span class="line">        <span class="keyword">return</span> ;     </span><br><span class="line">    &#125;</span><br><span class="line">    exgcd(b, a % b, y, x);</span><br><span class="line">    y -= a / b * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">mul</span><span class="params">(ll a, ll b, ll mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = a * b - (ll)((ld)a / mod * b + <span class="number">1e-8</span>) * mod;</span><br><span class="line">    <span class="keyword">return</span> res &lt; <span class="number">0</span> ? res + mod : res % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll T = __read();</span><br><span class="line">    <span class="built_in">multiset</span> &lt;ll&gt; :: iterator it;</span><br><span class="line">    __next: <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        ll n = __read(), m = __read();</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) a[i] = __read();</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) p[i] = __read();</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) b[i] = __read();</span><br><span class="line"></span><br><span class="line">        s.clear();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= m; ++i) s.insert(__read());</span><br><span class="line"></span><br><span class="line">        ll mx(0), c(0);</span><br><span class="line">        m = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            it = s.upper_bound(a[i]);</span><br><span class="line">            <span class="keyword">if</span> (it != s.begin()) --it;</span><br><span class="line">            ll atk = *it;</span><br><span class="line">            s.erase(it);</span><br><span class="line">            s.insert(b[i]);</span><br><span class="line">            mx = max(mx, (a[i] - <span class="number">1</span>) / atk + <span class="number">1</span>);</span><br><span class="line">            atk %= p[i], a[i] %= p[i];</span><br><span class="line">            <span class="keyword">if</span> (!atk &amp;&amp; a[i]) &#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">                <span class="keyword">goto</span> __next;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!atk &amp;&amp; !a[i]) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            exgcd(atk, p[i], x, y);</span><br><span class="line">            <span class="keyword">if</span> (a[i] % g) &#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">                <span class="keyword">goto</span> __next;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            p[i] /= g;</span><br><span class="line">            a[i] = mul(a[i] / g, (x % p[i] + p[i]) % p[i], p[i]);</span><br><span class="line"></span><br><span class="line">            exgcd(m, p[i], x, y);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ((a[i] - c) % g) &#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">                <span class="keyword">goto</span> __next;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            m = m / g * p[i];</span><br><span class="line">            c = (c + mul(mul(m / p[i], (x % m + m) % m, m), ((a[i] - c) % m + m) % m, m)) % m;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, c &gt;= mx ? c : c + m * ((mx - c - <span class="number">1</span>) / m + <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>数论</tag>
        <tag>数学</tag>
        <tag>同余方程</tag>
      </tags>
  </entry>
  <entry>
    <title>NOI2020游记</title>
    <url>/2020/08/18/NOI2020%E6%B8%B8%E8%AE%B0/</url>
    <content><![CDATA[

	<div class="row">
    <embed src="day1.pdf" width="100%" height="550" type="application/pdf">
	</div>



<h1 id="T1-美食家（delicacy）"><a href="#T1-美食家（delicacy）" class="headerlink" title="T1:美食家（delicacy）"></a>T1:<strong>美食家（delicacy）</strong></h1><p>不知道是个什么题，网络流也没想好怎么维护</p>
<p>暴力：<del>直接跑</del></p>
<p>先鸽着</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>NOI</tag>
        <tag>鸽~</tag>
      </tags>
  </entry>
  <entry>
    <title>NOIP2019</title>
    <url>/2020/09/16/NOIP2019/</url>
    <content><![CDATA[<h1 id="Day1T1-格雷码"><a href="#Day1T1-格雷码" class="headerlink" title="Day1T1 格雷码"></a>Day1T1 <a href="https://www.luogu.com.cn/problem/P5657" target="_blank" rel="noopener">格雷码</a></h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这个找找规律模拟一下即可, 注意要开$\text{ULL}$, 否则会挂掉</p>
<p><del>规律记不得了</del></p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line">ll N(1), M, K;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; M &gt;&gt; K;</span><br><span class="line">    <span class="keyword">while</span> (--M) N &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (N)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (K &gt;= N) <span class="built_in">putchar</span>(<span class="string">'1'</span>), K = N - K % N - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">putchar</span>(<span class="string">'0'</span>);</span><br><span class="line">        N &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Day1T2-括号树"><a href="#Day1T2-括号树" class="headerlink" title="Day1T2 括号树"></a>Day1T2 <a href="https://www.luogu.com.cn/problem/P5658" target="_blank" rel="noopener">括号树</a></h1><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><p>用栈进行括号匹配, 如果能匹配上, 那么当前位置的答案就是他的父节点的答案加上这个节点有的贡献, 那么就十分的简单了</p>
<h2 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read()</span><br><span class="line">&#123;</span><br><span class="line">    ll x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll stk[maxn], f[maxn], top, cur, ans;</span><br><span class="line">ll sta[maxn], sum[maxn], size[maxn];</span><br><span class="line">ll head[maxn], _edge[maxn], _next[maxn];</span><br><span class="line"><span class="keyword">char</span> opt[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Addedge</span><span class="params">(ll u, ll v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    _next[++cur] = head[u];</span><br><span class="line">    head[u] = cur;</span><br><span class="line">    _edge[cur] = v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(ll u, ll fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">left</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (sta[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (top) &#123;</span><br><span class="line">            left = stk[top];</span><br><span class="line">            size[u] = size[f[left]] + <span class="number">1</span>;</span><br><span class="line">            --top;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> stk[++top] = u;</span><br><span class="line">    sum[u] = sum[fa] + size[u];</span><br><span class="line">    <span class="keyword">for</span> (ll i = head[u]; i; i = _next[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (_edge[i] == fa) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(_edge[i], u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (left) stk[++top] = left;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (top) --top;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n = __read();</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%s"</span>, opt + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) sta[i] = (opt[i] == <span class="string">')'</span>);</span><br><span class="line">    <span class="keyword">for</span> (ll i(<span class="number">2</span>); i &lt;= n; ++i) &#123;</span><br><span class="line">        f[i] = __read();</span><br><span class="line">        Addedge(f[i], i);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) ans ^= (i * sum[i]);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Day1T3-树上的数"><a href="#Day1T3-树上的数" class="headerlink" title="Day1T3 树上的数"></a>Day1T3 <a href="https://www.luogu.com.cn/problem/P5659" target="_blank" rel="noopener">树上的数</a></h1><p>鸽~</p>
<hr>
<h1 id="Day2T1-Emiya-家今天的饭"><a href="#Day2T1-Emiya-家今天的饭" class="headerlink" title="Day2T1 Emiya 家今天的饭"></a>Day2T1 <a href="https://www.luogu.com.cn/problem/P5664" target="_blank" rel="noopener">Emiya 家今天的饭</a></h1><h2 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h2><p>那么首先考虑容斥, 我们用所有方案减去不可行的方案</p>
<p>设计转移方程 : $Dp[i][j][k]$表示在第$i$种烹饪方式时选择第$j$种食材, 且这种食材比其他食材多用了$k$次</p>
<p>由于$k$有可能是负数, 所以我们给了一个$n$的偏移量</p>
<p>那么$Dp[i][j][k]=Dp[i-1][j][k]+Dp[i-1][k-1]<em>a[i][j]+Dp[i-1][k+1]</em>(sum[i]-a[i][j])$</p>
<p>所以不可行的方案就是$k&gt;n$的方案数</p>
<p>减去即可</p>
<h2 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">110</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn * <span class="number">20</span>], sum[maxn][maxn * <span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> f[maxn][maxn * <span class="number">20</span>][maxn &lt;&lt; <span class="number">1</span>], ans(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = __read(), m = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j) sum[i][<span class="number">0</span>] = (sum[i][<span class="number">0</span>] + (a[i][j] = __read())) % mod;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j) sum[i][j] = (sum[i][<span class="number">0</span>] - a[i][j] + mod) % mod;</span><br><span class="line">        ans = <span class="number">1l</span>l * ans * (sum[i][<span class="number">0</span>] + <span class="number">1</span>) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    ans -= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j) &#123;</span><br><span class="line">        f[<span class="number">0</span>][j][n] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = n - i; k &lt;= n + i; ++k)</span><br><span class="line">                f[i][j][k] = (f[i - <span class="number">1</span>][j][k] + <span class="number">1l</span>l * f[i - <span class="number">1</span>][j][k - <span class="number">1</span>] * a[i][j] % mod + <span class="number">1l</span>l * sum[i][j] * f[i - <span class="number">1</span>][j][k + <span class="number">1</span>] % mod) % mod; </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            ans = (ans - f[n][j][n + i] + mod) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Day2T2-划分"><a href="#Day2T2-划分" class="headerlink" title="Day2T2 划分"></a>Day2T2 划分</h1><p>别急, 先鸽鸽~</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>NOI</tag>
        <tag>鸽~</tag>
        <tag>Dp优化</tag>
      </tags>
  </entry>
  <entry>
    <title>P1491集合位置</title>
    <url>/2020/07/20/P1491%E9%9B%86%E5%90%88%E4%BD%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="P1491-集合位置"><a href="#P1491-集合位置" class="headerlink" title="P1491 集合位置"></a><a href="https://www.luogu.com.cn/problem/P1491" target="_blank" rel="noopener">P1491 集合位置</a></h1><p>简言之: 求<strong>不严格</strong>的次短路</p>
<p>emmmm, 这个我们考虑$A^*$算法</p>
<p>估价函数$f(x)=g(x)+h(x)$, 其中$g(x)$表示从起点到$x$的花费, $h(x)$表示从$x$到终点的期望最小花费, 这个可以先跑一遍最短路处理出来</p>
<p>然后就是一个优先队列, 关键字为$f(x)$的升序队列, 跑一遍, 第$k$次跑到的终点就是$k$短路了</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">205</span>;</span><br><span class="line">pair &lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; P[Maxn];</span><br><span class="line"><span class="keyword">bool</span> Vis[Maxn];</span><br><span class="line"><span class="keyword">double</span> H[Maxn], Cost[<span class="number">40005</span>];</span><br><span class="line"><span class="keyword">int</span> Head[Maxn], Next[<span class="number">40005</span>], E[<span class="number">40005</span>], Cur;</span><br><span class="line"><span class="keyword">int</span> N, M, X, Y;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ANode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> X;</span><br><span class="line">    <span class="keyword">double</span> Dis;</span><br><span class="line">    <span class="keyword">bool</span> Vis[Maxn];</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> ANode &amp;Temp) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> Dis + H[X] &gt; Temp.Dis + H[Temp.X];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Dis</span><span class="params">(<span class="keyword">int</span> U, <span class="keyword">int</span> V)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="keyword">double</span>(P[U].x - P[V].x) * <span class="keyword">double</span>(P[U].x - P[V].x) + <span class="keyword">double</span>(P[U].y - P[V].y) * <span class="keyword">double</span>(P[U].y - P[V].y));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> U, <span class="keyword">int</span> V)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Next[++Cur] = Head[U];</span><br><span class="line">    Head[U] = Cur;</span><br><span class="line">    E[Cur] = V;</span><br><span class="line">    Cost[Cur] = Dis(U, V);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">SPFA</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) H[i] = <span class="number">1e9</span>;</span><br><span class="line">    <span class="built_in">queue</span> &lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    Q.push(N);</span><br><span class="line">    H[N] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> X = Q.front();</span><br><span class="line">        Vis[X] = <span class="number">0</span>;</span><br><span class="line">        Q.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = Head[X]; i; i = Next[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (H[E[i]] &lt;= H[X] + Cost[i]) <span class="keyword">continue</span>;</span><br><span class="line">            H[E[i]] = H[X] + Cost[i];</span><br><span class="line">            <span class="keyword">if</span> (Vis[E[i]]) <span class="keyword">continue</span>;</span><br><span class="line">            Vis[E[i]] = <span class="number">1</span>;</span><br><span class="line">            Q.push(E[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">GetRoad</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    priority_queue &lt;ANode&gt; Q;</span><br><span class="line">    ANode Now = ANode&#123;<span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    Now.Vis[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    Q.push(Now);</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Count</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        Now = Q.top();</span><br><span class="line">        Q.pop();</span><br><span class="line">        <span class="keyword">if</span> (Now.X == N)++Count;</span><br><span class="line">        <span class="keyword">if</span> (Count == <span class="number">2</span>) <span class="keyword">return</span> Now.Dis;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = Head[Now.X]; i; i = Next[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Now.Vis[E[i]]) <span class="keyword">continue</span>;</span><br><span class="line">            ANode Nxt = Now;</span><br><span class="line">            Nxt.X = E[i], Nxt.Dis = Now.Dis + Cost[i];</span><br><span class="line">            Nxt.Vis[E[i]] = <span class="number">1</span>;</span><br><span class="line">            Q.push(Nxt);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;N, &amp;M);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) <span class="built_in">scanf</span> (<span class="string">"%d %d"</span>, &amp;P[i].x, &amp;P[i].y);</span><br><span class="line">    <span class="keyword">while</span> (M--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%d %d"</span>, &amp;X, &amp;Y);</span><br><span class="line">        AddEdge(X, Y), AddEdge(Y, X);</span><br><span class="line">    &#125;</span><br><span class="line">    SPFA();</span><br><span class="line">    <span class="keyword">double</span> Ans = GetRoad();</span><br><span class="line">    <span class="keyword">if</span> (Ans &lt; <span class="number">0.0</span>) <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%.2lf"</span>, Ans);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>k短路</tag>
        <tag>最短路</tag>
      </tags>
  </entry>
  <entry>
    <title>P1587[NOI2016]循环之美</title>
    <url>/2020/08/06/P1587%5BNOI2016%5D%E5%BE%AA%E7%8E%AF%E4%B9%8B%E7%BE%8E/</url>
    <content><![CDATA[<h1 id="P1587-NOI2016-循环之美"><a href="#P1587-NOI2016-循环之美" class="headerlink" title="P1587[NOI2016]循环之美"></a><a href="https://www.luogu.com.cn/problem/P1587" target="_blank" rel="noopener">P1587[NOI2016]循环之美</a></h1><p>emmmmm</p>
<p>这是一道莫比乌斯反演+杜教筛的好题</p>
<p>题目就不赘述了，即求：</p>
<script type="math/tex; mode=display">
\sum_{i=1}^n\sum_{j=1}^m[i\perp j][j\perp k]</script><p>这个看完题应该就知道怎么证明了</p>
<p>好，继续化简式子:</p>
<p>$Step\;One:$</p>
<script type="math/tex; mode=display">
\begin{align*}
&\quad\sum_{j=1}^m[j\perp k]\sum_{i=1}^n[i\perp j]\\
&=\sum_{j=1}^m[j\perp k]\sum_{i=1}^n\sum_{d|\gcd(i,j)}\mu(d)\\
&=\sum_{d=1}^{\min(n, m)}\frac nd\mu(d)\sum_{j=1}^{\frac md}[jd\perp k]\\
&=\sum_{d=1}^{\min(n, m)}\frac nd\mu(d)[d\perp k]\sum_{j=1}^{\frac md}[j\perp k]
\end{align*}</script><p>$Step\;Two:$</p>
<p>考虑拆分$\sum\limits_{j=1}^{\frac md}[j\perp k]$</p>
<p>你可以莫比乌斯反演，但是那样就太麻烦了，这个我们可以考虑用欧拉函数和剩余系的方法来处理，于是有：</p>
<script type="math/tex; mode=display">
f(n)=\frac nk\varphi(k)+f(n\%k)</script><p>这个可以预处理+度教筛</p>
<p>$Step\;Three:$</p>
<p>考虑</p>
<script type="math/tex; mode=display">
\begin{align*}
g(n,k)&=\sum_{d=1}^n\mu(d)[d\perp k]\\
&=\sum_{d=1}^n\mu(d)\sum_{d\prime|(d,k)}\mu(d\prime)\\
&=\sum_{d=1}^n\mu(d)\sum_{d\prime|d,d\prime |k}\mu(d\prime)\\
&=\sum_{d\prime=1}^n...
\end{align*}</script><p>先说下一种的</p>
<p>考虑先处理$[j\perp k]$，化简可以得到</p>
<script type="math/tex; mode=display">
\begin{align*}
f(n,m,k)&=\sum_{i=1}^n\sum_{j=1}^m[i\perp j][j\perp k]\\
&=\sum_{d|k}\mu(d)f(\frac md,n,d)
\end{align*}</script><p>边界就不用说了？</p>
<p>看代码</p>
<p>​    </p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>莫比乌斯反演</tag>
      </tags>
  </entry>
  <entry>
    <title>P2675三角圣地</title>
    <url>/2020/07/20/P2675%E4%B8%89%E8%A7%92%E5%9C%A3%E5%9C%B0/</url>
    <content><![CDATA[<h1 id="P2675-《瞿葩的数字游戏》T3-三角圣地"><a href="#P2675-《瞿葩的数字游戏》T3-三角圣地" class="headerlink" title="P2675 《瞿葩的数字游戏》T3-三角圣地"></a><a href="https://www.luogu.com.cn/problem/P2675" target="_blank" rel="noopener">P2675 《瞿葩的数字游戏》T3-三角圣地</a></h1><blockquote>
<p> emmmmm, 这眨眼一看像是个杨辉三角之类的东西, 定眼一看好像不太对啊</p>
</blockquote>
<p>每次把上面两堆合并起来, 显然越靠近中间在最后的结果中出现次数越多, 越靠近两端次数越少, 考虑贪心</p>
<p>所以数列大概长成这个样子:</p>
<script type="math/tex; mode=display">
2, 4, 6,\cdots,2(k-1),2k,2k-1,\cdots,5,3,1</script><p>所以可以得出: $2k-1$与$2k$出现的频率是相通的<del>并没啥用</del></p>
<p>答案可以记为: </p>
<script type="math/tex; mode=display">
Ans = \sum\limits_{i=1}^nc_i\cdot A_i</script><p>打一个表, 与似乎发现系数就$TM$是杨辉三角了啊, 模数很小, 快乐$Lucas$</p>
<h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">1e6</span> + <span class="number">10</span>, Mod = <span class="number">1e4</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> N, Ans;</span><br><span class="line"><span class="keyword">int</span> Num[Maxn], Fac[Maxn] = &#123;<span class="number">1</span>&#125;, Inv[Maxn] = &#123;<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Pow</span><span class="params">(<span class="keyword">int</span> X, <span class="keyword">int</span> Y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (Y)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Y &amp; <span class="number">1</span>) Ans = Ans * X % Mod;</span><br><span class="line">        X = X * X % Mod;</span><br><span class="line">        Y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) Fac[i] = Fac[i - <span class="number">1</span>] * i % Mod;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) Inv[i] = Pow(Fac[i], Mod - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> N, <span class="keyword">int</span> M)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (M &gt; N) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> Fac[N] * Inv[M] % Mod * Inv[N - M] % Mod; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Lucas</span><span class="params">(<span class="keyword">int</span> N, <span class="keyword">int</span> M)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!M) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> Lucas(N / Mod, M / Mod) * C(N % Mod, M % Mod) % Mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    Init();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; i += <span class="number">2</span>) Num[i &gt;&gt; <span class="number">1</span>] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i += <span class="number">2</span>) Num[N - (i &gt;&gt; <span class="number">1</span>)] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) Ans = (Ans + Num[i] % Mod * Lucas(N - <span class="number">1</span>, i - <span class="number">1</span>) % Mod) % Mod;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, Ans % Mod);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>数论</tag>
        <tag>Lucas</tag>
      </tags>
  </entry>
  <entry>
    <title>P2599取石子游戏</title>
    <url>/2020/07/13/P2599%E5%8F%96%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<h1 id="P2599-ZJOI2009-取石子游戏"><a href="#P2599-ZJOI2009-取石子游戏" class="headerlink" title="P2599 [ZJOI2009]取石子游戏"></a><a href="https://www.luogu.com.cn/problem/P2599" target="_blank" rel="noopener"><strong>P2599 [ZJOI2009]取石子游戏</strong></a></h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>在研究过$Nim$游戏及各种变种之后，$Orez$又发现了一种全新的取石子游戏，这个游戏是这样的： 有$n$堆石子，将这$n$堆石子摆成一排。游戏由两个人进行，两人轮流操作，每次操作者都可以从最左或最右的一堆中取出若干颗石子，可以将那一堆全部取掉，但不能不取，不能操作的人就输了。 $Orez$问：对于任意给出一个初始一个局面，是否存在先手必胜策略。</p>
<h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>文件的第一行为一个整数$T$，表示有 $T$组测试数据。</p>
<p>对于每组测试数据，第一行为一个整数$n$，表示有$n$堆石子; 第二行为$n$个整数$a_i$，依次表示每堆石子的数目。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每组测试数据仅输出一个整数$0$或$1$。其中$1$表示有先手必胜策略，$0$表示没有。</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><blockquote>
<p>如果最靠外边的两堆不一样, 那就先取高的那一堆的一个</p>
<p>然后后手取了几个, 先手就会跟着后手在另一堆中取相同的个石子</p>
<p>易证当两堆的差大于$1$时, 后手一定会先取完一堆</p>
<p>先手该取的那一堆还有石子</p>
<p>谔谔, 出了一点小问题?</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> T, N, A[Maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i) <span class="built_in">scanf</span> (<span class="string">"%d"</span>, A + i);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(A[<span class="number">0</span>] - A[N - <span class="number">1</span>]) &lt;= <span class="number">1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (A[<span class="number">0</span>] == <span class="number">1</span> || A[N - <span class="number">1</span>] == <span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>Nim游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>P3810[模板]三位偏序</title>
    <url>/2020/07/27/P3810%5B%E6%A8%A1%E6%9D%BF%5D%E4%B8%89%E4%BD%8D%E5%81%8F%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="P3810-【模板】三维偏序（陌上花开）"><a href="#P3810-【模板】三维偏序（陌上花开）" class="headerlink" title="P3810 【模板】三维偏序（陌上花开）"></a><a href="https://www.luogu.com.cn/problem/P3810" target="_blank" rel="noopener">P3810 【模板】三维偏序（陌上花开）</a></h1><p>这道题, 刚看题时, 感觉就是把三个元素压缩成一个元素, 然后就是一个逆序对这样的一个问题 .</p>
<p>但是, 三个条件要求的是要同时成立, 所以, 不能这样做</p>
<p>既然想到逆序对了, 那么我们就可以先让其中的两维变成有序的, 剩下的一维, 就类似一个逆序对了</p>
<ul>
<li>首先对$X$进行排序</li>
<li>分治, 在每个块中对$Y$排序</li>
<li>对$Z$做逆序对, 此时$Z$是有限制条件的, 它依赖于$X,Y$的取值大小</li>
</ul>
<h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; (-x))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> X, Y, Z, Ans, W;</span><br><span class="line">&#125;A[Maxn], B[Maxn];</span><br><span class="line"><span class="keyword">int</span> Cnt, Ans[Maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> K, N;</span><br><span class="line"><span class="keyword">int</span> Tree[Maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">Cmpa</span><span class="params">(Node A, Node B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (A.X == B.X) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (A.Y == B.Y) <span class="keyword">return</span> A.Z &lt; B.Z;</span><br><span class="line">        <span class="keyword">return</span> A.Y &lt; B.Y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> A.X &lt; B.X;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">Cmpy</span><span class="params">(Node A, Node B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (A.Y == B.Y) <span class="keyword">return</span> A.Z &lt; B.Z;</span><br><span class="line">    <span class="keyword">return</span> A.Y &lt; B.Y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Ask</span><span class="params">(<span class="keyword">int</span> P)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (P)</span><br><span class="line">    &#123;</span><br><span class="line">        Ans += Tree[P];</span><br><span class="line">        P -= lowbit(P);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> P, <span class="keyword">int</span> Val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (P &lt;= K)</span><br><span class="line">    &#123;</span><br><span class="line">        Tree[P] += Val;</span><br><span class="line">        P += lowbit(P);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">CDQ</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (L == R) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> Mid = (L + R) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    CDQ (L, Mid), CDQ (Mid + <span class="number">1</span>, R);</span><br><span class="line">    sort (A + L, A + Mid + <span class="number">1</span>, Cmpy);</span><br><span class="line">    sort (A + Mid + <span class="number">1</span>, A + R + <span class="number">1</span>, Cmpy);</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">j</span><span class="params">(L)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = Mid + <span class="number">1</span>; i &lt;= R; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (A[j].Y &lt;= A[i].Y &amp;&amp; j &lt;= Mid)</span><br><span class="line">            Add(A[j].Z, A[j].W), ++j;</span><br><span class="line">        A[i].Ans += Ask(A[i].Z);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = L; i &lt; j; ++i) Add(A[i].Z, -A[i].W);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d %d"</span>, &amp;N, &amp;K);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%d %d %d"</span>, &amp;B[i].X, &amp;B[i].Y, &amp;B[i].Z);</span><br><span class="line"></span><br><span class="line">    sort (B + <span class="number">1</span>, B + N + <span class="number">1</span>, Cmpa);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, C = <span class="number">0</span>; i &lt;= N; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        ++C;</span><br><span class="line">        <span class="keyword">if</span> (B[i].X != B[i + <span class="number">1</span>].X || B[i].Y != B[i + <span class="number">1</span>].Y || B[i].Z != B[i + <span class="number">1</span>].Z)</span><br><span class="line">            A[++Cnt] = B[i], A[Cnt].W = C, C = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    CDQ (<span class="number">1</span>, Cnt);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Cnt; ++i)</span><br><span class="line">        Ans[A[i].Ans + A[i].W - <span class="number">1</span>] += A[i].W;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i) <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, Ans[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不明白为啥叫$CDQ$, 大雾</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>分治</tag>
      </tags>
  </entry>
  <entry>
    <title>P4180严格次小生成树</title>
    <url>/2020/07/21/P4180%E4%B8%A5%E6%A0%BC%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/</url>
    <content><![CDATA[<h1 id="P4180-BJWC2010-严格次小生成树"><a href="#P4180-BJWC2010-严格次小生成树" class="headerlink" title="P4180 [BJWC2010]严格次小生成树"></a><a href="https://www.luogu.com.cn/problem/P4180" target="_blank" rel="noopener">P4180 [BJWC2010]严格次小生成树</a></h1><p>题意同标题</p>
<p>最小生成树就不用说了, 那么次小生成树就是枚举剩下的边, 把它加入到我们的最小生成树中, 这样就构成了一个奇环树, 考虑这条新加入的边能够取代哪一条边, 能使新生成的树为一颗与原来全职不相等的树?</p>
<p>显然答案是取代第一个长度严格小于新加入的边的那一条, 关于这一条边, 我们可以维护树上两点间的最大边权和严格次大边权</p>
<p>因为做这道题时, <del>没发现写树剖维护的</del>, 觉得倍增写着挺好看的, 于是就写了个倍增维护的</p>
<h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">1e5</span> + <span class="number">10</span>, Maxm = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> N, M, MinInc(<span class="number">1e9</span> + <span class="number">10</span>);</span><br><span class="line"><span class="keyword">int</span> F[Maxn][<span class="number">20</span>], Max[Maxn][<span class="number">20</span>], SMax[Maxn][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> Depth[Maxn], Fa[Maxn];</span><br><span class="line"><span class="keyword">int</span> Head[Maxn], E[Maxm &lt;&lt; <span class="number">1</span>], Next[Maxm &lt;&lt; <span class="number">1</span>], Cost[Maxm &lt;&lt; <span class="number">1</span>], Cur;</span><br><span class="line">ll Ans;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> U, V, W;</span><br><span class="line">    <span class="keyword">bool</span> In;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Node &amp;Temp) <span class="keyword">const</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> W &lt; Temp.W;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;_E[Maxm];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> X)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Fa[X] == X) <span class="keyword">return</span> X;</span><br><span class="line">    <span class="keyword">return</span> Fa[X] = Find(Fa[X]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> U, <span class="keyword">int</span> V, <span class="keyword">int</span> W)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Next[++Cur] = Head[U];</span><br><span class="line">    Head[U] = Cur;</span><br><span class="line">    E[Cur] = V;</span><br><span class="line">    Cost[Cur] = W;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">MST</span><span class="params">(<span class="keyword">int</span> Cnt = <span class="number">0</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) Fa[i] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; Cnt != N - <span class="number">1</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> U = _E[i].U, V = _E[i].V, FU = Find(U), FV = Find(V);</span><br><span class="line">        <span class="keyword">if</span> (FU == FV) <span class="keyword">continue</span>;</span><br><span class="line">        Fa[FV] = FU;</span><br><span class="line">        ++Cnt;</span><br><span class="line">        _E[i].In = <span class="number">1</span>;</span><br><span class="line">        Ans += _E[i].W;</span><br><span class="line">        AddEdge(U, V, _E[i].W);</span><br><span class="line">        AddEdge(V, U, _E[i].W);<span class="comment">//建边</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//最小生成树</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> X, <span class="keyword">int</span> _f, <span class="keyword">int</span> WEdge, <span class="keyword">int</span> Dep)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Depth[X] = Dep, F[X][<span class="number">0</span>] = _f, Max[X][<span class="number">0</span>] = WEdge, SMax[X][<span class="number">0</span>] = <span class="number">-1</span>; </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; (<span class="number">1</span> &lt;&lt; i) &lt;= Dep; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        F[X][i] = F[F[X][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">        Max[X][i] = max(Max[X][i - <span class="number">1</span>], Max[F[X][i - <span class="number">1</span>]][i - <span class="number">1</span>]);<span class="comment">//倍增维护最大的边</span></span><br><span class="line">        SMax[X][i] = max(SMax[X][i - <span class="number">1</span>], SMax[F[X][i - <span class="number">1</span>]][i - <span class="number">1</span>]);<span class="comment">//次大</span></span><br><span class="line">        <span class="keyword">if</span> (Max[X][i - <span class="number">1</span>] &lt; Max[X][i]) SMax[X][i] = max(SMax[X][i], Max[X][i - <span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Max[X][i - <span class="number">1</span>] &gt; Max[F[X][i - <span class="number">1</span>]][i - <span class="number">1</span>]) SMax[X][i] = max(SMax[X][i], Max[F[X][i - <span class="number">1</span>]][i - <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = Head[X]; i; i = Next[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> V = E[i];</span><br><span class="line">        <span class="keyword">if</span> (V == _f) <span class="keyword">continue</span>;</span><br><span class="line">        DFS(V, X, Cost[i], Dep + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> X, <span class="keyword">int</span> Y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Depth[X] &lt; Depth[Y]) X ^= Y ^= X ^= Y;</span><br><span class="line">    <span class="keyword">int</span> K = Depth[X] - Depth[Y];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">17</span>; ++i)</span><br><span class="line">        <span class="keyword">if</span> (K &gt;&gt; i &amp; <span class="number">1</span>) X = F[X][i];</span><br><span class="line">    <span class="keyword">if</span> (X == Y) <span class="keyword">return</span> X;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">17</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">        <span class="keyword">if</span> (F[X][i] != F[Y][i]) X = F[X][i], Y = F[Y][i];</span><br><span class="line">    <span class="keyword">return</span> F[X][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Work</span><span class="params">(<span class="keyword">int</span> S, <span class="keyword">int</span> T, <span class="keyword">int</span> _W)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    int Ans(0), K = Depth[S] - Depth[T];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">17</span>; ++i)</span><br><span class="line">        <span class="keyword">if</span> (K &gt;&gt; i &amp; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Max[S][i] != _W) Ans = max(Ans, Max[S][i]);</span><br><span class="line">            <span class="keyword">else</span> Ans = max(Ans, SMax[S][i]);</span><br><span class="line">            S = F[S][i];</span><br><span class="line">        &#125;<span class="comment">//找路径上严格小于_W的最大边</span></span><br><span class="line">    MinInc = min(MinInc, _W - Ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d %d"</span>, &amp;N, &amp;M);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= M; ++i) <span class="built_in">scanf</span> (<span class="string">"%d %d %d"</span>, &amp;_E[i].U, &amp;_E[i].V, &amp;_E[i].W);</span><br><span class="line">    sort (_E + <span class="number">1</span>, _E + M + <span class="number">1</span>);</span><br><span class="line">    MST();</span><br><span class="line">    DFS(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= M; ++i)</span><br><span class="line">        <span class="keyword">if</span> (!_E[i].In)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> U = _E[i].U, V = _E[i].V;</span><br><span class="line">            <span class="keyword">int</span> Lca = LCA(U, V);</span><br><span class="line">            Work (U, Lca, _E[i].W);</span><br><span class="line">            Work (V, Lca, _E[i].W);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, Ans + MinInc);<span class="comment">//答案是最小生成树+最小增量</span></span><br><span class="line">    system (<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>若这道题求的并不是严格次小生成树, 那么就不需要维护次小边, 就是说最小增量可能为零</p>
<p>多说一句, 洛谷的数据貌似真的太弱了, 我有地方写挂了竟然都可以$AC$</p>
<p><del>而且洛谷评测的速度比$LOJ$慢太多啦</del></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>图论</tag>
        <tag>生成树</tag>
      </tags>
  </entry>
  <entry>
    <title>P4655[CEO2017]Building Bridges</title>
    <url>/2020/08/05/P4655%5BCEO2017%5DBuildingBridges/</url>
    <content><![CDATA[<h1 id="Building-Bridges"><a href="#Building-Bridges" class="headerlink" title="Building Bridges"></a><a href="https://www.luogu.com.cn/problem/P4655" target="_blank" rel="noopener">Building Bridges</a></h1><h2 id="CDQ-分治"><a href="#CDQ-分治" class="headerlink" title="$CDQ$分治"></a>$CDQ$分治</h2><p>对, 这道题我的第一反应就是斜率优化</p>
<p>先推一波式子：</p>
<script type="math/tex; mode=display">
\text{先令Dp[i]表示以i结尾的这一段的贡献, S[i]表示关于W[i]的一个前缀和}\\
\begin{align*}
Dp[i] &= (h[i]-h[t])^2+S[i-1]-S[t]\\
Dp[j] &= (h[j]-h[t])^2+S[j-1]-S[t]\\
\end{align*}\\</script><p>若$Dp[j]&gt;Dp[i]$, 那么有：</p>
<script type="math/tex; mode=display">
\begin{align*}
(h[j]-h[t]^2)+S[j-1]-S[t]&>(h[i]-h[t]^2)+S[i-1]-S[t]\\
h[j]^2-2h[j]h[t]+h[t]^2+S[j-1]-S[t]&>h[i]^2-2h[i]h[t]+h[t]^2+S[i-1]-S[t]\\
h[j]^2-2h[j]h[t]+S[j-1]&>h[i]^2-2h[i]h[t]+S[i-1]\\
(h[j]+S[j-1])-(h[i]-S[i-1])&>2h[t]*(h[j]-h[i])\\
\frac{g[j]-g[i]}{h[j]-h[i]}&>2h[t]
\end{align*}</script><p>那么这个式子要想写斜率优化的话，$h$数组要保证单调</p>
<p>嗯，就分治，排序，然后斜率$Dp$</p>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>$O(\log^2n)$应该没有问题吧，没有写代码，口胡</p>
<h2 id="李超线段树"><a href="#李超线段树" class="headerlink" title="李超线段树"></a>李超线段树</h2><p>？？？，怎么回事，看错题了？</p>
<p>没有，个人认为这才是正解！！！</p>
<p>再来看看我们的式子：</p>
<script type="math/tex; mode=display">
\begin{align*}
Dp[i]&=(h[i]-h[t])^2+S[i-1]-S[t]+Dp[t]\\
&=h[i]^2-2h[i]h[t]+h[t]^2+S[i-1]-S[t]+Dp[t]\\
&=h[i]^2+S[i-1]+\min_{t=1}^{i-1}(h[t]^2-2h[t]h[i]-S[t]+Dp[t])
\end{align*}</script><p>看见其实对于我们的$i$，它的答案其实有一部分是定值，还有一部分与之前的信息相关联</p>
<p>那么我们可以新定义一个函数叫$f_t(x)$：</p>
<script type="math/tex; mode=display">
f_t(x)=-2h[t]\times x+h[t]^2-S[t]+Dp[t]</script><p>那么，原式可以化为</p>
<script type="math/tex; mode=display">
Dp[i]=h[i]+S[i-1]+\min_{t=1}^{i-1}f_t(H[i])</script><p>相当于是向一个坐标系中加入了很多条线段，问你在某个点时的最小值，是吧</p>
<p>此时，$f_t(x)$的斜率为$-2h[t]$，截距为$h[t]^2-S[t]+Dp[t]$</p>
<p>就可以了</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">1e5</span> + <span class="number">10</span>, L = <span class="number">0</span>, R = <span class="number">1e6</span>, MWi = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line">ll K[Maxn], B[Maxn] = &#123;<span class="number">1e18</span>&#125;, H[Maxn], W[Maxn], F[Maxn];\\B[<span class="number">0</span>]一定要初始化，否则当x取<span class="number">0</span>时，不会进行更新的</span><br><span class="line"><span class="keyword">int</span> S[MWi &lt;&lt; <span class="number">2</span>], Qx, N;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Fx</span><span class="params">(<span class="keyword">int</span> X, <span class="keyword">int</span> Id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> K[Id] * X + B[Id];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UpDate</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> K, <span class="keyword">int</span> X = <span class="number">1</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (L == R)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Fx(L, K) &lt; Fx(L, S[X])) S[X] = K;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> Mid = L + R &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (Fx(Mid, K) &lt; Fx(Mid, S[X])) swap(K, S[X]);</span><br><span class="line">    <span class="keyword">if</span> (Fx(L, K) &lt; Fx(L, S[X])) UpDate(L, Mid, K, X &lt;&lt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Fx(R, K) &lt; Fx(R, S[X])) UpDate(Mid + <span class="number">1</span>, R, K, X &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">Query</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> X = <span class="number">1</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (L == R) <span class="keyword">return</span> Fx(L, S[X]);</span><br><span class="line">    <span class="keyword">int</span> Mid = L + R &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    ll Temp = Fx(Qx, S[X]);</span><br><span class="line">    <span class="keyword">if</span> (Qx &lt;= Mid) <span class="keyword">return</span> min(Temp, Query(L, Mid, X &lt;&lt; <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> min(Temp, Query(Mid + <span class="number">1</span>, R, X &lt;&lt; <span class="number">1</span> | <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) <span class="built_in">scanf</span> (<span class="string">"%lld"</span>, K + i);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) <span class="built_in">scanf</span> </span><br><span class="line">    (<span class="string">"%lld"</span>, W + i), W[i] += W[i - <span class="number">1</span>];</span><br><span class="line">    B[<span class="number">1</span>] = K[<span class="number">1</span>] * K[<span class="number">1</span>] - W[<span class="number">1</span>];</span><br><span class="line">    K[<span class="number">1</span>] *= <span class="number">-2</span>;</span><br><span class="line">    UpDate (L, R, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        Qx = K[i];</span><br><span class="line">        F[i] = K[i] * K[i] + W[i - <span class="number">1</span>] + Query(L, R);</span><br><span class="line">        B[i] = F[i] + K[i] * K[i] - W[i];</span><br><span class="line">        K[i] *= <span class="number">-2</span>;</span><br><span class="line">        UpDate (L, R, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, F[N]);</span><br><span class="line">    system (<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>Dp优化</tag>
        <tag>李超线段树</tag>
      </tags>
  </entry>
  <entry>
    <title>Present</title>
    <url>/2020/09/15/Present/</url>
    <content><![CDATA[<h1 id="Present"><a href="#Present" class="headerlink" title="Present"></a><a href="https://ac.nowcoder.com/acm/problem/110615" target="_blank" rel="noopener">Present</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意:"></a>题目大意:</h2><p>先给你一串序列,你至多有$\text{m}$次操作使得一段长度为$w$的区间加一</p>
<p>问这串序列的最小值最大可以是多少?</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>最小值最大或者最大值最小,我们的第一反应可能都是二分答案</p>
<blockquote>
<p>简单证明一下:</p>
<blockquote>
<p>如果最小值最大为$x$,那么只要我们少做一次操作,那么$x-1$也是可行的<br>这满足二分答案的性质,所以呢二分答案没有问题的</p>
</blockquote>
</blockquote>
<p>那么关于$check$函数的话,如果当前我们枚举到的数他小于这个我们$\text{check}$的值,那么我们就给这一段区间加上这个差值(如果可以加,否则返回零)</p>
<p>那么时间复杂度大概就是$O(\log10^9*n)$,可以接受的</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read()</span><br><span class="line">&#123;</span><br><span class="line">    ll x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll n, m, w, a[maxn];</span><br><span class="line">ll CF[maxn], temp[maxn];</span><br><span class="line">ll l(0x7fffffff), r, ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">Check</span><span class="params">(ll x)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memcpy</span>(temp + <span class="number">1</span>, CF + <span class="number">1</span>, <span class="keyword">sizeof</span>(ll) * n);</span><br><span class="line">    ll now(0), rest(m);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        now += temp[i];</span><br><span class="line">        <span class="keyword">if</span> (now &gt;= x) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (now + rest &lt; x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        ll get = x - now;</span><br><span class="line">        rest -= get;</span><br><span class="line">        now += get;</span><br><span class="line">        <span class="keyword">if</span> (i + w &lt;= n) temp[i + w] -= get;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), m = __read(), w = __read();</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i)  &#123;</span><br><span class="line">        a[i] = __read();</span><br><span class="line">        CF[i] = a[i] - a[i - <span class="number">1</span>];</span><br><span class="line">        l = min(l, a[i]), r = max(r, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    r += m;</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r) &#123;</span><br><span class="line">        ll mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (Check(mid)) ans = mid, l = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>二分</tag>
      </tags>
  </entry>
  <entry>
    <title>[SCOI2009]游戏</title>
    <url>/2020/09/18/SCOI2009-%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<h1 id="SCOI2009-游戏"><a href="#SCOI2009-游戏" class="headerlink" title="[SCOI2009]游戏)"></a><a href="[https://ac.nowcoder.com/acm/problem/20271](https://ac.nowcoder.com/acm/problem/20271">[SCOI2009]游戏</a>)</h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>有一个$1$到$n$的序列, 每个数可能对应另一个数</p>
<p>不停的变换, 直到变回串, 一次变换记作一次花费</p>
<p>问你对于所有可能的对应关系, 有多少种不同的花费</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>显然, 无论对应关系如何, 这些有对应关系的数一定构成环(包括自环)</p>
<p>对于每一个环, 若他的长度为$x$, 那么这个环归位的花费一定为$x$</p>
<p>那么原串长度可以表示为$\sum_{i=1}^n len_i$, 那么花费就为$\mathbb{lcm}len_i$</p>
<p>所以问题就转化为了有多少种不同的$\mathbb{lcm}$</p>
<p>再考虑所有的$\mathbb{lcm}$, 可以表示为$\mathbb{lcm}=p_1^{\max(k_1)}p_2^{\max(k_2)}\cdots p_n^{\max(k_n)}$</p>
<p>看上去是不是有点点像背包了呢?</p>
<p>因为我们知道$\forall i\;p_i\in[1,n], \forall k\;p_ik\in[1,n]$, 那后每个物品至多选一次(若可以选多次, 那么后面选的不应该有贡献, 如上式), 似乎就可以写一个$01$背包了呢</p>
<p>所以我们可以先处理出$1\sim n$内所有的素数,再枚举每个素数的$k\in[1,n]$次方作为体积为$p_i^n$的物品, 容量为$n$</p>
<p>就结束啦<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll f[maxn];</span><br><span class="line"><span class="keyword">int</span> pr[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= maxn; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i]) pr[++pr[<span class="number">0</span>]] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= pr[<span class="number">0</span>] &amp;&amp; i * pr[j] &lt;= maxn; ++j) &#123;</span><br><span class="line">            vis[i * pr[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (!(i % pr[j])) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> n = __read();</span><br><span class="line">    f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= pr[<span class="number">0</span>]; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = n; j &gt;= pr[i]; --j) &#123;<span class="comment">//这里的n只能从n到1,保证每个物品只选一次</span></span><br><span class="line">            <span class="keyword">int</span> temp = pr[i];</span><br><span class="line">            <span class="keyword">while</span> (temp &lt;= j) f[j] += f[j - temp], temp *= pr[i];<span class="comment">//这里从小到大枚举temp没有什么讲究</span></span><br><span class="line">            <span class="comment">//但是不能先枚举pr[i]的k次方,先枚举次方会导致一个素数被多次计算, 然而他不应该有贡献</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) ans += f[i];<span class="comment">//最后枚举有多少个物品, 从0个物品到n个都是有贡献的</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>数论</tag>
        <tag>Dp优化</tag>
      </tags>
  </entry>
  <entry>
    <title>[SDOI2017]数字表格</title>
    <url>/2020/09/30/SDOI2017-%E6%95%B0%E5%AD%97%E8%A1%A8%E6%A0%BC/</url>
    <content><![CDATA[<h1 id="SDOI2017-数字表格"><a href="#SDOI2017-数字表格" class="headerlink" title="[SDOI2017]数字表格"></a><a href="https://www.luogu.com.cn/problem/P3704" target="_blank" rel="noopener">[SDOI2017]数字表格</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>求：</p>
<script type="math/tex; mode=display">
\prod_{i=1}^n\prod_{j=1}^mf_{\gcd(i,j)}</script><p>其中：</p>
<script type="math/tex; mode=display">
f_i=
\begin{cases}
0&i=0\\
1&i=1\\
f_{i-1}+f_{i-2}&i\ge2
\end{cases}</script><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这其实是一个多么裸的题，最多就用了一个欧拉定理。。。</p>
<p>那就直接来吧(规定$n\le m$)</p>
<script type="math/tex; mode=display">
\begin{aligned}
ans&=\prod_{i=1}^n\prod_{j=1}^mf_{\gcd(i,j)}\\
&=\prod_{d=1}^nf_d^{\sum_{i=1}^{\frac nd}\sum_{j=1}^{\frac md}[\gcd(i,j)==1]}
\end{aligned}</script><p>其中，那一坨多么难看的指数可以拉出来特殊关照一下</p>
<p>那么就有</p>
<script type="math/tex; mode=display">
\begin{aligned}
\sum_{i=1}^{\frac nd}\sum_{j=1}^{\frac md}[\gcd==1]&=\sum_{i=1}^{\frac nd}\sum_{j=1}^{\frac md}\sum_{k|\gcd(i,j)}\mu(k)\\
&=\sum_{k=1}^{\frac nd}\mu(k)\left\lfloor\frac n{kd}\right\rfloor\left\lfloor\frac m{kd}\right\rfloor\\
\end{aligned}</script><p>带回原式，可以得到：</p>
<script type="math/tex; mode=display">
\begin{aligned}
ans&=\prod_{d=1}^n{f_d}^{\sum_{k=1}^{\frac nd}\mu(k)\left\lfloor\frac n{kd}\right\rfloor\left\lfloor\frac m{kd}\right\rfloor}\\
&=\prod_{t=1}^n\prod_{d|t}{f_d}^{\mu(\frac td)\left\lfloor\frac mt\right\rfloor\left\lfloor\frac nt\right\rfloor}
\end{aligned}</script><p>这一步稍微交换一下求值顺序即可得到，然后就是中间多出来的那块求积的东西是可以预处理的，时间复杂度大概是$\ln n$级别的，最后的最后就是一个数论分块，因为预处理完后，这个就可以化简为：</p>
<script type="math/tex; mode=display">
ans=\prod_{t=1}^nF_t^{\left\lfloor\frac mt\right\rfloor\left\lfloor\frac nt\right\rfloor}</script><p>这样以来，就十分的显然了，那么到这里，这道题就是真的水完了</p>
<p>唯一值得注意的就是指数那一坨可能特别的大，于是乎可能需要一个欧拉定理之类的东西</p>
<p>但是看到$n,m\le1e6$，就知道只需要一个$ll$就够了，是否用欧拉定理只是对于常数优化的问题了</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">x</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span><span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) o = getchar();</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar())</span><br><span class="line">        x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Pow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (y) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y &amp; <span class="number">1</span>) ans = <span class="number">1l</span>l * ans * x % mod;</span><br><span class="line">        x = <span class="number">1l</span>l * x * x % mod;</span><br><span class="line">        y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> ip[maxn];</span><br><span class="line"><span class="keyword">int</span> p[maxn], cnt;</span><br><span class="line"><span class="keyword">int</span> mu[maxn], inv[maxn];</span><br><span class="line"><span class="keyword">int</span> f[maxn], g[maxn], F[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[<span class="number">1</span>] = g[<span class="number">1</span>] = F[<span class="number">0</span>] = F[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxn; ++i) &#123;</span><br><span class="line">        f[i] = (f[i - <span class="number">1</span>] + f[i - <span class="number">2</span>]) % mod;</span><br><span class="line">        g[i] = Pow(f[i], mod - <span class="number">2</span>);</span><br><span class="line">        F[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (!ip[i]) p[++cnt] = i, mu[i] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * p[j] &lt; maxn; ++j) &#123;</span><br><span class="line">            ip[i * p[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % p[j]) mu[i * p[j]] = -mu[i];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxn; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; maxn; j += i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!mu[j / i]) <span class="keyword">continue</span>;</span><br><span class="line">            F[j] = <span class="number">1l</span>l * F[j] * (mu[j / i] == <span class="number">1</span> ? f[i] : g[i]) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxn; ++i) F[i] = <span class="number">1l</span>l * F[i] * F[i - <span class="number">1</span>] % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="keyword">int</span> T = __read();</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = __read(), m = __read();</span><br><span class="line">        <span class="keyword">if</span> (n &gt; m) swap(n, m);</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r; l &lt;= n; l = r + <span class="number">1</span>) &#123;</span><br><span class="line">            r = min(n / (n / l), m / (m / l));</span><br><span class="line">            <span class="keyword">int</span> temp = <span class="number">1l</span>l * F[r] * Pow(F[l - <span class="number">1</span>], mod - <span class="number">2</span>) % mod;</span><br><span class="line">            ans = <span class="number">1l</span>l * ans * Pow(temp, <span class="number">1l</span>l * (n / l) * (m / l) % (mod - <span class="number">1</span>)) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>交了以后，发现这两种写法并没有多大的差别，如果想要优化的话，可以考虑离线一下所有的询问，然后可以排个序，这要确实是可以快很多的</p>
<p>至于更多的奇技淫巧可以看看$loj$上大佬们的做法</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>莫比乌斯反演</tag>
      </tags>
  </entry>
  <entry>
    <title>SP26037 DIVCNT1</title>
    <url>/2020/09/21/SP26037-DIVCNT1/</url>
    <content><![CDATA[<h1 id="SP26073-DIVCNT1-Counting-Divisors"><a href="#SP26073-DIVCNT1-Counting-Divisors" class="headerlink" title="SP26073 DIVCNT1 - Counting Divisors"></a><a href="https://www.luogu.com.cn/problem/SP26073" target="_blank" rel="noopener">SP26073 DIVCNT1 - Counting Divisors</a></h1><p>先看了一眼数据范围$n\le 2^{63}$，可以了，这与$Min_25$筛无缘了</p>
<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>求：</p>
<script type="math/tex; mode=display">
\sum_{i=1}^n\sigma_0(i)</script><h2 id="问题转化："><a href="#问题转化：" class="headerlink" title="问题转化："></a>问题转化：</h2><script type="math/tex; mode=display">
\begin{align*}
\sigma_0(n)&=\sum_{i=1}^n\left\lfloor\frac ni\right\rfloor\\
&=\sum_{i=1}^n\sum_{j=1}^n[i*j\le n]\\
&=\sum_{i=1}^\sqrt n\sum_{j=1}^{\left\lfloor\frac ni\right\rfloor}1+
\sum_{j=1}^\sqrt n\sum_{i=1}^{\left\lfloor\frac nj\right\rfloor}1-\sum_{i=1}^\sqrt n\sum_{j=1}^\sqrt n 1\\
&=2\sum_{i=1}^\sqrt n\left\lfloor\frac ni\right\rfloor-\left\lfloor\sqrt n\right\rfloor^2
\end{align*}</script><p>等价于求函数$y=\frac nx$直线$y=\sqrt n$与直线$y=1$与函数图像和坐标轴相交构成的闭合图形内的整点个数</p>
<p><img src="https://s1.ax1x.com/2020/09/21/w7Oq9P.png" alt=""></p>
<p>紫色阴影部分即为所求（图是嫖的其他巨佬的）</p>
<p>这样，这道题就变成了一道数点问题</p>
<p>通过在$Stern-Brocot$树上寻找斜率，借助单调栈去找一个背包</p>
<p>这部分没太明白，鸽~</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> __int128 _ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read()</span><br><span class="line">&#123;</span><br><span class="line">    ll x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ll x, y;</span><br><span class="line">    Point(ll x = <span class="number">0</span>, ll y = <span class="number">0</span>) : x(x), y(y) &#123;&#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point &amp;Temp) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Point(x + Temp.x, y + Temp.y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;stk[maxn], L, R, M;</span><br><span class="line"></span><br><span class="line">ll n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">In_R</span><span class="params">(ll x, ll y)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x * y &lt;= n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Slope</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">double</span>)n / x / x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> _ll <span class="title">Slove</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">_ll <span class="title">res</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    int t(0), rt = cbrt(n);</span><br><span class="line">    stk[++t] = Point(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    stk[++t] = Point(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    ll m = <span class="built_in">sqrt</span>(n), x = n / m, y = m + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (L = stk[t--]; !In_R(x + L.x, y - L.y); x += L.x, y -= L.y)</span><br><span class="line">            res += x * L.y + (L.y + <span class="number">1</span>) * (L.x - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (y &lt;= rt) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span> (R = stk[t]; In_R(x + R.x, y - R.y); R = stk[--t]) L = R;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            M = L + R;</span><br><span class="line">            <span class="keyword">if</span> (!In_R(x + M.x, y - M.y)) &#123;</span><br><span class="line">                stk[++t] = (R = M);</span><br><span class="line">            &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">                <span class="keyword">if</span> (Slope(x + M.x) &lt;= (<span class="keyword">double</span>) R.y / R.x) <span class="keyword">break</span>;</span><br><span class="line">                L = M;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; y; ++i) res += n / i;</span><br><span class="line">    <span class="keyword">return</span> res * <span class="number">2</span> - <span class="number">1l</span>l * m * m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">(_ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!x) <span class="keyword">return</span>;</span><br><span class="line">    Print(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T = __read();</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        n = __read();</span><br><span class="line">        Print(Slove());</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>后面三道题确实是妥妥的$\text{Min_25}$筛了</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>前缀和</tag>
        <tag>鸽~</tag>
      </tags>
  </entry>
  <entry>
    <title>SP34096 DIVCNTK</title>
    <url>/2020/09/21/SP34096-DIVCNTK/</url>
    <content><![CDATA[<h1 id="P34096-DIVCNTK-Counting-Divisors-general"><a href="#P34096-DIVCNTK-Counting-Divisors-general" class="headerlink" title="P34096 DIVCNTK - Counting Divisors (general)"></a><a href="https://www.luogu.com.cn/problem/SP34096" target="_blank" rel="noopener">P34096 DIVCNTK - Counting Divisors (general)</a></h1><h2 id="题目大意："><a href="#题目大意：" class="headerlink" title="题目大意："></a>题目大意：</h2><p>求：</p>
<script type="math/tex; mode=display">
S_k=\sum_{i=1}^n\sigma_0(i^k)\mod{2^{64}}</script><h2 id="Sulotion"><a href="#Sulotion" class="headerlink" title="Sulotion"></a>Sulotion</h2><p>观察发现，$\sigma_0(p^k)=k+1$，不完全积性函数，很好，满足$\text{Min_25}$筛的条件</p>
<p>令：$F(x)=\sigma_0(x^k)$，$f(p)=k+1$</p>
<p>好了，就可以直接套版子了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">1e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read()</span><br><span class="line">&#123;</span><br><span class="line">    ll x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll n, p;</span><br><span class="line">ll sq, tot, pr[maxn], id1[maxn], id2[maxn], w[maxn];</span><br><span class="line">ll cnt, g[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ll maxn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= maxn; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i]) pr[++cnt] = i;</span><br><span class="line">        <span class="keyword">for</span> (ll j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; pr[j] * i &lt;= maxn; ++j) &#123;</span><br><span class="line">            vis[i * pr[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (!(i % pr[j])) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">id</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= sq) <span class="keyword">return</span> id1[x];</span><br><span class="line">    <span class="keyword">return</span> id2[n / x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">S</span><span class="params">(ll x, ll j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pr[j] &gt; x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll k = id(x);</span><br><span class="line">    ll ans = g[k] - j * (p + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (ll i = j + <span class="number">1</span>; i &lt;= cnt &amp;&amp; pr[i] * pr[i] &lt;= x; ++i)</span><br><span class="line">        <span class="keyword">for</span> (ll e = <span class="number">1</span>, sp = pr[i]; sp &lt;= x; sp *= pr[i], ++e)</span><br><span class="line">            ans += (p * e + <span class="number">1</span>) * (S(x / sp, i) + (e &gt; <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init(ll(<span class="number">1e6</span>));</span><br><span class="line"></span><br><span class="line">    ll t = __read();</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        tot = <span class="number">0</span>;</span><br><span class="line">        n = __read(), p = __read();</span><br><span class="line">        sq = <span class="built_in">sqrt</span>(n);</span><br><span class="line">        <span class="keyword">for</span> (ll l(<span class="number">1</span>), r; l &lt;= n; l = r + <span class="number">1</span>) &#123;</span><br><span class="line">            r = n / (n / l);</span><br><span class="line">            w[++tot] = n / l;</span><br><span class="line">            g[tot] = n / l - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (w[tot] &lt;= sq) id1[w[tot]] = tot;</span><br><span class="line">            <span class="keyword">else</span> id2[n / w[tot]] = tot;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= cnt; ++i)</span><br><span class="line">            <span class="keyword">for</span> (ll j = <span class="number">1</span>; j &lt;= tot &amp;&amp; pr[i] * pr[i] &lt;= w[j]; ++j) &#123;</span><br><span class="line">                ll k = id(w[j] / pr[i]);</span><br><span class="line">                g[j] -= g[k] - i + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= tot; ++i) g[i] *= (p + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%llu\n"</span>, S(n, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>还有两道题，一样的，只是手动改一下$p$就可以过了</p>
<p><a href="https://www.luogu.com.cn/problem/SP26073" target="_blank" rel="noopener">SP26073 DIVCNT1 - Counting Divisors</a></p>
<p><a href="https://www.luogu.com.cn/problem/SP20173" target="_blank" rel="noopener">SP20173 DIVCNT2 - Counting Divisors (square)</a></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>前缀和</tag>
        <tag>Min_25筛</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200529</title>
    <url>/2020/05/29/T20200529/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="24ff168dbf64dcf099c033c9aeda987bcae8dccd24f3e063154a0d83f247b81c">4a735c77f2a00c4525932abf28473b30f8f1fc98315b12f67d859b6f04aaca085793ed74cb4d4a9f8d8f21d781b3f967e6ac1e9bf6417a67b3cfd6b1cca17a6c95a20d18d18b20da0312e388b3d646b3d56f62c5aaa4da80929962e06a18fd32f0e8b3d8b445b5c2789a5b1deac9ba0919c9b9250bfe82c05df8f2823647d4ee83ba21c57ace03b668ad6bef5020a661df6e0f3a97ccbc0bd690cd0e5d55c9529a357a268cacae875729d47fd45f223b4702ea342ce3bd20572176cca810d4fba0d10968a8a152ec9587d704b90e92ed4bb5b099f4eec73c9e7581bd522ff154c4f2253811a74e0e61c14b69b0f5ad08d3d870bd8ccc49e8f8b68546c6fdda5a13919a672ab7ca53846de670cb8fec068e73fef57f64ccd291ef5936291b39b04fbbd4b790fd569b3fea76c1ade4b3733f39a15d1a7b92b0b8630bfcf10088d2acc7a9ba0155c460ae6036b5df4fc5d3efc14e15b789d743c2f92a22f4d555f3933ff19b0545cfe1a6eff2fb1d9a6c4ff318965815b8cca1d21ee88de13b6acd10fbfeb8b639671e515581b8333af541cfc5ffe1a4e73b6bd4310d97fb59432a1f2909c601dfff44928e3e7ffa371732fe6a33742c66574008a933be16c271a6d06dd19023994c49e428d84f4c18153b7ccf865973d491eba8949ade3defb10f38a1f7cf2f01a6ad0c9eb16618e07478959626b39f231c3f7c8daf193d6ebda8cf69829153d04d40c57ad082afc7e463e3708fd5535b495bdd82a471081fd730d372072de8d2d01872b0e5695c42e51bfd9c658e47ce018f62b0f3299fe3a7009984b0433eea98284f0daedefcc31bde21d54c20dba8129d8f0a33b0865a34cb660027125e0b0d60324e9a369a2e3e78ca04f4e77ec43afb64a08ea53f19d7e12ebfb6aa940a591e88dfc5b9929a74bb7f77a33c144987f7b0a178a50498fc29e67482ebe96486de957404592b59bd56a850eab15c7b0a9f4654c291af359415564022c4e2231fa7b17e0c1a2a2e3c1ee62a14a977d13af63161b02e66021e60604b8ad961869dd689a0106e3880f565cba5f38dd92c81107879f6d01731ef04b6e5ac9c5b2b944e98f56617b59ba38ab46dad7161a7e4f4143a4f1614c07549897751b89edcaf3a7e2989956a11f940c0eb5d979cc5cfd6f170f1295e60948dc08825c29da73c736008462fa98aec964cbfcb0b4c770c27e0a483ab1ece35e814a67cfa7e90d5da54c871792780747cdadb8b46109da4b57d3d4f6859ffd21a54aaa5e72ec94d346a52b03787336cf4a897b9a1a45a542e5a458752490bfda8857fb58b840d238417ceac2d7e8f7469a50b1d6956c29354444f3b0d3dcce258c96f1210b1377d153e3278cd0834fd06645c8edcbfebd5f16027ca2fe0bcad1e17d30ca18817007ebdb292cd91a7bfcc9f27e3b5fe7e56a3f6c084b5e7da3c90d775b8f1727cf21df72a2347b8c831ebc7e5424977704667a26d50f763d96833b50bccdca1cc7a1d8225b6c23ce8934bdd8f2a6c2981b1ba95aced8cd29519574bc22e74001018e4f4be903e3dc0539aa348738e22c2d4133fffd0a57b6f9558c9e7a972aa0a9475218ad396f6ab5fb2e9ee53912375ebbfb7fac582a539c71b14da22947de9d73b73201d7fcaa74e186a21e2887916940fb006205b39cd56e2e274e1f6dcd1f360bda1c88f5811f28577a91f2bcb9fcb3942d69de2f3e65386d6f824d41b419b9a9dcbceb7205cc3b2d53ac11841757964edcda301f46ecdd778f2a155149d3d47f0b9113e784530ea3332c7c7af0f629fdd7b7d5b0825ee7577047fb6bad6cbf97ac4a6bcd3a2ce845871413a02bb1e9fd7fc8806accc1aa919a056d5d78eb805947dae72e896a9ed9bb3724dc3e9f240f75d2c8a9f77b159f5446da52b7350abca6e7cf4f3eeb535e500470fca737760483e7012372d1673916d7203d8b8e3446e4a4e8cc0bdcda2f8072cc4abb67416722d5472a15aa6905094ff633a02b05e8b9d08d0f4148a3bfcca69d13ae712a980fc50324a1e5a13234ec6f87e61ad404d7998fdb9b1db3ff28401234fa224d43233a8533834f173d284f2c1844d57a8b3c0038a760323b195d987f3bf4bbdb6bd2a566f2aa97ce955d5f439f90065cb8c87442851bad8f022d3b825f761111c6e276d221dc0596851115bc21254dc1b7e82300f7f95c38e7c34c6b2beae8fa161c7c75386ac76d61abe1b992501da9b0bf980ce655495c4ef6f771c113e39ecc366251ee96b5c7d69d1b691f46a2acacc7f1db4aaa67f92e952ae7012e16880aae8778318719af45add57eff1cae255e4496be9bbd4eefdb3aaa539a74e64b188aa93d84b8cf051977889ab7531cf7a99609345729cd9b6bc9aab9733fd0980c9a40afd01495eee5bdc9d0f3b8923a21925c66ee072fcc8324553df332de658fbfc0a314798f46885a7e9fd2fb54da048f965403c16d9be6e9ba28c48a17f5b04f3ec51cb83b7f2821184e5e2871639fb84f2538376ecd6c6dc0674215ee60b26b3ad8d940138cbb767d0f13558868c2921e0658f3e8ac81604054776bbf65f3201416424d71170ab8ebaa1cdbf34020ac58f945de3e14b844b8ce1cb5293635633e933244970a80d52620a626b1713104d1d171e1f164f7884803335fd520e4ebd7fd621e423e4c76f39c26c82a2b3cbae7bab430f672f461ee446f7889f90cdc6178c3ba2108918ae114ded0cc3e51761e292b541be8c1dfb8bb2b6f57c267359b37bbd25835c61eb7ccf5e1a42182fc247465a6ab9495bc59e5b276752ae914826f3bc6225c55291ffdf7a0d0a61f17e303fe612a122f09589e69254a3acfe7ed2804356fa98b928ce8d439fcfd3f7133b4bb2aacae2390685dc9c5984438fa5cb5b45c148a99df760658b57b73f67da1c1cbac03a743d3f693000508a5b842db88827180300be81ee75010b9d62a57165076a143c3a9eb7d756ba59ddf1e5c3b3588f752e524d673c58c6060197b809ec76ddd0a4df1947fac8b7435a5255636e7cfdc5b9025da542006b449298a2b32ecb8e8fbb08ae322a1fd35c59fbf8b687f813b94425b865821c349df42fc2d9bc3314f1d39223dd4dd8641cacc9ceb1424a4e176b8aba1c24924d81413bfaa090d44f16a6e5debb6cc927952e19e3a908d7beff603729bf0cfe6f9b9bc8cac629fb8513f5dbce2b0c8ec69665247b85e3364c77271bb3189c6576e0f8af7825a2195f63811fc3c6f338db0a4925409d52e7720c73794b5dc1bfb8c34669ba1143435d670f0383303e6d9c4cca37d4f71235c67fea61e1aba3c71d14f999a0e18a71ef88430d4dbe5d6e264aef80c437d88dbe95debc43ad802fdc5a3315992eea5c58ba2a860ea4d01e17ce2ad447d4808b2afa7564ccff97a9efd3dc38d719771d0c4dede49d18a32b79d3eceeb527420dc599a39e4403660acdc7aa585b1501183dd61e2e04e50d79541840f8d03cbbb8d710f7b918e002301e845ed854adf4eecf2a2554b0a16ae615b8baf82c1e8db65a32b34f146357bab001b774bc7f20cb0ebb07e8e5dc1f8525d01f87fe40d7d57a5d3a31c7d74b6d8f014ecc738194e942654e1e251bd829ae93f3546be31a15b07de3995c91833beef264c73a60d5ba873cd1e5a1378e5046d26ca782a7f1e082d8b7c3529d68ffbe6c85128b75d0f76d6fc2effb5eb17183a4482514c3fd9c02ac17b077358f2b5e5132553613443124a0ee4416b0f075a704878515fe892fcce73e176f99769b805683028248e7fcb8bf1d7bc889a952e735ce3251674379fff2e8fc2fb6d368328b7fe81bd22f809dbfb16edafed01c5cb8661877d3d5d7d2d562aa19dcb2cec087551eeba15925877b03616bf27480fc4886678ff266ed501032d446387448ec12a5b2d29aa7377f1fb086b4ce193975c192a3ad400411cd368a237f6acc5198acd361402a99403a659edfbf1d2d912fb246be014e0d4c50b80b0651cb14c8d8f7c230b33d316f40bd5c721d0baaa9fe389ae2b9dc5e5c2670b804c3c24e0d2693980b460066c0f23f0e7d9f5d79fd193f91ce83bcdfc60851eafc19a1e4e83b8823ac2163d91cec94cdb468d514ddbbeee14b10f2d500f8d106ef4aa5ba3a19de8e2a308b50902d313923a76c3c67b9020f43cb9e128c0b2a5f7c20544888684e51cf2b31c3f14fd57ea54c165de58b65555bb10fd40ed52bf82e7f6bef30c0a6dec1e9309f2a9f49191f005392085fc7ce820a3aaae4cb23a7b5e5915cbcaae76d3a368276524226daead7ac50b4730a26b4f08b506ab64aafbd233af5859ef6142fe77678e6af0c7fb9002c3c07b1e8eed6ad2970261bf5bd10929dde7578358eba26304927d65a5d96927bd154f54c9e62b7776d32bf49d5f87fccfe79302997a9567c2b7804be5c379030a0d05d531e609709d1943c958d9f410d3403f183f3976623981b96505667129e7784dbafd80d9132864f33525a07256f2b4b6015b35e24ec35263fac4a90b7a4cc6983dd14e66265ea43cd01bc95b1e24e6aff6fcfdff518017ca73b90c30cc9a1131331f237793cc537fdf54da9f536c01b43378ee456e08d202e5bc860fadba49b79e4adbf0ea42172b3b290bfef746472e39fef2f0a88a4ade6e232313c4ff4e6211f5dc85429155fecbde36b393e98b27299e070132f0d2b22ae4a3a5cbc198fd50e512217bffd1b0bf80ed5fc8af3b38a186db8032714b97493164c51a93ef14b4951a5409fdd9c38bca69c471dd1517b10dac831a12de612ef61796ad5734acfb87a832901565cb942b8b5d9fc3e98fbaa9823ce5fa52e63d503286a10b22c37ea66b47205bdadeb940f8ad7707f92c978a4075f7a1ed450877cd093a69c744b06cca73f0fe6693d2b7b3af7cc0c5d71b862abd0bed64b4f3eed2de622a87cb683cf35589223e2d3e835563b8e1b9ba21b444d8ed2cce0dcdc6021b8ca8bdbdeff9b821a44f09c0d1ff4cc2169a7a8273274cc87b4ec32ab39a1690c1662158137e537cb930be5c180c7a10c77f60a6761bfa0a4a1408a31292579706be2682c1709234f3648cb852e518bc23700cbb4fcdec7a3a8fd23a28addb360640d69c1b34a5b13968f8e3fdaa176d3ece712e30e0af2cbf297b6538c5e70ea456a7ca926a4886545fa3cd2c8f83d1ccdb8a8f60815eecd97f2c6552e28ea542f13f6c5851b6fe3a780b309876754d518b8fec45c89c982f28fe606eec769142d571b4f2526b147f2c9df6f5c4850c99a4e0558db337bd0f5d1a7c650ae2fcf4be0f43ed89d1df56e160feac3547feb8a2fc702010592e03063d2a0de9413fad0410240201a85bfae9f2284407dab476cb916c81af8756dbe58101f0cba7fdd9d2c82b925132c3398ad7f0c205dc65a73cc063d1eef297b521da805da76e2800f388d5adb3684c6f321b802f7e789e14088ae9a18e073de1daae9243a3dedca048482259bc39549ba9616b896904ab3343d763f03b616da6580fa35fc0fdc12c54bb06f64c6c0df183367f4c067883ea76da760a919ac47cfb49537b4371e93470c1fa0a4ab5bd51a848f2204fb74bf8f76c6174b434b1c316a4083425e8d01139b2a51b974c10d994592a6c0bdbcc52ef6d7a38e5e4d8c969b8f2b2542e64b5265172f3a08849900067e566767e5f0dac0d2b6befdc8fd10c626805f2fba64bd43aae65e836043818d79c309500a84fc27740dd6a19526b5c28b7eff918161300dd1628f4e66246474bce291074877c91ef4f3fa8586d0e4400011452c54e33296ad36559ba3aab9cbca2d285acd03d5040ca13e6ba3b656e1900e723cd7a28bb008ac0de4b231fb717adbc4676b2c99fac8587c8d6851d13d7babf17ff1f3ffbf7b512512864f20c88a4331d20528759af04c5a249cc9ab1e72f02380020b41c71b9f4d85da584c79f78e95cd5d51b30326ade7dacd2d64f7ee9f69a3e075ef26a6d8dec723cd52971a7e5dc8da2aa85bc8d8c81240e639272a4c81acea918871cbfb621cb54e7a6023ff340dee94a5d31890e10ee3eb6048288ce61700f8c30cbd855f93156c300e6f1b471778fefa0b0bdb4ac59b0cac3d97c69ae92d4ea4c369280026d28ad0d505eb86c72326cf21a9c68146665beb95f5d46991e3c3fb917ee5d4da102beaa67bb02b357ea829d652901e5ce9afbc05b8e9433273c531f49a95b97eff056363386b8ed37cf79b7df1a5221033c44aae86dd4363efe983f4669148874ccbc625166ad3e7bd557c3a6930e1937caa34a5dc73d2db2a0b05cf70ec9e0cbd916ca760dae9631df346ff7f938ef2ed389989743819dfc8d71453408c52030410d29c708cd1da1f66da5cdc7f74347f101e6f15002ef2534c41375f0a2a392b8e8eefcd7a59a9c16452a239c943754a90cf43113d2402ec5d813e3d6668d8c341ff5dcc1ff67c63e4ee51f9bc372c7a95545c2a5258f049074dc91560f2a785a200d6e01e54f14a4ee1896e95a2a48339fc15dabebb64f7f48590b740a5eb3eefbd3523bca5e647ae0c1be050226f5f0fd519094c1989b8d932d9fc48b4215ba1500c311488fcba1c2c81a5c9f19158e981e942e12d792169a08b7de33087babe6596e474a0ecda3aea49b2a7a6375d0cc89d3713f77cae69610b551c601773e4d5d7b168c9ce82ce7e2f147a22073f42d17aa5e64f4d200fb4f6f0f75e8f96977ad1507ee9759a1b78242a0c43e89297a646b0067a4a60c7f582063fd92ee8b208b62b3437752aaa2ad397c684acbc6295e11cbda8b65ac8ceabbf8cc61ede0916e95023ca6221f00c92c158935c860e18b766eec1255d71b8b502a5236041941a7409b8340d6aed6d6878f6bfc7b61d0f76e011d868e7b14d5a081ba74bc207e5bcd9c9d443229b1324eb2c6d88c3dd00b22a23dcd8dca0775f33e2b80083f28e660d4906c661ab160f3a14bc44ab3f5c661fd928b2ccccb0f661804421028a794dbfc2cf1cdaddc68b85565e91f99644c051d6bd6582c06403031948f17a218e02bf0f6ef98882c0a042de8899df1982db6a680031c52f4043496d3a3dcf55f1d7d103721d5ff7640c576371bbda20d4a195b81eaf80ad866fecf4a6a788559a97e56317d457df5399bb05d28c88742bd8896940848770d6259045b00ed50411500f320e68a561a135b61450444a9d52b63f7d5c4de9d0acba053e90ee5f6d091cadf3ac9c2b2d78851d2362a05c57f5df2d601f93e18e541f7f19add0dcecbcef55676e3b1980df9b1a2e7a4434534eb80dee2639f05b9286b8cac5a86bf2b4cd49560317ae23439ff30e0cf04f32233fd10e8184216b111b8b8f9cbe489f18a352ecbf8c2de963e00e7ac04d90dedd8c681c41ed9efec443e7e0cf883b4aa387268df031cace963f4dab271181b938ea1950e59aac7053403fb7e16e3f2bb6fdffc895cb7614146ad22f9c526bb0dae65c95c885b01507b1e87eed269ffb35c2948fa2e30f65b1728c0f497e6a2b677e588eebd2270afcf7fad5b23754c1e97ae8aa1a0f244fa45077c9f3ab3c5cdbfdf7750eaad6865f7ef5db23faac05b2e5084d14560e617f5e56d3c302842f5a43f26681ef9907dcaf9f9798809d42c669a779a3583656a028a9dcb229f0650dce4d5e905f0d5a15164537689b6f0d1bee9334ad379b350ec0806be80cb7171dcf208b3bcf6d2a50eba136bc7d52140ceda63407846ffb214e24a13e8fda60e805989b224673cfc2de0793d10426e3e5f4ff4fdc5bffce6f18b5c128cddabfa9bfe61a4e117fe734ff076bcd39dfe4b8a434f0cd448c0f842d17d1259cc12fdba0fa19c06be3ff3dc38b30fddae75bd5b147884f2dbdd116cbf98bcda175f7a29ef5fc1db618437639405af1cde4c8dc5ebbb780fa22c100be71fb6d25f9da6a671646270d0015cc685e205e47f94ad655b6bb65f6d2f14de1a15c89e069496b7fdf3e0f6b450cc6c3d719f784eb84fb3a13117d911ffb75c291dd1e3102f4144847342043f2a93ce57382c0094bcdb1e10948e825248809cea23c34671b478537ec8d456187c68d3646b5a28080f9e6ce15dcd96c67c02d79057e854b6a0c437c0e34ab1e05514a72c5a723e8dcb43df297e527cbafb50b10556f966d1a25f3f958990ede94998b33b9ab28a6cbb9dcb7d2cb74d8ec883ae5799cc2388a6ecc8e6ece31179b76f073560fb89f300ca5cac798e51ac0bdf4779b204247574c278ed118e21e431e08accca2951c61198db4b75d621740e6495415172c189dfab4a44ce8f40938c2590d82965286de597eb9b81b7e5ad4bfea134f4463b65d4f525b16226db43a361f380f45f50fbac36c40d84420902efc19d122311ce972a1e15643fab25e1e72a5195eed687722877c8a6a2854a65973fa6ff01a11651e78dc93eac6cd742c752b4db92d0f2505e4aa1ba129c61c5ac467ed2efae96df98d7ed63fe162801cf4c503e1f1c4db8a0d0aca90b077341d4c340c1b9225f35801ce248104b4a5e5f86a70cd52af7f8a70c7551f0167246a117f03fef4b692b4b2d888797b369f32390879f2e5a90fbfa2e7b43f9ceb6dec1c3406a1edb023edc09f22f8a36975df20da321c187b1a2237f2df96f3eca260afd31d476bab5196467e6653bea36ab726161f169ef96c2de4171a7469ba560b124310698b8b3a353d856da9a1716c06d824c1194157d743ae836ad47481381fde170f0665bacd827063f220bb7ea59b71ff7bad7e17f89a9293784d47929fe9fbad19ee71f5ac3984f51c2e59d431f0d0d21563b1cb2c21e602c967cb28f582fffe87175e12b353f2e51c42deb67b24049b03e04c3af4245d6c1fe5e41b50b410a81cf44db4131463992cbee5a05798474719819dd5a3f6d24395beeade7153edffd3784ff2d019940deb9f9c695a57919d3459bc898e7d27d31df5feb21ae28650354a16b542f205f00550fd68c4a6517b0791488470f0e499b07e24c442962d119e4d3220ce21886ecd7c8f829fa58c86b98f9fa060246f57615f2e751beedf5fb7de6f3e26644b749eca520036ae0cebeb05c0d41e81e8d5a3155b067db4d990a5a088c4a976339d061650dfbd7f5d13fffe709371ef8df8c7d3cabb1bfd5525d03353001c28abb9e54145ce3bac5b1969097c8f6f92171ec34f8453091ba4dd9dbe524da77dd485c75ffa19a6b5d2f453df054ef22b67d32f9598d08cdce60959d522674c06345b02aa878cc4e98922ea0144ec7de087364726e09e93fce2ef45471c30e59b5396279f48ffa69b567601c23f6b936a0e7687b283c5c049b293aa5a3573f8760a8a380e3f7d3da6e2687dc9553371973bc5fb10278790f946b737484e8fd84fade7aa6b7cfd6a6b5aa4e7f32e0730f32946144c7dbb12043b425706f8cda0a32ea03c878a508a26b8bf8248e434470416269cb1d7fa8deb94ffe390ba9d24fcc947d8378f037def2b219d12995253d787f08b0b33f6aefbdb35f57a148db4be0caabaf438f93569454d75d69eb922ccc0e1a431fb44e88710ad20072ef5a53db198c632ca208e4e42d06d71ac6e593115b3eb4e0940d5c00b2284c03510fce8849a5dbff716f9774d58ade335aa144a798533526752468f4a17eb832c6c3243cb148d841372ef112447b8e56c28d5dab506309e5731df78bec38c18a622258b2781943d12f5074d5c4eae768a4d02cdc736aa82bfa70f8d39970c7e26419a72ad9bcb29691df3ef9311b93d3c43b5c72a050a9d8adfae7d656a1bffadcc5f1621dd465ec159c9842f4219ee79682a8840672a6b0e50655eb48a6cdca7ab47091b27cd14857c6063ca24ca4dc50745465e9e2ce7fff419490a858489a0de165ce058cde861784c31f8eb25de1bd71d96844f335bf59def3d1f32d911a4b203d6a7e1c3f9e6b250633265fc7385e30a2ae8ff1bebbcd5882afdc324f257fa91e220cdd762965e049fe08455ae6e632964254603544dae78b1ae91f7fdd2ad8cb924d4d163892e4b0bb1571ef5736102425ef6e34e60fe409a6ee3073da4c82d958cdff3b92e2ff08a1ed658ac6143cfcdbe4aab70626616122070773de37ce22f887b531e4c12b4e0bb5019e8b4075c91de6d02f093378eaec265574610c24f7e75f8601eb4cac0a954f9820a23a300aeee64b299b7fc04b1da77503884cf3a2964d201abcbbe9a4db8a44a4a2d6a383a33814e3ad3a1a58eb13199e13905088733108c63e667dd1370367ae8b38b3be5e1e1593f34c87773ed8bdb83a5dcab054dbfd0e29b9ce32634d5f1f0b248ea8ea238fe59cea54580f450ed5e7ad92803be5bcf4356b8941bb9c4b63caaa1521dfcc2085791a4d41f3a285f7883d5d0cc3bcbf23a8d23b40a7adbcbe725e14b529f8f047925129532068b1321928819cb6f9d81276f13df7c2d69d33ef8480358605c6266a446bc0fb814b71db85b0be0a67b6755cbe35f4a995c491952558e8bb2da314d91a4eaf5d2596d971bda6bf63bf969356a4ed5a760903b32d7f6b69d0dff8d14ed40c518ec482d5e35db98d72cf5b3d5b2e984e65b5c93e1af87a6cf291efa879038d019cd247ec29327e105b01aca44c708c2eaf9bf76ae2dff20d98cfba9b957a2cba734303be4d690df5329ea9e61d3b2535d8429254a00d5e61decb3aca6709d9b29a97c319866e73bb8b851b560b0027c366988e33ed052cd5fb6390b3d2530e4f389acbf61bcb59db6146c9015ce98227c0137ead0951f68f22396bea22132e15fe1c6c0ac81c46ca98946458c8c4424e36adcc95dde783e4032f8bfcfd8fb1248bec96d03af1fb8d6fce94df19426af30799167ba4c49ad6194781b2e79d2bb7cb4dfbe9f3361745fa9d71dd3e01f08a297c7c7a5f5941ed89efb8bd8e08dc6e79a12c92d79e933d2616913f0cd33b08ad2b14071f484199aed97bd812702922d78c2eb8a1387a395b9f343297ba1cdbd15052283e8b9514046b5b10948e743126958fc190c84f8fa4dc65670c5d25414c6425375a497322923348be7cb7dae911ef6ee7ca14a7eaf719c697cd34b093cbb9b29fc1974ac9291c1f59a28cc52643293e2d2597b91edb548634e87eec6b378098da150094136b1ab6737c6b11e4e174940b1495ae2fe88686294a49fe711456951da2a2e14fe2f37e54679207128925d6545903279beb36990eb7b76be3d61eb927e7c5dd174dcf483536ea5cff3fb5deeede3ae40d4e6f7208374736f0e5664f99f2078d0831746f24815051d14277782d51e61f54abfdf4fb02138198f0ed930154f5524d46f8107bce63c002b0ada702e3bd30cd5fb10af991cbad6d6de3d6168af081dd067995922ada4b01582f1af76032dbb5b60e4b9f7dd2c66a51ff418afeb3d2a46a8ff4de618973759d2f803bd0e98ca386d425e131e5bd65b639e8e6c7d16747a90a65eeb43a76aa0cca995367bd855f480108b974ed62e04ad3fe140214e12270fb152bee39f9dee1c2da0551fdc05ec6a9e79cb427bae48b64065fa6db015e597394acffbacfe30c300adce3d02e24e49d7e3144c185c541452028d8516aae62a1cebbecf8126348e9e8e84140a06bf67074e927462b6966f54c80a952e1e510a1dcc91757e12ed6b2328d9025004e18f053e9262463bf72bb8cce51898a92dab4a40f3aa5448d6d68c86a92568182c35280351c3aa73b3cd67f228b9f7a41337f28de6ef68f1b947bb053a234038c39f5f1cecfc357015ac95b29c4b05774f002205131a57f03a7dd4908ca9e220a34759ba9d4f069beaa0f03227b76d0158778a40e76bfbf785f3114c8d17d5e27f6875a624a63cc3d39a27711fbab89fadcc631ac64eccb129c645b5a879f8c89b0abd16e97ec0dfd939d19295a0e6ca9a02ce22410e3940fd1e80299a94607b6f1e8d9c01320a448451f56c7caa15b0fd0a7e550b8f79df5235667209b916604860e84bcfbe1c1b96d72b95216fa7a648b9948869f7cfe19b6815883f3a184d1d571e68c6a8298aea620621eb8b097a33f4fb371f6ce57d6f5b509d55b2f8c992b989839d01d52be62e268fe99ab6704949cf6ff2d0eebc12612b8ccde1ccc4753bff76773399f05972d6d21af78c66b24518c32c7670d94cd620b27cc3274b114ae40a51e2a2f0f79f87985a6aeef1452fe50419cd93561d2739364aa49c680591b27d79a54c38b356bc3c9688bb9da06b1fd75d356580f64e7dc454a6189fc3ac321a54e7a0ece670b1624876b3db3e47686124008d265a88cd54ab600da6336dbffe319ffe24bf615abd923c3e9c349bd6d11dcd0f3b899f2aba82a3e403f68a0a43977819a2c1185ee005c3f296915d898f3d27029717eb6a6b35135391df6fff03c61735ab4afbf7c32d13e5a98c8de716417dbc0629ffe38dc283233de9f9e509c5998624be5f9b480198b76993eb84e3d798e1b96f26fa28c7fcb0b8d95cebc61736e9951aae59e6ab84a0d437ab5e256be1ab392ab20cdd0c8aa102219a4caa6baa42e10998ea6e3d85889219cbd877bb5bf40a55c2094f248d427fc615b50f6592e73c9176922031b15aa1e295134d06087564e841f8a0bd354eb4372993136e31efc1103df92c04a007bdcbf47e0330f00e611c4f72457076868ca61b5ced88034a3e3de78dbe67baa6a167cd4866ac81500e7a9af70b51b246e9b6b9bb3d76e683550c6e3c4d351fc667822c813b6616dbc7cf5637e4d319f858a9574aba2c088386a18b466733519196d346c3d4b4693c45c78c5f0bc6098fdfc089e4cabce147a4c11fafff304ef6e1a28d7775b3c9d47db13f6f40e99c4bc648abe3a12dbd2369771342c4db2a4b60ed9e210556d8f7fb483266e00afc8429f6c2d8fd5a66fb5db62545320ee6c7829d0056033d935a813406f3d32f36d67565162f2c1ecfb9b253998f8ad267827b5b273c1cb94ec1e9647fbd2746b830241b22929749d661cc44487512cdf9fbd17810ddcf6f47dd2152f3a1bc0578e2b386e07c15aa2996ceb76bd5ce18d1e7fbeb88c5342d2e951b2c0e8bf55d59c2545aa77c65ce5a5b11e580b9c073eefc02ff42b002a5aab726784bc8b04981b5ce02359d362996bf587c157622d36034406ad22d998ed1b6d63dc3a8977e986ebc48bcc733e44f487bfe0be8cb00b9f0060eef73e5ccb6917f9dbfd801534b581e831a7dee7f0a251659407d94c99d06785a06ddd443f6bccfc7e8358cc6b73cf1a628bb5962c9974cad99de121d9fbbc6e66bdc06be79cb31700279afdcb62664710284111f269b1b5e8b083e91f711731b77ff531c930b61cdcabde205caed8ba27095f5fab8f48b61ed8ea5054c384a9183ce6355a8499e29f8a216f0cbb74bf2e39718a7311abe9c5cdf3d61f39ae7e3ac3c82281213dc2d505e41e9c7cb0d68b386308457e916ecb24db6add1910ac26d172ec7d61c8ae989d1652c31651a82308947f1e5512e83571aea26c8df12a68216d4f65a3abd8ee0f52db4917e2c42527102a4f9a2ba1000233bd68501b8d8f37d52691d2a526c96066d6ce60f51f4381de5628d58bd9969cb361c682336afabc53f1717148a26d711ba10d23dde063c1b03d3df0651b7da50e0184868e6b97547557549417c63b45248a6037ef062259539adf35572bd6b9c2101600de7413567bf8d6799d6ef5aafe981d90f8c8e9bfdd12231b76dd7de9ca8d0c91f84e4380b8ea20fdda68c684cbdb3a0a5ee9912e0d94f30dc3c1753021d8bf876a8da5c8d4392e511ca58e4be81211a7a12421baca0737608d2002457d13d192f6cdf979b5a017ef957fe83bc38bc3e877a367220655916914a1b061c9115bb0d2cec029eb32213e8f9f8bf51d635f51dbf780172d7032a70d205a15f07ec9335102af1ae891e8a0bb60a5f8154f35771cd350bd7e0dd8b2c9a9a982983bb6571fbc3989577aee8d2d5401bcc0cd544e25edff9fd6d6addd06adaa273b51d8d2bec15aafb088cf72735f7fc168a6006da2f0337a59ab4f9593b56459280acc7b75ccbd2bb97008628cab6e24ed7bf7c26d40b7af8aab595c2f3c3f24f1742fd94ce1792257b4887624cc53915418c66840b3781fef09537b1b77640e81f921b82b222297e331f185cc1892b115e12e4ef9079a4b898a30a706f8390ca744e889b1758102f2988e9dd2024aba99e017600c91c15bc8c7bc642eadad5b842da4841cb9d70df43f3669a19ed30e42ae70cd750ab6cdb2b96248c954b3f2e1e3a13c5bd1994aa768af2ab99cb52c7e007a9842ab0cc0ef2f1140d4a8ecabbdb08e1d5050d10d53111c1471ab1da46020c713829bbb85e508bfeef0643a5fb5068bbfa56c468b887ec422eef92faf3031d6ece1d35506c2fedd6262b5a0f1b671fa6ddc36653da2e91fc1ae8b12ce2906f670369c86c9b81e96f7390a9abaf537704e8a82d764fb189fa6bb9c6b1355b1145d2da1780de945921d8c7033ce2ded8864038bb8534da18d09ae2e7ed5d1e92caac5a85bd25e6e8d1f481bc818d78238dc0bc21fea4d86455a43b90866a71a9e25e68247992f26bb20080bd1ae3cda77dd16bba258d3323f1db962c19996da22c64aca4f6ed45f952bd20d6f304d51b394d74625ebf501e60c595e8f3fd6635c156f8b04f2b83beadd00b346c54058e4b79d3159f6a0588c016d00c4b7e80c5f6ff1941fa64a5fd85e71df0ae09b2323455d23df185ba2cdb2348da16fe3ea26612b081d1ca39d05724a2fd143d89c63fbc8c2c6bcf97266748286872e0fefdbd6585ffda658efde3a9a7775874fe5b4451b69cc5567884c9b37e0f01bfe589a4a520be1907df3e79017b972115f01810c6d67ad6ed2b05b2a246ef8277bfd6191d442f77637b2ccb38e23b2af8c81d410b86032d7a45ec7a0b4c6ef7c59a0329ae265cb09bcf947ed0ec6e910ebbc04f8e92abb5b1efe31da7c73da3399ba52b1ecb03a031a4c9b66d100f3c1f9358faf822b11d7e85ec1afd22f26baaf21f91608180529127ac21f8aeca5e296a2b5238347d4f8fd1f61fe6c180bf4fce189a36b0e2d6b614a9a32d245c073bc8f522b01aa925671390e1df1a90a718064365b86c6dc1c20af87ee73955b2e4040ab4d43063e633718bab5ecd1261a932066e6d98015859bd9fbb2efe919dff7fd4f3b452978d455b6ae6b84c3bef09ec73635e843b2be28bc59fddea91fa2358e8ebf237db4eb1a3ed3fae678695e5f45335898f0e846bc8e76e54a1a394619b79f77ba6d44aa35a4a965582a3451f3496b6c1be6c8b07b97c124e753b715716ca2974ea4c8d89ad8c15d728b26a4a93c78234584511d39419f8e0e406b29f4fa35fb7ad23091b69cfd9cf6a57e934595062e83cb8236899f42e6fd001d3483cad3359caf3b40e3a48b2193c818c301bedbab810026b759338d73125ea57d7a562fd7a0b83e9e80d14070d70e0e5de2082de634ccf92f06c31b48deab1750819b2a03b7e2f521748cffe62149a15ce7a44bed90c11f530abfecb68ee0e485ebd86d4d2b6255023eca343e5782117f4a5e7518569ffdd0e2e5b3ec0481051153f588c62c1f44e42ec32ab2ba9e382681853d671cce6e3f1b94ff9dd9486ffb43a5c7d1ce44e4c0397b73eca176490c8663424d3d12e4c898d1082c37b180a89e172d35dd9c1ab6309545c4c0a40281134daab356c3034bb196972b07f5f429b220c74ae47df1cab86e32ced54281b0efc55f132610abe84749c136b929e9460b711068a0788b4732c94dcd1baabaccd424dec6a7ae261bc38cfdc1c2018a0d6d45a625c5d42168b6bf6bf953b6cdf9fffbb4e2e00e008021ee0870fe77d057864fb882bf4975c8d16052214e2138253e48b31edb7e15b3edaa716c37ea49926d9c91e8d2a5c823c3ad4acbe97765a9a58096354837b1c0b70e46e3a33ee37c370b182eb8a8da5fa7da7b22b9295f31b8feadeb8852d62c34658cb8fdd467a50252936d1321868ed4436c1ee9151b455a79852b5bd934d01a68fab692f1bb2d3caea733dce9a012ee292ee0313befcd962526525ac3a9d9c16b8a426eb51dca286f3509d57dda3136611c06f98b0f106738f4d08b6dd43d5eb3c209c6f7e75eaf852ffad110d0a4060c72c0b46f46fa9a965d0b66e2228ce1f3591ab3593ebb0afe25c34245cf2bd03293a4119f4cea46a583bc32eae00ac32c40711fba6ec07f10c691302f89c1807b1f36fb9a7321c27bd94e3d6fb4b636ff175c6e6099d0a164a53f4e85d71f4d0cd7b0deba1dea402736900035bea5b6b5419a2afbaaf79aacbea56f4918442d8356852281c309409070b9749953ae9ddc7eb00ca24c84800f23b498b74155e0b185fe823eef18f31a0d18fa670c41b99c1787a264e4e77c0289d77f607f0d75379967c58fb2a47067fd605731a3d6a47c4cbcfdbd91d49232dc134e3492020bb5fd59f10fefc4defd66eb38b846172656a0ac8747d7e8aaa451049cb731e5a61add30e69e9f3d3522575d21562d260fc46171e2798d64b830ba5ba555cdc7f54568d52ed44fd18373130c94878ab5925fffa4a3932aff1cc55e084fbac66eaf8d9c37862e684cb37c173e2092dfe1d293a1db8985733dea1fd1af07c69f4c12b68830982555aec54a982a1b0514cc78985bd236b9d66ede9b7d2a210bbd2a5428291a823c9d03bfedbcd5161badc638bebaddb5dd4aa2e3d5aebc7a6b0e7effdab81c4bcd4898c85975dd416dd8cd4efc223ac4e636d081db88c84b6befac47cc0137c2acd2ab3a16a4c64b80626a5e362d6d160d0c1d2c54443f7fd1bb66a1252537834be096459d11ef12dbc692dfd819de11b8ea2c2d4585f4ba14072765388d69681ed95c7cfa3fd6e20ab097a99b2a70a25090a2b35951b97c412f4f5c624c6b8c5892bfecff47e56e44c19f1629b5181ca63c18648c59a45a6cb56828f6f5f10e2c3fc094aa642cd48cc8a3bca7c368f82930931daaa0c5c32c095635edad69132949ea020a10275f0607cb7bc067f59b1edab4a2b643f1f53931e95974ce384539a8dc5500845c82ab92e3662ac12ea5e2d8b70be322214828c6596b027c40c581ec3a73803c65d979e3f95566ff259030735d85d0356927f78ef17bd6bfe018810f570838a1845ba68c1913ae59c09d764ebf4474045e8449a2e9d3c7ce42e0772f3921b31a1ebcddc407378ab4909a43fd7be0b4cbbf9d834a47d97dcfdd1b98e7e65886b8fe5bdaac364a60c70ed5f1f1086a63848fd09698e79f8ca92891c0af3b8f0c17a0eaf3cee1744e862807d1b121277759ab8b9c8ce6556408d7e6c3faddff107882b30fb3b3a9705ab58430e21f6e528f07948b1320953afa6f5ceef43f52ed22785dbc3b1f3f8eae31b19aa4e7cb775bc33d93f45634de339972561fbf1cda5f9252744ccd79a360c4a15807a5cf01b8d1b6b62c063a00df5be60cc90109383d2cecb52c70d0ff61680d445004f3a78cc888b83db0c5fa49f0b74c5a9978f2e33df954073ff885faab5c320d35867189999b43af95cc99cae64a7d71e792005b1f05deaa1d85c830eb166249c2d8bd50469c53387c8264567db0aa185e394ab07d8a2bb4be56632d4bfc5620b574aec43dd56680003c7e5d5941e227da4b9176a85b3d2b2a67cd7657e49c7ba0eee5e0d0474c9d0046b1311a73d52c74bea9d098e1f89b47485ff68f9f361a8aaf1c9ebe84d115a54d0b522ebb0571cdeb89b28723a00ef96c56ab213d5990d0dd6610af23a883118bbfcba5b103929b6e6812d1edbc4c17af46f7dc842ebdabec1eb9dd264dfa33349b8345607f52e506d2f7f93c265b9e082f35834ba500e53c63de1cf91b19b7555d3ed254b6decc22d6589f92a95a892b2bac16ffc32edde4478c63bdd21c055d41ba24caf86ff4a286dc5b37c19067ed9684e27d3b617dbd6723a57396da015cad4dde393ababe65a85288f6c886f055ec969239d0a63a06ffedc92fc95799e3ac4249f1d066844330ac4b16c6a20bda3b9cbf91b0265c39a3e73b3d5aa29c8839bfef66b32db777ab8fd51bbba06fb56add9dd5c78b36fec556b640a40bb7de076b7b708ec0f36ce3b9b53ac657dc34bfa8193bce6997a9760b5c5015e329db2e4ebac17861858496548d18cdec0b4e4be1e0d15f68599dcf4a7f54f12244229bacbabfb074202c48583d016b18da0e2fd961db98ad65401e2842d18f9e24e667c4b6f47dc9683fecfc3cd468509a9c02f832bf90d661ed879d55e76757bc8a87cbd9fef262bd537e0247afb10b4b4a7c5cb6e9ae80bc9bea779abecd4c9b4c98ee276a8f8a00f1a00cef395096377821cb1552f46dba3d184961fb237f485794f7a4dadbf5a11a211a4fe17ec57e38f6fe52517add30924142095692acaa7e5c30e72297263fc76aa0dd532f4165df918d7413bba44f073567c71df58cfa365c8637343362991d4e87834ad5b8d91d79f0a50714f05fe4926700a40f15b2b45dd0acf11842dca74bc63025022f6d48473011054cbadf62a59e62643d6ad487946fd0d439b39cedbedd55cc47dbd141e27266fa122c1f26e121e81fc733c0e0fd0b2f2e63863a4b4d5376ad8dbd3756e7c623480dec6ce0079b4749dc184018cfe6c45f43dd300f7f02050382563f468b73895c7de8ab4a25340fa5a2a572010c5d29ea955760d61147d71e5f1b8cbc3cb7e8afbd27a5f1e16551ffcceea419bbb30ccdcc5442ac44128c10879d4b54c12f230caab091a831d621da2f46ac448957a778a9ef5d532adf099d87ec8dee8eed8489f4b16518644e7c1bcace4b925112804d868a392c7e0652a917e33e23f6f8350d0cde01c496c2be3ff03f89f254683f603d5752e9f38314c5c8a556beecddd45220a2893e5d637c80987ea45fc1bfc929574dc00460440b6846448b5f4cb73d639ca9face64eff24baa03cfe56d16f9c4b310ead1d6589d50e115070f959c861b176a30b92ca46f3e84606558cff3d0b435852caeccafeb152eba51fbd566ff4324f803930c2cefc8e0645d8d50a16ee9d8f7b133a015f211f779ec7e3a919657100b32bf23f55fd0ecbabb5cf85b29b923df1026f8ac8a5de7df6f0720088306c0e09267da4606c49a12705561854bbe8d1cf9ee2f0f9ab42d370effb4de2b192e633206df1706019ae3af031360d2c137b4adf46eeb8aaff9df366e03c46ab8c84a388cf9dce6237551a6b4ce65d3a935035dcd8d6a7eb0d7d3328b40c49eea4dca6e86eb13b457f5b095d144cccf5ede1adfe66e323dfb1d8a55be4de2b4e97fafc5b3bcdb252c2fe85f970bdeff4e668e7ad3db770dea9943cb22e5792ac1b47bde195d531ea057a007f692c31986ba551ea3ff88604b41d3c2893fd1a334abf45d046d40286b44501bb0e68339463e0321f39dffc2c709f5ae8291dc6dfe39b694ca78ae967e6b577c4516987f3f07c578847247d056d08594e2a8344c1b79bbf8cc70b3dbe2baf5acb021ebeaa3d0df47463a5a2d529fd7c71c240bded2ca403e84c19ce31bdf38159e63b7795035930ce2b54eb59d136248de8a94847a325ebdb7bae237d1b036ad926625ed07d1033f3ba50ae42656fe863529885bc64829e8bb76acfce5b700cd129a9486cce7ccb27772e7dc0b6d9ae490056665f3c1e3cbe20c5f92717e440c718e73c858dd360b225d77f40912f551017302c7541cf078746ada4629f1e92669bd2e7b91fbc3c1ce07bd8a61de277fd9ecb2404840668f20ac6e4f81e88781714aab161c6347ed7dbc1a197229858f2a7c4de6aea4012ab59cd9031a276a0a96331da16d8efcae991d15f81e5f8093fb4e3235c3e78777cce560be1f9acb5551e1ce03ae02f0dcb081432da44fdafc2c3958d6906aa1c460de203634204966d4d5d6031adc6e86e92fa79ce48185f78c69c4e43b50019d25924eefeab554ac1453a9ce1fb5cf2151029bc841061e7cb3685aa2673fab50eacdbbefec046b27e765f2d06a361b5a9619c2c121dfc56414f40a6f11510a42215d24a3207bfe2797c5ad8ef0e855f4e4504eea15cd2b6ce5e5a7bb145803fad987e6f53e1f95ff7732181055720d7d875e4185bdccd4ff542cfb0cf56d09318cc138f8a1e78a34b0dacaf37544c1d6cc15e95561c0a3fc2d7d08e795bdaed395e18a9d39d8e9d0493d3bf0805aa4e4107d9dfd7bbc7bdcc5ba04aca552c50a68c57150ad987bfe4d80102cd2a29628e17a43cf7303a26c6ebad3104c36094d43e15003c18f950693d3ee613cb88e72cadefbbcc9604af6b8671205dd4202fa51771d874da325fb34e69d2b9892a819d4191528f39ccc39fc2bc00657057804b72989b5566ca85c69b3d06621bd5c65791344329e4325a3261c9479b5722417dbbe514a9fbe8e1f1d20f238f035a2dbd4a3267af61b090897e4cc4e039b06d7f1421be828bea6ec97b80bf0a1f4cf67953d682ef590af3bdb155f689cf6eaa3610403e4dff06e37f370cd2ffc3d43bc8c2905958b8a5c8227f0ffda8d10161a0ec7edc415bec45752c68199d38e08962b8ef2aaff3d337420916e8c956e19175ddfc645751ebcd7e905904600cdb23e4a0d091eebb6b26f85f63a470549688d3c4a7a898c22b287ff153e335074234704161e861325edbea77ac725ab0098e649cfacc40bd1892851998112f1e9803823e08cb52b59f16574c98202ee7c651e2e14a0b5a3398b9daf15978f9146b416199acf0029b8b7cef0b74b34c8ffac3dd138ad5ae511fe798f095250b1218bd1995352740a7812b7aaf5491e13f472598efbe8935148dfeaaba7866cca63659f3c7ebc49e57bb124a70d03f15e1ecba049606f2e06c8ca7f0fe0206cf0c7fd4ef88beac744c9749b1703d39aa370ee81907bfcc69b2ead8dda3db07b39270cf6b6efe62ed1cb38202b241c90de7b03e3d17fb591a28f847cb2b45d86b2cf626892306b4f5e675c12c74f1c5e00f893caac61401e50fd2c5d459b6d654647f404da6f6fce655c77bafa435d42997b34871b2f1fe7684def0c0b30d5ddb5ed64755b3ffc24b4aae46bf0d963b00dfa25a1b3f564e6e010a14fa76fc192e477dc5c1609c039aaf1c81501af425b2efbdf53c7674709f3c960a1115e77baf2b90c1947759321d020b43d36949ff9c4af1e6be6cc86d450baf2d1759bb89d48c8fdbd6c390d26473af6ad7efa3a1929c79d49a334737e460c81e4fba472a63fbd8efa67bb01d749d12cdc7044b7a7b19bdb1a12db5836b9246ce0272f66070397f51788df617c0b2c0c250610aeef4952cc30a106cff9ac834626ff4ce58e096532642c3617fcd2eee0b73ad0c7aa57fda1f02843a26f803f7797afe2adb41772ee32fcb7b7ee423d78afc5eabcea90952dc92e4b440a1714ffeffbea7894e6f3e6810bd0a29d57fd62081f627a71cc9070d8e4289c51aff294399f60d635d82f86b76320a43ca1e678db2765dc6c903de8144e3f0ccb518c8261e731fdb330b63c371447329a9405698b32873f8d06ba923fe0345ef2e028e699cf2dc4d9e0c7239bef4c99af1ecce5d791dd1509c62a0b3a7db0ab7ef0c2cecca0dd94a509804715cae995071353900575a3c63660b270d347b5e107fbdf2ba265f6269cd9d0b8e4ed9f8dd61d08f31b4c6f1a3a87a98dc37b98753cdddb6e84dcf5744b9ad54f2b80f784342dd4f68b3d18f08e61b3b09146b9db6621921fdb0134d7af831041adaf7a138050963fcbdb3af9d4da4cd12684dbcd3064b8860490c51118bff179104b7f80b02dfe0855d96441476d6929dca1485af1fe9cd564f8c3c9df944fb59675b5c3af70c97cb1edfadb5f442cf12e339ec60e83ca358f196f4c09898d3da5a386402aea02098998a7836db801202aa7ad2a7fbd50c2dff9078abf086fe8c0137301f416b34f2bcb4f894193af28a55f60f37020a434b51ea17ecdeb7a7f0d1a4841ec8b49e22c2dcf6d7c642ad30a4af89f0808cad687884fc1bf16d996b21bf72812e87ce8daea962bf2e6e807508b6c6e9482972d92bd2214aba8a0d6ff92d0e55cb11f9a0710aa442828a1f650c78b15d105bebf8b688aab80d139e8134e51e360a20b8a4fe20d86aec321340b877965a62fad27a23192d3e28c37a5876e60464cbe6670cc600fe57c042ad30e9956e49bd1557791302fd007a5fb13fbe49a3ed9f4e256ff5b0023199a615adda1ba215e53c34ed14bdd55fe6dfb4fde23d4fd908f2b4170a1c1bb872d8cea620f67ec56d89b360c484cb9ce4afb422cc79dadd296b3126fb9b6f1cdd4ce661460bee9ed5fa7e902550ed0d578ab0ef5ae68a36c4c100e1b1887467083cc69309deb90976ec28688b11bfd33cc7702db2879d4943b9a30acad83a068d7c7e460b4ac8aa081ec6aac25cd611e50d4b4e7e5ac62636a8b9e7ecd5d3765aa708171ebdf10bee9851025fb7549062c8c994b931ce43a7f05dc0897c4b40db7bd27593a99efaf7a698253292a12605b5d3c2e91878d9be1a374cdc3048d093b86ad78a611338ef1f0851cc376aab4b3035586dbdc201faece3f416565133b100885cbbfcf1245707629e8fe912b0530d688c292cb259f8e22f5842b02c4e399d298bbf404b5a8d05add72053e28bc918a59521d6ae396e22a13f23dda2e4289c0e2fc6918fb7f09db2aa6e31531d01ea8c5e0da0914bbdcb9996ff227e3e520db0f85ea266e952f2e6f53eccc8d87ecb14d53d0acba120544cdbadf2256f0ceff00f89a7a5d8752dcd1c285b19c74765a74877c166a09cee9d67a6a488e738fbf60e95e94eea5e5b2ba65d474fe1cc2ff31e41ef97ba9642281780091430ed26b03d8522dc45243139577ce53225c16e3aa5d4cc88d2136d3bfb0186c132684ae047dba4b2a7d356247e69ccfbc19df858673fdb1b0de3f64e53f2e1fc3b2b4dd7188add85f770bf30cda14bec4e823f991d477b1c6008cea808daa724635aa98363364da2427c95a75e0385df8e6ec21944f75a49172b0cb6b7aa52cc30a7ca8904c660e4d501ba48c69e43dae35d7980774d726b142964b560c093fcc2ec359253316c1dc6edc0baa56a8c8c28e076bb4c42d090898250b652313d059164d8cc97560617ed1ae7d460b1eb356951901be1e6b508c0c00847953c6248c2e43f1b1abbc3899c3f0645073ec4186382fa7696c9f1f528eef28fc15f515be0695b8049242fc2c7fbd249bad1c15b9727059b1562517bac23f7573b508f8592282aca45f815a69cf4c4b7d69cb0da77ebac9f65e41c33611b07190ad44aee7f63f199039aeff81aab8f2174e9315188fe58a9b33e9387ca8b8fdcb3ef9730c5ee08c2ad962a8107c49b98408bca1f1afce7c689625dcf133768e5171d6d42928b21d24cad6cd855d7b736789c2db3f5f93946e7472a7114cfab7e44f86fcf0b72f84f24925e77372cab90f78fe8a057235f25d2c438cee39e47bb9134f6ac837be4acf87b1d08a0c93282ce3226018c552ef12c2a055dae44fea045ce6c4b4a60921641472f591b632b33d204cf91b3e3d18d97451ceb2ee3dc987b8d6d286924136a170eeb1266b8dc3c4b41762e2c2389b78074bd13fd80cd4c89b40402339a2279890b66446a3162d444d8edff80c1bad519f30bdf735613d13eb867fa9355c7a712d1e38d4e5dc3082265838ff21d11f4c7589781a27dc0f3cfa5f70fcd95bccea5eec2aa0aa7199440663fca22bbeb72036cd2cbb8e2f3cb652e9c08e8dcaaeb994ab064ee56fd50660f65bcfb1b83f1ef9c719aab887cec662ce73b7f52943b42a9478cf73d3c36f47e3553b0fb18c049ea86262547c001c3aefbc08e6dab0c42404a6ef9e45f0c0eb0c97534191e848eeb949033a4d771202d99a95c5f10c77e26ee9dd162ab17bc2effdf9094c921d310fafa004a655f8108ea808c9a687666472579dd319e3145163761258a3a8758b0d803f0d2fb3c56ff5328e574606c19b4b2f9a8c6180beae091c11fbe814e0023812627b0e011904bda83dcfe50c83497b23233e6f622a06313f1d89ff7f117b6d76aeee9806b8093cfa690243ce85a6813aa6a681d1ad66251e06fe9f14334ddef9c6bf38859bc4e805d37f29bd845221c6da8929b9057399c12a0723cebcf7b750e39bf582fada5f548af327a1c12f5dfa56d6f77ca21b54423c068b7b951667bbb571ff7c404b0cde26e436c71cfa60147ef471840b4a8efadd9444c27875a332660158f05c2be6b0bb81ecb35c0b9a13bbf439682557c1644acfb982152e9d3a1e5229e7b4df74e11d625a83230b5a4fa4507ffec379b4c67478dc5d75c95da14407214ee41d6a3aea8ba76c06994cf27b2e8b11136f34dcaa7162033051fa7d72c5003b644b7229896e0c91a2eb96d1c891b53e0e34256f2e68cd46db78df2a6f7ff3b54e13bc48b990995a788ffe700329e407f8a3c98f6e11e1079a6afdc0eebdfd074de418dda40d9c8997b1df21073e71abc32b56330ee74e886d446fd31dd6fc090bf2bb6d2cd92820741905df27c04174f489c5da917cfd8565fa34bd67a0f134949ff521b0d33190e374e04541ba2a6c956ed2bd54fe08be4b5abac5daad3e11d6b903ae73f463e9ed97732682e29df014689535dce465bdc8758aedadc7ee8a5803b644e96ab773994ec3198ad1dda589b8d36b46da8292b3e350d2252ec52fe10dd2233c2bbe3b55b6818b07cfab5fdd2e103907beba528b631f0436053ac94bf41e078fa4e4dd49ea7cc3ba8cd0c4587867861b16bb516279974775913b989f0c39b2acc893433429f9a7743b2a0c4eb21c3571b3022440a984d598aa889769b6f6f7ad6ed6bf80ce2ade35f5b32f6b072de87c7bf1c4c9f401ee121783b9cf0983f9c68293266301658804048f80d10ed87d3fb30c21d16222c6fb6a58cc4c85275ac7f4d64f3137bc4570bac61c1add37fedc74a43e8c95b1b3997e24fc26579890c3893ee1ffb202630d51f4749f09ed9881ce9f856e4fbf6bbe422af0e349e9fa67e5d600bb20cf942c8a9968218b9a88f0525c646348612e73b610a47b9b9d7af6932f3eb525b605c6fc16aa3c5d1cde9b09f4bb214481dca8500d2f2200f9e0cc6fbbe99c306bc76db9e8ee3538bb6356aa6ce665ab8ae41b18b1ef5c47cdf5ccb845fc80bf8851911425ca1f274307505a1995d7a801ff0a2499b7a5be29ec884faf7c4be691bbf319ca5ec5eeb00332941d198ab6788c433d4dd5f8ebbb88de8809ffda1dfb603895ec3f96d580dbe3ce8976acc73b460af0af03cefc2780ebd1df747a522f5f7ceb2abdf1047b4fd34dbbeede14d137145482e1396fab8354409e57d7c4b4976265e926d0783a902c3de1f7f090e2c422eabb71930495160e8a7a9c22a53ac742dee8b824ed4ea4c19c666f131280e9afb73bd56d692dc6f120d31133c3166df7f5047935747cb0e481a225255c29eb1997417ea3d2c139dd5a74ecefa22c5960903549b3b13ff3aafabb95be436b32b063bd2fef2464a130507b02c7fb724f06707368b5c4a4e0da89cd0c394701bfd35abd2662c60cdb3834438726898ee84ce8eddb35ef2ca78e2d700a48024cbc15b76840b0da95d80eff191caeb338834d9bdcdb60b9391c3264bc152be63824276effaa17c6bab5222ec99686ca008bd69fab154d90233a969ee2b1b0cf52e3dde4e73ac3ad9a075aa234739dccb362f9c26b32c342c37b1a0d96d8ed55141423d49d6e02015f0289d396bd0ea9f2643c818734dd8a889de2bff0ae6b6424e0a021df4db8619902daefe1e919fbb97b6ba62eca9cf2313813ed375e966f2a26e86299f85a177a873f5bba16cef351c95882c98cee65c9fa7694eef3a9123a44c640c08e5a3118d2c9736d3a3d99133f6c49e404d2449dd822d0bd4ff131be9ddc0f9f7df87561935b92bd48fd8f7956b610f6e59d81b5518c78d0193f5900da2ae776d30708279fb0581d8a43e880b900928d95eb3aa9cde4b87a97c4297732bfcf9a2b9ce0fb89863f78417de39ddf00b05553cbd88923c75f7660c5566c9796f12fc508a07d77e3a2ca30669e10608f4033ef0664435e9aceb8b3a9b69366cbf09de4a8f1513027565324d9288ef6fb4fa701c81b631d598b80cdf3f973e8ffe2468b30d1a9ad7b19130cb1dfb0b7c11b82fec256000cbcce2e213c2ec21a2009bbc6aef1cf0b8eaa4c2aa54c2d05388cf812652fbd9aae16e1ff07886fb68bc0dd0e86060e83b4d3b1871a05fdef0cc9868831d860bea1d28037f5782753d0b329d9052ac486dc55cb6dcded387c018afc6698cb3f35ae6c3982a2c180a4b5640e661df997d1022b23fe96fe25578db1c6fe63486c2d9ebb9994fe73f40fe3ac00451c11e71753ee7ec92854be282cdfd31bad36f49e06229d3caae32e7f70bdd066461efa62fd4226dc0c74154e5506105f7be18d4920fada5f7a4735c2c7e7e380590922ca5fe6bd8806e1a6c6b1a4be819667ce287d7236be1be501477a85bfd1a54eb653777e9c80f96fb91c17bb86694844be0882ec912fecfe16f81e80cb113da7c21653b42dc27c459a79a7089d51348c276b0bbebea884f35c0b441add04808869a808cf06dbdbe492e3885390265fe2ecfe55a875033db7a168203e772e3df5789d62fd837f5a6dd54f54a04e64771d0031b6ddda3564e65c1ab68aa6a6c3ec0de9104266ea11e2469aa246d7c32bebb1ac644c41321a58342e5cf6e24f7b1e4f88149126dc279511acf3c8c75582a2e194f27e873fa719b2949fd68efa22ead483f19b0bcdea9e391b9cb7454178a0098765f691f1fb8208ff9be40c55529f0f03ee83ac2e15306826fb6a2ec09441120d8722d4552fdf393b45aaf16662d2dab73d99cff9b24e08aae6fb367e3217e94aba5ce2ce58a6ec074c3ae8be5c20a7602fd5d058cb44bf3d0a24bd50be8c432abd20b898a96e23da5d357257caaedb803675fdc09b3c81ad54f5db6df14e29f4ac32b5808fbd8ab806077672190527419093b44d50324665276aea725524d05a9a932ef463b2daca5466188ffd3ce51f7586610eb945fdfcaa4b9e56784267349bba91cc6e18a8a10f52736157c58838921b8974bd114bc0f9bc0e682adfef989834804b1644ac8470cf111cc3df97cd1033d4a46322ef385f56856ac17fd5786d560263f615822012c459086a4f40e756a611f9a8e8671461590960de5ba442baed83e925e607955449be6094235351eefb34e7b2cab45aa45e0630ea6d85d8676c51ac6a226a1a63a2ffa5283a0171af0063bca7c38e01a2035d5101504c7717db73c2d9f302e48fa0f4d5112e9acc48a4845f660a8001bc12d39884b4f46e4443dad336e2b4f8c28e403f73c43112a98db39eecb6b3cba242ac57881dfe2e7e3a880558cb67c8ecaedc0d180f59ebcbd0fb4bf694b996f6c430f1b73b264156abb9d69be6ce67a09c3d00996ea6af50eb72de2d7bde92a57a8e9331e3642461f6e0e33f9727d827d5b15c0eeb930934d4ce05eda0ef606743e49c09284761dd85a01465bf241411a532066d4d7cb2fd1207d16d515d05ec9260e6cbb19b6af5b5c714ad01194936bc8b5f1493d86e55564ef0f033ab8b72c70098e18514a851cfd418d4ff09be9500b580f6c4bc461d27192657cbd9d7f38fe8d5566701344e93475921a4cdee025ada2150894b91323045d9c2b88e1a2fbe47a5087f9ccf2776ce39c8d1a91a518c39d18a833f9a0c6e182fb25b1dae8608a7a3141034964c795161fc55e51da36240fab61c8c574034923a146a444d5b86736eefd36c3568778907d43330a126cf29e92b88d74774b08b52ec1fc1cec21a5e8cabd3222f50ec123ad0d40e1fd9722885f1cf86b194ad1db9c6f9ca4e3af3de15f99ade8e22896ec2dbae4222ff7437f6ad8c0985b6fa53452d72922bfeba55fdd985bc4694b788f6555eed319465302d527e2ad2d625e3b71040191eef1d8c54bc0cbb36f4a9eedd16b82b9a86d1df2b5c4a39b52260ae75f185f86408aae644369b08360ac7e040931f8d008eb271fdbb76ec63e8ca2b4efea4d239560de57f18e4a121f2da71dd9367980bec35a9c69189044f46aa9590da1875f0845e3393ecf376cfb51fead34fa60b0dc684f7f50fb243c1c7fde56589fbcdc68f943a2581912aead25c551a3d40e9d222ed877a9ffd2aa2d424aab8ae4218f9320391473138680a374a0d55570ce9459ffbc4b14ae4e2405ccfd4ad23c936c4c82438c2d77234108da57d1060dd002590aead52deb0e66893eefc3252fda576ba76cafca1ec744c63e97d6a6e14ddd6eecc000b1e54ae1d85abbee5d3068381c357b2cc00b3f5630645d85106e667e8fa16b35c49343ba46d5ebde91736ef90752d7c4ffd905ff1b916e1851f3ee9610bcb194f123298f372963285c8780f6909deb9f86dcd4ff7cc60c1a3cc4e4caa7d563742145a8c5fe2418196690c3fbfd24783e00c6b09c6c815946a44fa4d0eb1704813167a51fb2b532290743e6dec0ab61bb7cc0648229c3fc78872bc54dc9717d861cf416187c13a6f385d5837fc9e19abf1f1cc7bee79a11e6c183b40846c39c2d68e3ba16c4b2c6425868326836b5b555c510ca598f3049f18a079be1b28993a5c2efb3777f4b164189dfb1ee58123f5bac86621f8fd8e38d2ec56ef730a200df020f53b106bac52fab639c7ce5e16171b3740686427642c2595f3db53ea06fba8a58f73a89fbbb2771d49b180a78ecca95147cec7098f5a06bcd70aba4ebb37518a01d7e283a032e021415f1b18dcd9732a305af89b8b709f624a0d4d60b8d729a8c7cf176999492fadd114d8f74f0e8ac74b14e3ca929d809177e7d31fc2246778b2b5c418586fb6332784e33fd444be29f14fa3251d00c4c275a3def6d9002e6b6ab204b747fcb0f06243c14d4bcf170c1811516d412a9be31e2721f583c94a853ea7409de9cf9d2f6f61cbc3b810cfca378ef865fbbf7f55b429c65f40e6b48c79c519644b796e93b4a3435c78cf91fb12de2b345d94e374a9c20b20580afc5c7036d89074da88b9cb6ef539f98b6ca409f5d6d4431d29ca673b61f41ceff9b124cfaa970e427877c88cd561cc997460f6ea4dda69e8d355bf7a1563b5e289be97585ab437055ab08deaa11b78ee39db21c4483ed023d5a5b745748ce68c3ed8d257590e07298924c89cdb602b9ea3dfe27634f34a09d7de287c3964267cccbfc43c975dfece4e6a56ad5c1b94e54c7e37506625bda66a21ddde772e4661c93303d5c663a8df171bedcaebd2dc3688b2c7a7be60febcde5761db6e1801ec27371daf12e6f9299f42321a4439d92bca843f6d1c22101899e088682f3f8208314d7987c3fa9bdd04f26931e8abaf40274eedb37451b6e2588b9f731ad6e3a04b177fc8d728dc1ac94f64a258b26de80c34f5326d608071145f64c678c920b1c63c60c6f15e68a6fc1903b02179b7f9d73f9622aec9e9cf9cd419743bef60da7830c5776087655325819df1a02242a48ea336707fd7b69daf93031494090d5feebce3dcc160f994c727f8160f4946311b0b3748aaa640766be2df57c8d5f4679aea582e6d9304cf3a8685b8b3e54ea2cb44f1e4281d6223d244f7c4be74a709e985257b5656b737402cb7984478348514f9789eba27e1b74621fd49157364c545e9963aeb57d5728e049902ee9ec1d45f461d7401c627d689b3e4331f6ced8ec01fa8c3354690b7434aa8250950823bd3b184d30ac83f0a819aa5411afd7f1f5bdd8770b2df5db67728f71a92af56fb495b7d3378c730a7f8dad17bf1fe9777c37bc8566008da41c3c661640bbe9b4b9a4be560e5b982aa3b48ca26203e9af755c1827a19f9f263eda80449a84a73cdb79027cf3421666152cb67c25a1dc6336a91b5b34e13191f6ae8aaa7f8383dd7e273b15aa8b8fe2c52accb8c248bbd4c30862f1a5e315025ab53fd70087ba5f2cf069eb3ea94cad3aa6e6f9ff467644a2d85f80076fc096cfb8a95d3f0def4a92d77f93e49f0f45570b4724efcac643358bb115f53f35304e3624df56f5979fdf4b7f401c518333f13396fa6b12be208e0e341b03a5a86751f974df82e6ee023bfae42db3e993b61eb8b63a43a0dcc60a715af2338628c3ba698bce6ca27842513c94bc45fc7319336931a841706814c85babf677e3b91aa26bc114e7ed0bf57a54bf4249c2ef140f2c1637ab0c5a32f53c0b50d9a898d31da1a54f59b6923b90fbf383f2577c9e19ad779b1dcb243d9d11582c699b6938260a9bdf5ec749678a4fb62b85c4a3df1ad8f02f27bfe321313cfab37f0c7e1a7ce95e00e9a3d0e76e423fc45d72350e212cbfc9ff9c69623dbedb82bab6b0fb61042b5e427045729f7173a8fe0efc94e021eec85886d4a6e4c2ebe799ca722e0cd84c4df11c3d29cb8349f75fd2f8976c886ab3006bd898a0cf5193ff1d006854eab32f32ee226e40a814b8cfb5c0c67e2cb94564f0d2855972919f47df9e334760cd481b0510b50d0d44700eb5ca7de9a33c483eea934f9e3800f9f3c40485ad4141428edea407eef40d4c305225022046728d50122fbd72193defdc1826115c7cc5e77e32bdb8edf5b63c6e7c884b1dbdbc98df16b2c01a48cd8ff48e913b7f8ef85ed67f6b20866595788bae08aa7ff02146b811f5350f67384c4bcf9334026b90da1f28d90339affe384d28083a21c682c1075ef8e47e86f64d335595958e703bbc18769c2cbc2d6e01377a8604c1878e9d19d32b6f9404f09910b2138cec9a6a8ac3bf9887d927938936d10fd38234f5f0995f7bec6462bac6378f34f0e0f9c29f8fe71d1400273add3f43622f204dc0d22390872c0d9087725ffe30e9334ce35fc7804fcfe9fb72e7e3bb304e7befb3518ffa23db79f029b4610f77cc885cf797b6aba381373815dd979550b0168977ed043d861c7bc83944460d6225261f729a70882241979b92609600440d38aec16c6d316fc8bd548600b5d60ce4f84baf2b41701a82366ca2550cfe7a825bad77d8ae0943294be35ace0778eb6b1ab1409a0538878829207bdf1754f879d58bb263e6519c270337836ab801a589fd5a772d9f7b50ff2222cc2d70717818080faa4aa197096272e0538d0d9955ac59c4d26b3bc8cdd122467892fa3ef95a5d2c46c14681faa71c7d85250c798c70f5fc0c7bf4a9c520662c5713955f582a76e1c7411f58772d0dd4380c0efb0338a24e83a0b0c2c9802c95d5445911ee125bd81763ec8070ab7d453b38083c51b3b4203cb11ced095f31bc3da4f231de45fbac6b388ac30f1ea14d808fecada4e254bfcdc77e12db859995f7ab564f426c34e585c276829e519fef8783ee9faded89c37e196758cc1739a20cdceb9ab83f14faf280fe2a67f3182094c1cd5ac6281eeff120ab414d1f4b9c8c98865f89861650fbbd7fc785469d3aa352cd2100a92f6812c59108a48ae21f56a91222d29d3703742caff30ce222d474d299d83935764b528f69d7927835c0550b23f6217cec5ed6362205a5ce03101104b7398e5414ef0ae4fce5e5807bd7b6fb67dc6cf8ca82fa176b50ad7541a8782ad58b36150f955e9da9538cc0e959754e7edcc96aa65b00041d0906a4594dfe691ec3c898404045359c78f54c652c4885f632f62987c469870475df342201e4198a0e4b77ba892d4cb63b0ac19e61177c49444a3d73c8fd5d74b01fc1a8f1cac7de994c08a8b692d1ab8e69ac7d8614775738e87a4e94b1d0201d7e71e247a2da883311297448f689b3a5317167dcae350a24e9d0a54a8610daac1ad4b1a6b7f387220dafd68491df0f8254511c580ab36308f656f00a742623487a81ed8536f1be81dbbac55b92807bc6d2416cf5840913553078f991288796c811c4e33495239be37ca43dfef18f7b20eb79c48dd56bd95577462760321c91b2b4043559c342543ae05afc705e63dd472a57eba5892e7f581f6775b47f89971dbd75ed777e7a38cf9ecf078bc2d543b3f42eb3b208b14c763420515823b1cb61ee658213883b742a89058b78fbdd2d5650324da755bab2b256ae681d908123f488959e090c37a6671eebcb6c0f0a3855ace2deb41e2ab8532547ed4784ba82984ee0386f0e970cab5b416d46f610edbb7a822f64136b585cdfb568782c61925381ec223f7915998947dccc57dcab135969bc1f85397f0e4b6c51c23480462bd13c83b4306a823ada427336d845b5ebc8105f6518a3bbe94e1bb8df4f20fa54f85b868fd142723eb67ec2b8ab3b339220865ed0b3b5c0e253924e40b0936405a2609e6f091b0929dcbd0f869d2032d2e474f43e8818b4f64717ff322fe39e8cffecedcd16d798489840729ff304f649baffd5b0af210ed282b6590c111ab43c75f9b7219619c1892f5091a03d368a2cd2795a4330270a6eadf4e0666d16df409d7e8841fe0c0cac9366de68e04b63f6667ea811e3d6fc90da628465089672b8808ad174a19f2b40cd510723278783f34266c877dedfb809eb1224b31c23e2a80e344d73ff9f24ae44e147ab760198293660d69d834eb83f56da1d25c7e5c88f2d867e22f143e5e98e40192368ff4bd34963fb5c79dd498288797ee0c8dc1818418f796249f5470ef762901a7209f171a5919c49aa9d21ca37a4eacabd01e449dfd0b359dd999ab62b515d0a7416047be4cd2062e60639f82da7190acbee28df15d2d63d798a172f3491a81ddb3f6d01675ccf8d06f355b58c041c2c4b5b8a1c60c7b4b1af306670d5db01ab4d0c6aa4da59a39c1fc6f17f950061cc1b7dfa9ca9e91811e11c171937fdd6416077fe9d6b7784babbaffebb15d4835abd1f2c40eea2431e669c27d88ac636fc7a2ace23dab182bbe962d3ed0db9f75f701b9d87c47e111c6673ece30c6eb8db4aba859574224180c73db704c6d055b5abe69e54d5aa2ec941e1593b96aa4b21afe9d6744b631922046872592adb5c6cfb032386c511fbcdfc5800521b62c0cf1bd2df3e92408f3b48569aa7dd5baaf15e6a0471913a6daa5d9d978ced21799c25c8eacc78e3039660ff52cb365e46eadf47a4f2e5fb7e7dad4b93c000e146f73c35d41d75eeea76c271d502b9e7a9c15ec5051452d2e7fe90342424e2bf94f1768f3eb1aea7e2291df8654e05ca73adf0a255ed48b740165283ab07d5621986378832ee7904ccfc2272ed9a601cda94f41f3d1d4c3dd7adcfc28812f31b66e722f2285bd91a5a567482534e3ff4492744bba03d5e48bc3cc11fd7737d2c0df68f84810f4f342066aba35bf15c69f3954091cc361da6b364d64b0507ef926cd4c02f489e5a4ba18e62ed77e7f438f6b1522a6c14db085c66acffdd3ffbdff31623780df54f691ddda0b767fa27edc83cfcfce562b4b8e5ffe1444a72d5c4a9462f6c68ab03d377c196374bba07b2a277b2ebec4b43311f963acc5cb1efa830e2e9529c4e1edf267504765ca246298abfaac49fed263a87a7874560904d7033d0101049e7a2bbc4cdef58f3948198011bb8788b05209d45f16f9f6607e709077338579316eafd62603bedf011eb7a892812423fad85aaf656a0e0f9716a3e154f11964edcd884c1107252320bb68cd04c3c54adc2077ac3a400b981338ff760c82440a9e6f5e7c024721d7e8e8b3733bbfdb7bc6502ceaa06c3fab495d8b2cb48fcedeabd470d782eff073f81372ffb93781b2480f9cc9d80d351c28c78977d73d3186da969ea57e7f49531114fecc51ba1f2f89554e689cec3d461f761cd995b7dee20b3d7c47206591e9e1af59b92b3d57f7f7d076f98e8b05105a2091954506ba4e675e6b77e7d31230cedae38337f8fbc6e29c2dacac55fc9ccc9457bf856cfc8c81c0a05ee868d0e4d1b3605949979a7bcfbb57c5227942f8eeacc781d3264587f47e5b923898945cf410b6e77eebd27975611dbd1f78da489e02cfda58fafb26a3953827783e9313dc2036652d94d3b847b33a3c004891b2ef2b38d13cccba236f63f1e2a83697975e356eaa0f92547a00391270829a905976d6d376b88d71091d487eccbb609deaca619841a70c8112201b7ee05be61ae5caaa004f37040ce1788edf0c5ac3d5440bff5ca18c45b7df2ddfa145aef7ac4d233bd8fe85e2e36ea7204a28ac8e67016a4c26a94fff2f724893d0e27ce4cb3bb408ca064cdb8c6896fd5b18e833f81774f0195487d182d1c60809734334f583dad6e350271a79e88e4f79a7a39c5cc7cdfb5d6f5c00676faf6dac49e034da64293173553abace6e0f9036f0ad7c46c7435151802c2475f881434d74d83099766ccd47e4af65e03c24bc1c13b970be7aad77a25c1fcdfcaf3e390ff3ee735d64f97236fa3b51c18fd3ac98cc45e1caf651b43a2e85d0ad27a8e185df639188e84391e93a0088abc30a2a7e83e3dd5df1290abc71073b489ad4f2d73f1f5b6b19f745530e3dbfac47e2202e21289e5ec4ec7144c892545bdd4b35cdc36d4ba0ff044a865abea85d2d7db23d38afde0ba0d23b5be3ca716f7235f7c2329bc2bbd90ad5c6c6e55be9866d1c7e767922001607fe1a8d7233ab97faeb76f19b9841fc8d3d094ac907eedbea28c9ec73c04c5670a7cbf19a0b0ec4dc6df49354efef02a88dff7d198b72fc2562c5fb7565123ddbb09710035e58ff54adab842a4d7df12fe13b03567742800579499e7ea92097130d434c3a017cb415e5d929173e6955ea5691d4b5b7c73dfe891b844c5eab6303bba3355c3590dec87a075f62f02cf7cd472487e74eaf9f12523025633c4e7fa22801af30c50fbd8952b58b87465e053cad31d1392cc60737a0d26570032670cd565aec5b072604b49937b3527d84947eddcdd578f98aff7d9994c421c05e2e925b4c655b6b706a956a62fd92f3d7f4174e69405fabbf18398952d6c1a5d85484bf1adcd0323467ed672d9a7e19d8acedffb39f7adf5df74a899f851a53fb5bbcd5bedeee4e3b1b6046d099b324b859bc811a65f77b5f545adb20828ef4b2ac2215094288163e9c188082ba6a864b4a6799d46e8bfa1be142c4f977b885f9b05ee9e5ba4c31e34efbead9fb708ff64878cd52fdf5e381aa38c2ec070b53d38992239c6ae3667a7fd1cf900ca5b55bf33ebca6eaa5a8502d6f87566d073aab85c5ecbfd1cb27bb63f6c6ddac03a50b552989669f2b897b7ed8ef5d3e89616e7d4460ec1cc2c3b8a9fc71402559f3e7cc2a421928f59d9c515d9223d8884cea1d4882eb6a214608048d430bae2ce71673e6f2584fc1f5970d0206c9c24302f1b9cfd5c1aac6fefc8822a2472374688c09a2a483763e125c411169aecc60edb407fb09467a03521f7123eace3a681f86691a216389d027c51c1a2595d8681173302e69a4197647667b0961233c95ec714f9b343951a2ae2b65bd29035b21b33714505445ba3422e883b7234c59a8fe21e07dbc16f900b4fb432f51c56a263ac39e814e7aff4b0c7f3d0fb24b000b46b59525df7133c0249dc7fda2d3f88d313fefc27e29d4a6799507dab98d7b3b825c2a546dbd874451f2ffcda71cd51e368ca97aabff505b1dfd02f4714f62f0f0c0571586a6a7c8d676fcd119955804bed1d763d1c0bab78d97b21f5d7afa30a3ebd6c5fe6077e767f05d2bd29d24a22c4b1a34a4f7f625c65bea72712cd4d3f31cf0cffa4a0e0a6da5b41bad4077998fa323cee96be7be02cac8650b5e5902320301ead3e7db2b8c03006d282bd6614aa4747c095811e92f8e16b8ca8e7defb950925c0fba752ccb83ba1674104e51ae1566f19789ceef468dab2b605d05a5c922794bbce9bae351d6ac98d309a5cbe3b8ac53943c63d04a953c21f1fc2605027bdc2b010aad07fb81e5ef654c813e30e28c93c3297332f41132ec897ddd97db17cca799c6771534b34bdfed3337373fec5e96cc0ea54c2e3e99e35dfa999f9bd7a3733ecf5f6e5f663c5a2b1400d6efa05d3c5b47f6d36c56bbd1d47b3286f9e938f1f2079d0042027c3337dbe4705d01c1ef044c4610da4f326dd43940b4dcf25f92c83b6da57d7e05b1f3ac8f528f6c698300323ae5d5fd9ec829ea36dbcba2fab4acdd22b249ad1e5eb22c4a7e8c153768467a533f3d1157ece93a7dd8a754526c944c3fbacd259406984c50be6b024751ad750b4b5984023c2911f88b7564a523797bdb1455e5271638c894981fd1a0be14414ebffd9a11dd79083cfe3c06dc8dfa220e84aa2d663f8974e6e3ad6161290a4db234f2d49204ed32d738193a3cb8280f6fe66db5b7a9d731862d7af581af6c733a4023c2c518ad2eef9bc5e06a8400e3f20aa71902a72c21b070ee7413e9c522cab30b802b30349a97dce68981a23bdc0e157c4f877ac0acf669a2be604578bc741b93737bf592e896e5cfaacce76bf5a393f4f6b31c10eb06317902772019b0030da05b7fc87687c04dde9d39c3d029572f0ef8c777057d426258ab0744665a962241a5428fc5dbff3a4c48141b51baf84032b9e1b36f63221bbe88de8f663cb49479dbcc95520238e34f1ef877ee5af78068019685ea59f46247cc9020d0eec0e8590ff1e001cdf18560363af74d714ec55462ddad7dab9798bb3e02e769fe546619b8a85b86580be7d3fb555f5efad60ccf5e8e7ebbbc12b4f7a276bc09fe149396a725da9bc4358bfcec96c441b2c6d1de897fb2c8bbe1ec91ea6e9c2ea466af145ac2c10da3ab8b84b48a6c242d1483a2ca6994b1d6340f3ad9462fdd48a11018950896ba1fb3bdd60bc9c0fcddd3d7cfdafa72d397839c950cf38a9c84d1468a76cedff9a44d31d70e20904bccbee6c40391462c6ced798bf6b3c18e84e087690ddc272e92e10259a68a1cb7e148e29374898f27ca53383f0db0a2e784a29a3f683ad08539945e8551b0eb0c37a99e807f3b1bdd73f6ed6fe7e43387179498bce95261e681bde8554d73b129d67e137aed511c2d0d189932b534ee547069162eba3f1fa7a46bd77009ab1592e9b761bb0f763b3e4ba4490465fa9680d70002572525624fc4d3a8e1707335987a5aa80a527730e5a34585b1d6de135024838f8224c584dfd55957f1a2260344aff489a1c882028676b762748dab969d48247872292e7f34d40805e7323af0df97afcb94ff86654e44e91a8d8457af25da47b95dc1e7532a29ed31c7e97fa55511905ec94d1ede047b1e2184860a90b53ff4fffb3e919220c864e8a00fd1037b5144c56603586cec5eca74de8ee95d39bf6e9ee1f7c9e13fe57dff29585fcd93d6344ace7e934b72bcb958c9eeb5b41c11b8ab412fdf3af6f0a8b533af298fd7178a635d71258d9268146ec46ef7554798b528b7cda4c54a3654fec86cf772dee3527c293fae5ec644ed2d18e0e7c6f5aeff881343b870540fd060c4983da4f2e1821aeb53c122dfa316de11e059f936a67f9308947c4729d6f5db53dffc60469629da91312ca6aa03519bc42c687c38662978fb160c1b5775ed63c6da4b3a4dd9d9da21207f697775d5a9aa3af1a2bdb905db1d2f43b560a8a1db0a438db9257e5f9adfcf3385bdceef13985d98738abe9a5a6478283d100d320457c5b056a7c50ab8f0ae5d31d0af1ae2e60a6ba65b26276d39f2e135948d4e6e045a37a9584d0ab8d8b159a038b8c0c09b3ca3b4f910c6fd25ba580c6bd0168819e4dc27cb11c94d97b439b360d151b6ea406caf7921f289e33d8c90e4a4fcc38b2860f764d98f8bd0a35584ee140bb56c5edc0b868caed7d4d2d606c09e4814091160f45db0240ba2d9394d2831612b9bb7174cdd818c3c103daf2872502f508c1b5647d89fcaed445278562d3e4b9d47b81a8a0fa7ed575ac6cd2eaac496311f9d2a6a4ad33e82ff6702ed1efe99541111de27824f7fb5844d9cce0808dc4bbbf9158a0f3ad25478d517eccda3c3fe8692269f463ba8a5612837557c0b5980f42a82c6dc1cd72886bcc65ba362ad65f567e430fc7371ecde451d0f7fd1ce77f0aee06cb5140d31b1d45c71605ea4ec33aea36be8961eb94a80cf7c0e21a1f8aecb606e8ac29bba957fd9e360239e134ca5864ae44c580c6ccbbc916012c446027b984e5b56a96b920f9f07dccf9e0666935012eb8518cbaaf0b52c8739f3a9d24a5b3163f873add6e3eeb62f71a704e8b72f53f59ea099c6cd79e86227f04498a5dc8e4d54e5f0e36a91b878fe29b76a86d168a6cdfbf74791ebc34cd7702406a29ce77a47e9bc83c76696b31f533acd9f4ffbd8185b85af1e2417b82252166b8c6b08c76d1e15fc44efc98e4b9683535b908615c6208206efea9ed99944134943c132f613a121205f24c56b5a191c5686e28979649e08ea9565e245a01e38b0e48c569b433124d2da51b777890dc8e77e475bb38ea2efbf54d469b9482c8cddd413f38884a652c230cb9d9710f7e64d0fd98be1df3cde5d3d86ff1f94c1a441fdaa73843d7802a9929b966454204fe2896cd9c3abdbacc33c32d88f0030b512136ee86ec2a11ea8bfca9a89c8130f9dc56df01c5226e808747fa81f464b6ac42ff21b0a3a97656cafe09497c8112dc5702db3944b2088a26648e1c897a9d76e11718eed65ca93db07910a956dda4a106347cd6489552ac65fd2806206852ed7a232d4c3921610571f2842a38b1f16baa13f0652406594055dd276012f1fda0a810e27ffae95c938e628056b667540f5af09d2da6e97a4ec329d2bf374e84409cd74b88d5a7563feb10cad174935d07fd8f8e53cc558ba008a767bdad842b017f9afdd44f2b40f1b9f214c8c3fec51226a3d6cccdd6b3c2b0859d3c7376f28c595937be712087ed4a6d315d44eebb7763061cbc5111fea7d37fa7f86ba1a882320a6ab2c73c71bfcedc30fb013e29d828464219fd23d1797b58d0aad2d734d701f6b2ce4bf9374631544fb4f2734941c6989539b855bbbbde308ad3484248846d46773b29f6995345d42606c9ca5c068db45e65084017a8ca55d29c838a655e2d56a2f0bda9695989021592124a083bb94b3cb8016db3dd6b5d87e4567ed8e9b3eeb6e386f67e5852c13ebef54aedfe59942abe0b72b55463608a0981a8897ab1061f653ab51bed67aa2bfd04924d9edb76a602460f46f438a9f1bab69234615dc27edd3e1ac9b156a0d6188062f6b0d501d47b6fbe636ccd69e84c805586bf4025e7933d2ccd323bcd1b7eaafc0adda2da1758d0b49374ef2c5690e3c314bbb0fe206f7342395db6f98f8911d910e4fd8b381a144e7fa9fd00b8dbf3311b0addde406442cc4a843a5db97de4956202870d9ba4af4f7439b8bb06a078f7f6f83c4fccd3b75934e7c8112818c1e102b51df52796c0c6eabc34d1e7c1b027471abe83cd6f2330d4fc41fdd71a26a0ba4f2e063f2fa45e63c1a386771c4afd783efbe60c9d55b6d6080e8a8d2599d6d730ad10fe260aa6ab040b70e24f869dbe877623ef651a2fdc8004c08379f0927904225b1646d7efe932a4305f101a0f9ce9148ee31537be5d94d658a94f4b7caeac8fdcb87a7f15500f019327589d000c58605337e7b17d5e637a009e24fe6f7bbb3fbf20ac74466fd35e03470f2885d347c87ee7e69c300da6f5d8559284d223c2f72ed319348013714a56ef9faf88863915e68a9d0422227e612b763be77f733b6fdb0d5004deb1e41e02efe6175d7b21f63745b0392cae1d4f768a9bd925102b7dec4a9941f8bb6ef4215022913832cea44bd03e3e63c009fb93f5b7339d7f86af8004f457a40d4e75ac024550bfbb68e48b16d62013a37373a96dfd22512075536117db00129e71597203c92318b281c40446ef26eea29caca2a48d3edc8d5226027858f8c703946d6a640f42c5b911f24bde894401e29bb9d0977028aa903ac3487c292151e7fb2d6472722a3ccf43aa50693c6e31be06117ef0f49d01b9fecaa21caa0f6acfc4af231b72f10d419ff8e2e3ad1fde8de6e96e821015d3b3df909ffac63ffa3da575275275b4b6e77475a1a70e6da9d5d0e7a91b693ee77cb5733a443f46e8d55a9e89c2e5854a656b57fca713d44cc1740c5591abd2d8ac1a03e1460ab8669d0b03f5efcad735540ac9f69940c90feb21317dec8b586a524f5f97b7bc849563682ffa9c34b616ae7a98a4f383936f41c78ee8eec85103d044364174945b3de30d93879a974d1ce3aeef33b3ba3c034461b05376c67a78bbc082f2e45284e04ef96ba17aad0643ebd09514c3ac34c7dd2d98ffe4e0440abedeb13d3d67b967230af6a1b018ddd8b9e1ceeaca79ec170fc42c0db2d9c482ae1dfe0045c23e5106de29187c5aa07b0f51d6792831b6a65301855903272f8bdbbb8f1308c88314aba8d4513ef86b386cc87720d81f103ab675db3084d85adbf0b93eee82093b75ae29e13c306a26df9aea0cb0f469c6102bf37412ea35504a47e2f1669f530956557c667919800e033629393ec53d77ff73041c4303f9c9b9057ebb618917933fc5d14129723a0a984631ab60ab317ca06b945cca475689dd0c8392a3434002e444c3f25b55f319babb76e9e2ad2fa6c11f974b5b0566e8920d67f3ac2e2847e85a87220f14c5aae5c254e1e8c24389db20a9b5aa8adad42984c5113e00dfc6090f686456cbfc01f3c557a503bbdf631e0e7aa673d9bbcf6d1bdff108dccc32f1aeb5b9a8c71fb6e1d3b33807b372a3aa3b124202a04d729da3722a068205c48eadf062b338a627b86e8a015406910ad3163f82c251802d3b108021db34353dbf3b08e2a3726e3d6b28be89ad40282e48151cca18f566a4d81a76e488298068a7e2ce8efd2bf9b07408f2528410a689a79ea8d4e01e5658b7b4662d259418489d48ed013fe8a8b98434b66fcd91689e42407b81bc8bf794c6ef9320cc4fcb740a1fbd533f09b6f9d1e8435d2cb1e83a25e7e3a2f8e05903609c17fa54251b7402d9ad877747fc7fa818586adc95a0e0440b64da449999ce33c6e3b7178963f5bcb30e4d4018d9d268ff23ad2fe32f660dadbd7110e41a65fd98c2ee1b99e95ac6b74815e13ab052cb734667c6ed095b8d24ca59a3a1f0efa5ec858253bc014080a98b64a97e461fc69e46ac4dcf3a1f4403032a502ac13bfcc90ba82d9a024c389bb2232d806b1bf97892c1f3eee110c7e7b1c45e48f10f4b2c1815b10172d12b9eb7550b91821ac96077d41eebdfeab54c91f8826929feeea7597d1962828be2dba392d053853ab8c1425412c05bdbd6d74a47c49c293d74148e92939c50e1b57b032e7cfc7640055a5025bf98e414e03102fbaa9523e9793e1945fe9fa5d2a73715304ee38ce84df6f85deb9dd0e2eddee74252e972a6ac17d2b953be44cc5806a908a0fccaf5b2748740f15e958d16b8e576613b5e85c51bdd71de7746084c63c91447e597c0fd7edf883046a19268f1f7e07caf88e4fdc2bd9f107ed8de32435b589f85d542b830c53a1b5336d2988762c3ebc376d77fb5f181878399156affc0958ba36ff24d30f44950633976823ab19855788a880d16c34ef125190d157fd7604fc53ef15ff43f1e04d5064d052a912560605aa9637dff6da3bc7f1dda8aa49bf5b5db650d065ae0be930a8277e63d87481fecb003a595b40268a576c66f83e9b2d0a0c3a1a065ed26d96d112aaa11c69b68aa53f0bb38bf740f48ba95173cee13566b45be00fc28dd885df0be0008fee7edd3914bf63cd9f33fb765bc580cc585f4248556746f48d51d0ad68acc37d4a4a3cb6f4692de99dcad42f3d967dba15df382e7a66bc2e87ea80f921e9f1658602456598a487226afbe59cefe13d6fae44ba3e991d07c2b542e9b1698934a447e147b45950d173d2799413d425a480e658c17d125504c57a2e8e059a444798fbf680b505df0bd6254d4b2763de0a5a566be3459f4afe39b2c971bacf0c618e17dcc8c5d8b90f9a96eb3b5313a9f5b3e057fe9d66f376de274a25a34416cf659ce6afef6f3ae8708c644c36ad9b8e3566f880482fa49afbbaa953029b4196a5cd33e288406106b5bc5671c2e801c36216fc07e136006fc83b985f18dd56a6e12f66ee013e19afefc37b85b07df8d9e750c8c5234399674e18eda50ad3880eabd8b41a6f46f6eab4b320014fce73c5eb7815c3a4597052676cba36fbe409f0d8ef9d56457fe51fd7f0ac165c7347ca1e492ab1e030c0e43d139f54893bbbf439e3cb037fd85afc2ac9a263b97db4d0960b14cc73527f5c2b710b1a3b0612c18bd00023b6b52a72a4eb867fb1bed2bdbfcfbb410c0638989cc85f3ac75bb5105699bf8043815407e9450bf372ae71ff332db57773e185ef469a65d256535e37b6aeb1d2ac17504f5603430c89e4a4ed19e6772f479845f2fb1d721172378a971d857171e11690d3838a41080a36955cf621ee1487e115f27ded075e41828b47bd856023fc7de48642072356ab7ece1dfa84419150aee1778dd536ff950d720ee283edde4507d1320670a63d6f95c2bbd61e8bce9bff3dd7dc2c7ba91dff304be9bc7eebd8b545a56bec24426c7e13b973aa8d96c789781e86706dec89879bbab6d13b537394e7dad81dbf6748081958c8b3822fbf0ec1ec2add4f87e9b9f74d981dd48985a8cff63f7ec85e8aab8e37695015884659c9f58c93797dd67a1b620ba1212b237877bee169d8bf8cd2560df6a689868bb43ca02c358c646534047c482b94dc892f3fd34a67e409bf5d2cb76ce43baa0ec058e13ee5f37ab9e354b1a5320a72951a9d6b9dc3a2fc100026d62ddef29566ac333635f3d5e270eec227bc4e2eb88a23412749f28a8bc4531ea161c63f1b5cb7bf0db32cb2ff85c53041140b6d1e61bfa6283017a9824ec7a1de62315a602bf6e029ce72832e33b69452470d71051fa653655e821489438db4a96a3c9d70f159b081552016a190d6eb3bb38676b44856aa50c1feca3d266414d35effbde51621467be9b7053e024041776c6fc77ba29c5d6573792a5dfa37832b5ba08517de089fc0618638e094ebf8feef8696666535f547c93afc1ceab4018e81dd76a7e331fa9afce8cd2aab8f7e0a17908967ce384a3483a9798c8ef1ba46ec9e554202abe3db2411bfc215dbc4bc5c9d620e39c1c922620d961316d35bccdc523aaaf22d25cf9e4e46d642b1b3960d628e6812dda8714fffe0f09e80f5d133f59747a099b18de5af0567f63e5154ed94f2927741be57ebb7ee01f008e070c82628ffc3ba279f049cf5127e685c484f110c3f511e0ccdca7b64dbf32cc6fee47b4648133b456002dd753577a1f70bcb835f8ca54a156b2876b6c6b854112faf680860d310163f0962c23d08044a9176ac8932e567e279de11f84c9043049a550a4ef5f98e61e5a26617426084a8330319cab6e94fb79ded02b2d4a7fcbf35f2ee211923e6243ec45cd38ffd77232a7f0223cc2b6936ad85ec2cf35b1fcf6fb359a1b32d045e04c52a2c5e975d25eb4241e81947988c0dd8840dcb3a2b510439ad9ce59f4b5028099ca72197c69ce93fc92f23d7d4a6036a281aeb30ce7f182ad38afb28a1ba357ae3e3f3e1f9be488c79c9f6e52085a3c0429df4e6c1bafd95602367635282130b8496fb0810582cca5ce137855452cd283ae863ef4ba072195eb3bf3f4eb9731040af177518d0aeaa84541479862f1c671a0d5662bd20d29b344385be5da1f7a5cbad1cfbef4d96a96687271c9da089a11066fadb0ac9bed23da9c1076d17542e1ddd3d1ba4ad17ec84214419480deaa0cc2a246d720a360492328d3d4799d77dd068e2369dca41b96db44f63595dcfb2d71dc33317dadba615cff9e5362ee6bba510ca0bb097679e0e81cfe33507903723811134159465993d31581845dc781771f272027d7c1c0b5dd0e0184d3da7c2c465cb0f499a53f167e4cc22ee5532243ca367bba9ff07f38d16918a1e1bb21d2bd29a1b0d214117010de63abbb808e87f3d3f5d0bd5ea45815ed41f417e98eaf92de37ee124d18afd32ad8532f4ec890b6e860edd190e27de64e7cc14d42b31d3cc49454bbb77c5876c7516919b3640ade0dd061a9882079b13d58a66ca1622dc8b56417ee7d3c54b03d3c3b545d0cd850aa60cb437df991fef648825016fb69f6da4ec9cdc8bf7670839a52d52768bed6d06b1351b1ad3bf78354229250332b846c398ca6ab8c3ca7c761afee36e0366fec982ef6edc70811f36824116e360cff58ae7207ad9db53acd5187e24254f6a85cd7d8ab5e37ee4a02fc9b4c373c5af711d9a61a6df6cce593c4f3d4445a76c0e561cd2c733f351e33c08aadcae4a439d82dbe21c6ea16a81e6cf2af72d9d2297912f4579d94eb3022682e9c9ea3f2b6dcffbdfddff2ab771f540f53124e3ee3605fd0fe347019e804082946c163bd020030583bbf7b6169693f253b4c168b858bcfb7fe3658c1d513f0052f8ee9894ffb906766595691069c4bf2e70c466604d314d911d65d3d15f12be4711b070321f1f0b3022efc32266bcd6cefc2b3117fcbd914538fe4745477abcd5501479c27fde8cfa04ca14eafe701cb1c0e098af25059fd8093a101c4489b7f39169b55f1e2f00c4e9f01a6338786590f3245b5b8ab1d80419f0b73ba25fe83daf6f3a9bd0d1a0df0ee3728c355a88e10523b01c738d1c761eef377753ca9e38ae20d6c7a2bbd8f247dcc167f423b0c70febb1195ebddba9ec2ebfdd7902cc26bff141e294cc7918b1363c778b9b47bf0214f0d5972db0ae0629da7c7d2b01c96e25f68385e34ebba998477aba03fab4afa3a828129b217a7e248610b2a67b3de6cdabf7ed6e3c1a578396539160efea18abfd30314b3110693d8cbce1d36d8a9d3b7767a8741c8403d2734d5e92620607fa538176d0e559b1b7c463e3f8b2778a707c167d030206f59652bfacc5f9d013cae9400ba47c519c4601f4dbebf271e6de54934ab99a23afd73b728e40a1653261dc47327c82addd2bea07ecce2b027625b9adaaeecfd8fee6ccd3c8bad45d95c941e9784d7aee23812cc629f4fceea25b85cdcf6f543b8587766c703277319b1b040f4d859cdb06470373cc5f4222489d40efd25a5f8e2976c5a486269414e62e23c8ed415b1084e34bbfd2a8f5c4ed585391c49df422ac22c2d6682b02bbea949f8a0cea0b40410e3699d6431e20d0300a6a0c429fd9fa60c99761ab12b1bec0cd046950566ffa134af4ec0ba46eeb6ce292d9bcab1ad2ce0db9b15044d6cc148ac00a51c6b44baab1ff355b8219941950b9eb964f8c458377114c11a861fb68ac834fbe1565088b95fe7a16f04346c63e37f6c031bf68a09261cc765bb2d4a87be5ce920a211d03cc8f276bfe165207fd33d19e3985b420f35f30f341ba46365c4a0fe7942b2bd331559492c9e4a4785f90c4c434c87886f89193cd5947f5bd1bd17b391930ce33019fcc7c7f09b2bd0780e9cebf255935ec3b419ebe809ce6a0298c9c9cc9329c817a18090dae6a14b09bc42665258164b4f9f87d6fa9ec63fceb8d0f081b6f718ce2256edc1acd8d6feb35966864420dff0d1ac300967b3fe68a260d40ada84d5218eeb0e0de093f4e499fdbd37fc9917c4539bf91266c945ede507792ca9e6406f741af05dd5a717380ba434124ec3fe9cdf8d49a67d89c2b982df8daef30ab67816700fae6246b13ac0b7544b11a0a5515d5e4c67e70dc169cff58e254b6f24cc6d74a3c34a143478f06687b8cf510779526379493d160f62d3b8520dcbbe0c438bbe04767f3764588b24c0957cb5df8a4ddfbdeb73fb382130e5e3ea446e19d2f4e3060f28db648027ca32b04816a4996803921ffda584c44c8d12e0a7d3b6c6b820b7a98a1969ed2ff78b67f5e23a466f2a3849e2729d359ff6130d69adbdaaae10e82a263253843883a30ab86a170118ef1b84fa1b7a5ced38ee10b141f6aff7174fc8ef60a504231330cf80da17b6c105a39c7ec38882b58941236a278b63cfad77ac1c25e4c817b1649f6b6811db69788769ac6213004b27c41fe7c09e231988d7435c398f6de5909120f8c163b998dae7a2d114d6de2114084ee104316095b7bba27d7329ec135fa22550619380e3f6a10b955b2466c774a449f3111081845ea3aa5fbbb6af84586cbe47ce111808ec809934db196298337b5ef085b9b7e01ca176dc6a58a3719eb0e84268e248d446cd79a58a077279c9445aecfb9bc3c09908aeeded6693fdfa594e734c4d69de65d4dd5f57c7e7976cb751660cdb5dfb8197ad1ed4fa3915ee2f86c946374d989141a036e02f9cba1a1d68dc91283a4912b9690793abd561007888019491145bdd00b01babebee90380ec1ec25e9d2e6087ceb80ba43cd4163bd990870c59113390e0b7ca4fc1d7fa6b371cd4386169ccd0ba86106c855ce9d912cdbe704dac346707fc7af58500e3e7b56d23c7fdce77d7ca77cc52f15d8a276e6eaf23bd4d15f95feb0e2bc2772c7fdad4bb46fde56cf92acd5e35ece84296e80c3b3cc456174fa5cc828e935568810d5d47dd2dea0eea2a14602a0217bc6cb0f9ff9437757cf3cb95811976292c2d21c3b190612a329e6103b3a33647c1f9fab28f5de82ed40bef9f58c009380d54109e4c8515a1af5e2ce3d0db52f0e60716f93a54283a1ff5d86968db9bc4398c76976878512c61627c4f8fc81b050b2d3f972d6492759dc3a413919061f82bf5ec3a0a98ee90584fffb2a13216eb50c193e64bf96fc48aa275638104060d390b3149b0f0660e0f22cfd80e27a77cbedf7754bc6eecbbb380b86993f4e225be799b1853c1a8b1e5a5a5635a3e15d179e81a3ce4d3a3e654d4538318cc17c2799db53e59525a6f6a3c33d5d2188a9bda4f0a7749e1e5afd633d52f8542213531c80495f902ab10613a629aedc4581fdd28fba7caf6368dd9f4f580ff51742f8ea2c678803f35894c2e3d85e6c86eea54394f8bcc47540120aada812014bb59fe54e764e940c51c68d104a1abc42fd6370d67d05edf28881f034d85511266c7b83e953fe66f00e2a0ba7699581b82b6e06a034ad6bff30c4f2f919c407112e3c696fb0a2a8e4c31a4c92bf244e9f1246087ee1b30d45e791611184aa460b704ad34bafc601055b84708e3cf6b0345d416a03345910f9d35db6e7edc962f700318305ef6a87c42b22e8d9f04f0ac7aafdc26bdf41bb5c3a2fbb9a14b1bd1ed39eed386df3d3d51a71d5a746c7bf0b6071f5f65a02d43389fbc87ebe29f0e46481ec04211aa29babeab46f1382c4a2a12b5448517d65ff3a8d08ba6921bd0156905e315ffe34783b6d2d7647c7063e94b1252ca3bf4faa0de21651678136ef6d6b66dbd413402c802d26a390fae30891668c2faa8a4f9c952ecc9a80fd6b86ff9943b249c6caa4a8ac8ee8d122cd56513c0df875f95f7848b70c0ca3d4b6142dd897141811e33d7b754562989fd9dd6877e247449215094fced069d273e115104700ec6e4b3a927938483b121a7907b968ef943e1b898f9fc6ae1c51300e8444e44135d77c0f58a86290ce4c1c56c6990e69e8f7645d3a846c0abdf268783a7f2574e4c277af41cf3e369ce1055cfaca7835a60403fd5f14b93b381b1d1469d4527cd7992d33fd6e56107bef0126cf0ac71c8f54c3d687093357462ece96a68c00de4c87b70f093dbdfa628ffbf7a0dcdb25e6e0d54322c914950ab0a1557a7705e143d32dfee5e759ea8bedf2bbf5ca1ddc04753168f955374fc0da6569b5facab63c3a7e6ac981faa1a3cffe3979897c41fee1a0ddfb4d4f63bf48ee64e913955a78234e09fb7c107ae9de0bc41c8080aa374a69eca600086f5a2568a85415bc739458a1f7b35709ae9862083afd0d0c647d4a0848c7fcf2ecfbb1658576b849bca400ccde86ee8bd017b6cb6b133f1468dfb90b4efcfa4732d8b849daf73ae2bdf35a4725fef306235b1d89e00358f4cdae73d0e6a70de8181a8f8d0b1551b55f3ca8e13eb74414704df3316f17c424edbe374c865d6a773c4ae3d30e97fa26edd45d29ff5a5be8ec64b8fe856931ae254d04c96ce39f4595b5a3d84fc2446757a203a48a90208e2b56712be0ad37f548367c18a5ce1e1037dfbe9bfb63abf0dd89b133fc16072e51150d1520ac4206b70ffa764ac040e896aa8491643947d00966394d3acef8ac7da2b8cb47b5443bf215d5dfae45b82ef9c4333b93b9bd55608fdd8f979aed4ab5d1380a15ca42e1ac21ea2880e3d8383dda12df0ab7798ef89c7b0e63b2ae885b3c341b102e30d2688b1c44c520dc0bfcc132e25b062df9c7a4f728df5460cff3a3f1e5a641a596a48d83e878a67093c3a033e9881ec158cfd320bc3a5175c5ad0c8ffce6e4784fe7ee17ba44e193bb38c4d2e633b81e3ebaa5f3b93d3aeb5d93da3e41e425e12dcb71f4dfea4191ff7dc98ca96c001ad0943ab91d9985ce241a30d41298b00b753059a26f70ceb026ab308b51bb5f4c5deffbb98233914579d56defa02b8015efe9f64f8ddd11955bb0418f871e783d3aa032cd88433c8cd1eae405581b29567d79d3bbd2368025884b9bacea5143fc2e850cedf61ec39065635382a5c4b91907d75d9abf2b40cdf30646b0ca8a36b9b08434be11cc44b995d8c6812a655d0bc51875d3a09bf0717d2c3feb1c5bdfd3d459ebe0fa1fca719188824f1b972f17eb664f4853e15ac1768415939a3feb034317596a634076f97f6cc846233be95aa32fe468608de050701aa7cece142e64c04c2d32dd4cf62d66503267a18e9ebf81a0b91cfd2421fdae10063ed8ad34a464319e44026cf99f2d07be35b6ab376278d4411c90e7356f52451aabf9537595b626ff4bcff409ec5f354ee9f15df00dcfbfcc9356082a479ffaa5ae17cfde3caa9a09090e89a45a7846aee23e416aa52c5b7a436af34c6dff1cf6689ee8a47c33784569e6a104b652acd3afb17ad1dadd345bc72532d81674b9650d423164ce79480de80608c741a32fa314afa03de072ed10b54d3835e8a2cdfa0471c6a3672353917edb2a8db53c8461f2f8015d06fb902afcef6bee2af1104d26e8bcb175d944d124fa495e6c193d05429c52d45848413bc7c2322733af4ea70c31fe6ca79e26af38f94de7c44fcf132ed58c302fb92050a0062aea030ccda9f7333d36caaff5f1fec85b1c277bb9ea79c57b31057b52803f5439dca9786802d782427f13df38689c81a1cacf8d9f53d673961be85db5d98f19595036e77980719944d634173bb6800f918cc77b859551a68f6d4134bf18adbd71f6c2318d6f7667136f429f84540cb55d939960cc6ba7295c6d29f61e0ce47d4fe2bb3df8c36c86ab9530cc49310d8cbe685addcaab8c72211f45d3e9e6d91f329182f7db2283a911b080b6e84afa959ecf834728bf08e9f0342145f9e572e50cf547906db20fe1a7bf1aac37a976cdd70486f011d6bc9e3c9e31ce43f89d0e12f1edd49283509f29cdde165d99b861bafff552f9c9844fe4139dec2cb29972b63f0f7402080135bd8522740aa46449473a31e803aee8b1fbe1290e02171c39bcbcae25c91946adcc50db97d3306be3d48273e75d7483c22c14f93fb9ccd0a47b29db24c9c7b76f36acdc0ea6636b5737fa974c506514a492118af38bfc1392a933176154d6b578767959c820ca105d87e798e4c716c8965127b898a95e43dfe253c754164cee041d0b760911c34b48d63a7ee30a0803b399c40a8bf98c01912e717bdc23bc33bd89235f818fda1aca88cf33e361a34bed4b6c0c6b1ea8f49d0111d0649c1e9ebe645b8f24c18e9a50ba81facdd51a6f4e88e803516fc71dabbef69172f6b250a4d5e69c9a7139b97290877a1de23eef6f0ff1fe583e203a3a630325c57c4552a35f1a1b20af3924dbffb6c520572fba93642420dbc68e661a9da1c6773949b8e1110a3ffa06420cacce045295075bdda088715ca49a8909142c420b931bb3128b918f7a9e7b751e27eddbd8d3dc9ab2a9cef3d47adcfdf5f79a22c35a78734fc457181f5d677c1c2c6d88642838b81fef8bba32ff895487952a7e3444ed509f7dff8e51b2049c7311ca9949571ea8d21ef276c3aaaac6e52adb20ebac169baa3bae53c2bd2510b94274d52789d0a2d67c79da3247f8b80f512c794a6a6df02a154c911dd8c915f0906cb445a758eb40919c963dee4e9699f4edf6e518614d8f3a8f9b90e954692189966581b7add845ab621c45f67d8d371c30a021361144884410b0dccce8579c416c6308b0d9b0e697f75cfd70a4a3a2c6734653e66e6f08334f6a7a35d7f1a32a2fb8270d70ae91157a23ab6fc4d6592dac8a5451da59010c3127f5653949ed3bff268fd2e50a55348f4576846d8f559a298efff82e630a899d6828305749e34ef451311c82773b1667911717bbf8b68229b92ef105c1f3b3809cacb8b6f2735071ac0a790ba1f742950100e55c839fbe2fa879354e8f1aaee5573ca68ffa598b87e35e9e9147ef6aa0595e65e7c876d18b690322cd07e551ece33bb7e0c8b82e16d2313fe709c5e296bc4d197ba5dee0ef8361f1bec4981c2830224d2ca74fe1392fc162b5b0db3b99082f0487e2ceeee60d0afebcaffb2593aba42630a2dd33c44aaea3d06593711bae905cec8bcdc8d06a3ecaceb51d891daea0e77e817dff6602fbc0354b129a095a19aa700d90e39d06d17da5ce1c94882ae4923b33e40b0290f14ccf17ad4225979d30b378f914f0cf9816fd60eb939d02ecdc04af8351a6649aae0f9258f399d009556cae7cbb6c9672ceb7139604d37de08abbb80b229e8b2c777f9a75f1e418a6caf436bb524be44652e74f3458ac8aa1a2231aa21d5eb1f70b6e0a9c525d39abee76db24c2d3b179e5bd660655b480f7a6407add38564075a95f965ed858b593ae309e377aa04bc38037e02eb3f0ed34bf1f58f2517b906f27417a27b99418ee606e5e58217e245ecc65f96649a8115e12dcdf75c44eba7a23265c6351701914a35df7a74107551952ad9be6576a4fbb24b42abfaa9fabcbc860bf65defd5d1a70d00766d30e4ee725a8c950b965419f60d087873afa93f722b8c68027098d7dbff8d2e85212bd6d3d21bd6fb1e762015ff06fc0ffe516697f939411b26b5c973f22ffad4506f4ecb97c99831ca4e917ec5ed65bfa13d9da4a23a7643ef18f1a7c15cacb4f48b4a6ac156eb7000d18fffbb41cfab1d7c907a63f7237683944072d16ed9dc6caa6473c42061c141d3bbcf3f8950f90dc215a41d3999d511be4d6f61f437990df365fcac1d1cf8e416a19a3f59541600b3bd974b434a587729646964ece7bf2c6b2f6b40a47340ac7d70c51b040262960a05da4ab073109082b0b14c29ce6d36a40652e1ac42525903b745f49a2a03c497bf0fc513627900ae8f759101a7533824b552712798722fdd239b57b9aa30a86728e91aeed4299d71bc8cc50f304cde969310b0f3e11e02837899af7b11aa771f914aad87079de4f0bf523ab9a8ea847d72231684b6d4b0e8f5c2a0de2f8aeb30cf0eff24d0995528505b6ab2b48b5abecdf79bc51a6bf7979dc71f5c70eb9ea4d6896b483e7d5bd5e2edd7a1409851582434602f8794be470cfb67c54bb6b77b855c2d4c0b16387f81aa99c9f90177a210016f7fea66531089122a287da7806e9ba7289d538cd6b2e4a5ee8abfb893573cba7fe4d8b275cde7b2757dc654726571d4838ea02b888760ed7229fa5ac1486d558c76f3705187a7a081f40b13e6afeb26feae105b2e2c8957cc391d78b56a08204fa491d6c132b96cf74bf8bc685559c3401d6543d1b0852affa4521086877e0545fcf6647849e1748e8f8846352bece0dc7a47e2abf65a807ecad9d7b26e2b4e3f8e75067faec253bb3fa0420ab32f506d1afdfde9a7f65efcaeb20e69ec6dc0141505f482366f1e6dee22d3a983d79de452e792414caede2c320d1ab4a6e691befda492c0693d1866e0741480a838f95faaa176006c17599b127bcddb74c3846bad5ab543e67cc8823ad383c338936a65100c4eec4e683ccadf2cea5fa08b81f0aee916bed6b6510995cddc19f3faae0fa4bf407078fceaf12da020257733e60d4a9bb8d96d18d6e2c2cc9bceb77a8f1fcdc81b48db375bee88fe07446aa20c9ecc95dc86d82bb6e91efe775603aa9925c2f183a36ed5918301568791f69597c6310331bfed7dc167991c9a6497320df7d69c4d9f834fc923be312b61902824b30e50e18561a5470c048feacacdfbad63360d7917b661f31618d685b43805cf9c03bf81615fa3beb66c8b3d9ba80c0e913a373cd5ac95459ceea00a2403c68c0d6038b51198bca6033e29fcb7e0ca490a659e4614af3d2eda4c8f3588d6a56cac5ab51e496c7e9f8e6441010d7f7e70cf7bd6c8b36b64b902fad56b55a38e3cefc645b0d44c463647cd5092bd1cfab083447cdf2527ee8a1da297132731e2d02e1c301a00d54cfdb74af2ea5ca2c81729638fd1419e30d0fa02801fb7306b0f2d47d843071342102333ceea74484c2619290eae4d845d42a0f11d59d3e30477560b452439f2a395cf7bbf9f7342a1ea3dbf96a864fd5362ffae5f5df6f8125d0e16e8c361e18133068e6c1c06e2234aee3c2a4dfca08cf5857c6a0ea2656cf60e8bab34b34e658216811e8ba4620c19828e774693516053f0fe2a70f87a9ff7c7c16c1fce2062421da540f2f043cfae53232d0e35db13f88c89b5fc727eee9d1359833b41af24456e0e6c51d1eed150f5917be415f6ba3aae2faeb77c59ac0f48c70fdf6752cdd7747be4fce3b382866b41d5abad0c8748ad7ba8ac1819c3603180983b95cd9e4fd1aa317a7ec338856d2d4cce94efb013b801f9f04b0a3d80926104dbf196ab7555fbf71adb15418ca68eb1e46107bcf617e72ccb41bc1cb96ed0fa1b81e36141f271b3e9afd57f13631edd97a695bddba0f9a906c7c9a260f442b56dd83916cbd5eaed8f13875a1682012730bcb0cf0c1e1d057718a66e8c26457451dbcfabf44d9626a98abd0de1c9e8f5f3379f7fe60f9e89c3ba2498de86c26c921fad54a706aead79dff561c1b4e79e4b3563bb322af362e707c520cea89ffc249ee6e93ecab876be9ab10b0d2f4d9c153b04aa117dba9a98d22559b1bd34e5015295ef38fa6c2e382202e4e6c07b13c6eb8a1db84f551761205eca3613c54135e0f459c6a20ee4235400146057e3a6135908bfa7ec8a39540b32aee2fd2ec6106661f3f83cbeae576edff6b72925f271bb4e2f02968ccae438f66aeddeb25c06e2b003dfff4a1866a0376a1dfb1fcb24bfa90b56079327966d015f6a9fea4390b4be564e2e2511c4ff3054c1a368eebfbf1e255d912502effe2c175c1e3de19a98a358fc33e699e9da5f3859a3036e9be01b601e00903da078ccf728a2e62fd0623ec7adbcadb788f67e6ae09c78df198f58ad7a21768dd22f7e68393deb07da1f4b87b907436a255f6ca30ba82374d758536a0097f16c9a818a635ad4c492945a88ba4cdf993114800be435d5ab8e9b6f057eb60906e90616f5fd9cda5714b8603e6c6b9593678a2d84bbcf6f399f74b1139350c6cb341864ddd3f72305674c1ff65595b3ddcaeb6b36ca15f18a42c3a6b261f50b0a91cc40996617748383f714a1de65701d88b78638213ad0082fd589f2ef94e7ec3a4ee11edfef334f2ceb90c6e5737a979ac1bf36e622d5ecf26d70b18a7aa41bb7b06f1ed996e70d10dfae27d7ab97dfdf8e0bb9fc0d5ad2f9e80b74c7d11f7eac5e232688d13f24a0e7bfcea17a419787793421fb1516403662d6eebbdc70bb0e53ad83c9768f5009bf5d96b280322291aee4917badb83c81008eaa97b1fb0d605af20d5b5e94c11bf058e5c0347ebc49146ac810266b3c67f3eda755961b3c6d0f9a75fdd8af694c1dacf6b3ab130745cf808f7341c96d39ebe87322bfab764992913aecfbe046eb66875c6084d8cf992cd3f29deea83a247c59667c531a0ffc0a1b147f7b89c093366e26d62f7adc387f2466066b60cae976176b75c95765c71724623996f7cabb5fd8250fde9339c71ffa7215c89f077bfe053c4b0dfc2bead0f61789c60dd7d94b873529118cc99b73f1c3c2303f7dcec2fd2f474eea2978c937d8dec03476f0fcf6b8e431f9be79620d94014085008b2aea77335b5274c139234ce060d6c94b426aa4b67847b7e29a01f63cc1bd800d185f045a1f9ae59a27b592634971442dfb05c12226a50b469666533ae265326c068e3f3dd19f2c0aa97e8d9123287d8dc034e7078b4534f9ace6c2c846872ea8d1f60926a060340c877123a69b3e884a7c887788fbb9243ec6db937d00cf8d36fa010cf809a899c7035cf49ce36509ad0167eee3aa8bfc697df7e185832c17dce3e8be968a7b2afaab8cf5efed2d4a8312419267268e90d2d9f8ad3df623e7b4b3f49cd44ee6b3517e71fa29f2bca85419cb8f643398962a3a545a60cb16392b09fa87472ba2f0211dbed419f7ca5fbe008e5dc5d7cbb058dce1164afbab26a0b0287d8e754c150669d57ad3eb22564e77114782e7103be7f24b0f54e08c80e9ed7294869df20f49bee0f858d25881b9bffd738e1dbe6701079e684a1c39fe5cb1e3e0a8395a12937d68acec10120faf0a48147f22db57372b9307b01c27ed2e1a71007dab7db16ecb835c2038bc494aadd2899222ec9e41eadd819b950081085a579e8bae2982b8d3fbfc3c12277530707f58e64ce3ca8ad30a25582a93cdad2ae7541aa90c213d6635307ccf0e112d61098e28a69fa459ca9da22e8a40894cf04afc3b6295f63ccc1d68636e0952dd4bba554101f0dc65a503d2b012efbea10bce59c767905e4739ea2360a46ed574e504d2e406e6291e3ab5c65ad7e9f570b0c01700e0868874cdd6a1e5adc5860d758f00f3dad0339841e9cadd6c10da6a7271bf9887125c67a30e054a02d0664aa84d0ea942fc32180b542b9b8e939bc9078b56901d43d635057f3ef55b225c51ac4feef0743145676e17f5ea291a215827658d219ad72272039532c84b7a4112fad435001e56498c48c186a71b9a97d3f02fbaab7b504787b82e7ee2496f3c0e6da8c461d624a8a8936947952caeea0dc4a2083a05187a91f5cdee700ef54ddd8ea428ce68f9c59b8245704616bef0af98308c5645180ff101943178333fe68cd01eec2f904a9b78eac60cddbc4ddf6c7577f22ce19f4afc5b36c42d5d08e24489bd6af56266d43a9b1f0e69890aceefc70b756a864ac5b4c843398c63303ed9cbe17f0c599b597df7a6f2d910a7b78665c7febd1813adcbbc369e4718d7b7e5508742553b6ff35f8d6b65a69b63c174275843cb0bea13f003e4646f9b0af1acbf4a4a270471f44a8d6fc90943e08c24f99fabe1dd78ebedff6f58eb6179e48a70fa888722b9c9f3a49b7e5e58ef09c8d9f640d7e194cdd0447abdbac85218bae66e7b34283a0d76b8f2e48586e1fa8fe6a6ed9f15799d9dc0493a5cf48791435e0efc0fd648cad8da26dd0bd9ab6a680a91788cb401b9abcc53ede640e1f0a7ee18b711b2b7ed26302db2373fb1c066ff955bd89e416fc11cba89aff1801a404d95873a5179147c60399f9b6252cc90e375b49ad476de26fa62ab3a0e34ea47f2ae7083db8c464d6ddb793853d3d168436e9f98394c2facfb06067bed96f0684016cf20a555bf5186adb20764f9087c23db3c45b2e702c42d3ac3560faec8e9eaf4e8ab2ebff9f9f75e9f626155a2cd3c1e906422b491086527fcd0ba11c12990ac5ad51f0cdfaf8fede4df5dc56c40363084073957ddb04773cb08368fc4e1ff725bd084699e1155b09d64e2cbeb29f7bfb678697e1a90737e72686b53206e764ac47b76999a156c12f39df2c1237f8dbf597ae36f806dd986533f58fb5086191b7b48e887f3e862a658c9c74877c1359d550ec85caddcfce230afac3f84bfdc901df5dbc71706ee749f9147863fa7b484118442420bdaddcc061d6f3d3bb6cdc72829b75ecd074318d16182be440818319bda56f0c1da1d3dd284ffee40f26747bad336a14b632a5dfa2e80b11c56e753ff9846e5179b19fb733798d4dde09259a032aa0e5434ef962e25f222253fc8a09ee083b4aa121fbc5dffc2f64926e5098d191e53df6b9c94f4c33e2a5bff9451a7831cc89302fbb83f74ccbc93e78abfdedb51e554f238b3cff219a742a36e8fadb69f3c83f4c0c1e6e331746fa6886fcb771b5294f6e98d04c1208488e1906f17ee7dc152a0bdc55a5dc7f5a22f44d1183ea94b0f33ddbe44eec7869c3ea413562b2d2053baa6a954fc7d7ea2bcc3f7e9cb2fed057d098f6a32ba66ff5282e97d2466e365daee5731d7b559a3608c5e161692b02d0c384880bf55c745f0133e862737cf2e5c8677fef383984cda8e9624779203a609401855fe348605b4be87c90478ec8b3bf72258b567f6c360af57cb12e36715b8fef45d320fbf442bdaa61aea017a56f645574d37fe7d902886e804dd4e31022d7d2b9bbc4a6426bc027db64c56a1a3a1de46eaf3233857fd7ca8e3cbc30f78832e0e573f338fd206de59d4b2576f23eb1bfed294dfdc480245bd83b8072218ff50ed4e3e1540b91100f682038372bc63451e2b3bc1dce236f8a3cac4126e8c2456be3ca792dbdd5e3b840035dd0d423649dca8a38921b943206ad8700126ccbd1fe112459249533ec69c06e5819dbe15c8f63d3d600f4e66c471741ff78752d19c2b544cb5cced42324f352cbbdc07db8288d7f64723d117f6dc680b8db1d089430b57025c66f983fdc87c5b575a3a4bf923d915007932a05cfc2c166c205397edee9da0537911f38eb0c5064e217fea64219e2eaaafa5d21cda59489197df3d7cafa2a4d7c17ec33e3180c481b1348d628507b70bd1023a64a2c61f594f1a38e8ca52fc7f94e42dbd69e2fdd44c3e20e3be608a4f27c11eb15de81641fdc0a6ae363ad90f38a80b6d23a2b6f30f6230b79a7ee3663bed685530983ce3500bde3b189200cb61b6b013203d27bdb61b86c77d680b00d4f49429e6871085e51e777a36672bf569a2655920d98bb64a4d0c49b9d33d81a7b80222900d0598a1e27515338bf307fae399c1b93047605d1d88d1f7b9a5373afd22c9457531d475e73586481c10d09188fc7607c38fe78b805e8897d1e8838de1852942ac8ac77aa960b051965d7f80621edc7f96a55418b71a661470c001335693ca22a77d9b13b5f48595eb4700a340019ea729005350709d5dc2cd8fcc96e0f898f37d7b4f9940d8d6d28f897331f512534514cc6f0c8f1867c80ebf9ca4f384a977e2d00a85470b0667802871ec61021e3fe565e5053730837d08c839198f2d73f0fb90a9435736de88184a618aab63ffc4ee105ad174725bc43a93c51e9a06e6b296f0180a2c4ef97539dfaf61100ee133ad939cca10d4d42fc5237e9a96d979145d7824883615c40d69612655e35bce45c3e43e780422bb5170ce0f279df74c3f4a2881df0dbf3a45998e283caeb38f84ff03581cfa9e494f7f89459aa024e462decd582908d38684c6b1dd8c841de50356abc01ee12f6384b3e67ebb46295c6e45def6ca775f989691f6a8c229d26fcb46dc9d6209ed2be3473db90cb89d9b3c9fd66a91579e1ee938514f78fe8e999337a8d2efe5df83e2c56760fca62f4d4b61b48e072841759f1f5fd5589f2a7ca26fc4f223b9a370c0f40af2b68f7035b77310d4b1a116e853c218f232a8a167ce0070b64d46bb653d18bb4186572a1e1661e53b8e1d246b98712811b5a1fd0db9ef533bc2fa65360802b926e13333805beb8118fc03e4929dd893c8817f464f58f8ee1016b6b7d8c416c6c1eeb662c11dde73c740d5fe3865a4cf15d65a827036861bba40dfb07c0a14456179e07763b0d0cc1d2c5ccf7d4568f4ca9d5c471ad0f0741af9e5c2af2c396d95b72ded6a9caf83a6ab788031fc0be4000ff3df4767f188a36c6098cea8b0f18655da03bc183b8e56a1412a390c73f07e8e10eb143322a4619032a5efc0833f7a7a8e6ccccd9a034328bcd9909e16ab1dd9f43ee5e18447fb202dda5146ccd1e7c6833f2ad5167b36d2ada203d08557eb4b4d51c25ab9856eba6968fca6cfc3afade98b002e86b791019bf737457631ab8112333586c4cbdbaf02644a21707350fc0a18acc60497ba6947d98eb8ae8fb8bbe12fb7cbbb2d7a5e3230a6bbf4ab0d2121b7a020409e23b07a58705151b6a28a8e02cb523761deccb3f38f3b91a4b5553e3431e79ca2f61933a24bdbb51fb240e8ff5070a0d161bf57799d1315e223f6a30e2aae3e367a39dfab2009c4030567132aef720417af7d1862b4a94a1f7ac87ee0ca94ead21de8faf91a1b60e53c5604887b3785d915f26a082ba01497e5e1d17051c03587b6a992941cff18185082fc71f4d9a3cb6a9bb571219c912f4ebeb6c1f707b8c4fcc707bb0084f3ca8</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Dp优化</tag>
        <tag>考试</tag>
        <tag>网络流</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200603</title>
    <url>/2020/06/03/T20200603/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="4f7b894f2555a218346949e0956965ae572687fc5c1210eaaea21995ce2acb43"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>倍增</tag>
        <tag>数据结构</tag>
        <tag>鸽~</tag>
        <tag>考试</tag>
        <tag>差分</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200607</title>
    <url>/2020/06/07/T20200607/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="0e6bdcfeafa5ce17980ca1a36c32278d5a336b1a6016bc03da232231eeb76a60"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>贪心</tag>
        <tag>Dp优化</tag>
        <tag>考试</tag>
        <tag>单调队列</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200610</title>
    <url>/2020/06/10/T20200610/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="14b637a5d9f5aad38f1507b620ef4809baf550c96d616ba95ea8a742eda492c5">70bdd1fe490c7a92c64f21136fe2f11e2f1665efbdfe22ea6db802c4741bf3b5c89bd70b518d54725af0b7710ff4f0dcd968f3075a62690a0c3f84a4a0fb257d9cf16ebefbd013c92c91940b9a26bde0cd500ab7ad02806eb9dc3d8b65e760ff9b68422959c0c573b4cbe94b000337ec3ab244cc0cd9c3890c1586d897a87fd2ec1dfe785c515c1c31b4ed0201e2f20acaa12e5ae247aac6d9a22ef5584dab1ebe9c44e747a6f386311aa70eadeefd648f6b270aa2b7d459339f9ddd32a8da541c78ecf80f0af6451fbc8189b36abffb4de29d94e86002b652416a21810d4f46bffe62092a25e781bce38cca7e1570249ea89eb4cee738b7c61451ec71f6b1c9639ce22251edcd20d16d10bbce4f8900fd81c373691f5432bd602b0ea0500c0aa827eafdabf401863e7a0f17ff056540aabaad187df0b94fcc39f2c469b511c45be488834e380ee054296b62f74bdeca4533be73ead0d95369def2f8f0b1c6cca11a665021782187a4a0812b3428342f65e6c7d823936a4b626816ded4bd4f2ad438b6404df6a38a53126f3a6e05ece50b9a44eb9109de7e8331438a583386a78343e5ffaff3fb6e7691ef3b4ec08c32fe76986ce79a7c55394a73fdeb7b44065259d5585a796a443d197aaf2a446fa22e792ec99c244a6011d63405ad5afc85d291f80a6a464a90db7392656917b2606a069977183a92edf0793497d105d686a75a07b5fc9faafa61d9076f7df941ffa58d44c0728d1bc8df8b5d145ccb8b58a09e55571efab18ffc797e68f3072f0dcd3c6d1afb81a040e2d47afaed323cf0f008caecb191a6925e658d08dcb6643dc91a0f87beecf33dfaa49edd2404b0cf530fe8d5062e8bf866b7acb2a1d1d711ff82702bf7cc354364919e641f198d8e7f6afa5aa8b97de857fa7ee8d3203434195c59d22c5338db4a8e3acad9d0e3933ec5e8e1ee5abe921741a81fc48bd8de59becaeb7c157f427b1398fd0ae2b2ffbfcbf294e194d7b6c980cba4ee1df22c68628089937287e01a94c1fd4e25579bd5eb63dec4cd39e13572b1906a202a942067b5bab7ea05a3afff76099c73d26ad6bd09743e1743aa1faa03a5040998bd8611c0e694f493daa309f45954706632aa0f959add1bf795fb4c542715fbe2d50b9d9788e958d7741ad78ab7156114e94473ee0af3a20554f27eb1b1b1708e99ef25b900418442f89848f4e2bf7c21aa073004a8b45245e913ba9cfb13fb651236ceb732a94ea97e3f1455bd931eadc026e8c9691ba88567918f1f3b8ae835591bdf2a0f70b7070955e15dbf2a60d0ad6060784f52333a9f72952f473efba6eaa03970039c87e76c849f9e65ee703f681d117d5ead2d1408acb04f537c5fe25e18ef4d31491ab7ab94d205ade515d1644f60f1328f46a979dd7a169b2db18b8e7ba65e8eec02712a28e592ba7d2b693b1c95c64e80d518b0bdc5b3f8bba964bb5b7575689221ae9d9e3b2726f4fefabc44ca781e937b5da470879ea519a0290dce2bdac5e3eac2febd8be80400b978beb6cde0fccce14ce5be7fb04eae514ffee8e00b8da07dc5c898dc57ce905bf2bf8cfe93c4d732429ccb62eecf03775f41bd3d3e74898aeb5fc3a91be88a1271fb3db69110fcc42df7db22c5fb4601c18b6ff2481efc67261360233023917a472d58f82226c5978aa0ccf92b5db44fdd84bf5183b77e5c863b4dfbc1646d45877a1a469319d69600066cc1051e5d540eb1422cc5b67a8eb948e4ff95ff0a95db10051d9d918365547d766373be602d65c79623dbafc189969658a4331bab5e5b7bb53ca42d04e56854096decdd5252e69ea3653a250a591b758f46f30cae4d154eaafe286f8458b5bf73f8e4974f7dc9951ea214883202fa8d22d0129395da51ac7a7dd054bd3c933e59c7aef61283137a021324e7773ab745f18d595c93f274c922f4e452ed89e3296cade2e2cbab20eea729ffc815d3fe661712535a9cae7c44a0f062b1ad33b470260b22be68d9cf5411b1f9ef6da29274d097e53cd38d3a9e952734d3ae9015f8f0e14d3bd2236ac780e924c308c195b6fa22927d8407b1df1347320464630f0662ddc3414f515bd2db245da620c1680e55e52abf988f03273e54d127ee320ff176050e4cf2556e1acbf1af3f1294d431a683dade9dabcfbf08fd11cbe5adcd9cda8423ae9baa7c290f93453aee9d83c3e213aa57dc9bb6b731d73f52b6eceb7dd4dcce18ffae8b5506cffc7e3c46d4fb15c51eb017b017848bef679ee47dc4f2ef823ae9a2463c314ca62749a02455a9c13c3cb9b7d294b372c43b8f6e5987e8d7ff951c33c6ae2020485400b5e78c6c7b9091c1d4b67d51192795e7e9a1a30754fdc1ca1a53e6fd85ea111405b69a2b547ee618c87a5791202bd05b8a64cdf1cf0a9a3ac4e90b37b19570f8e2727613b84fcb32bc5d82fd0db6f5e370dfcd7c5cdda851376fdc6c89a211dad7e7b98d8453085dc8099818a15698ef77aedf31e7fdf5cc3c6e554eb52c326875a43db462bc7ba4be23176ed5f1e7c3594748179d0942775d44675c3a51516823866c99700e057ff073c25b2492fba1158812ea9041ecb3358d723a48ebcc8bc172d942cf1f9df3bff639cf5687c1d16012bdb060acc28b3be4ccb86787af0d2dca40bd910be43d800b8f2f45ecdcfe037f249c5efc19c5504ef889b366a87bdcb0a653a573318c7e67f4d8216576b6a046d02563da8a5899a104bc084a13f013c7b87ec15b41ce58426e1ba3f6c942b3388c1023178f1dfaa4b027f9cc4107b7faf30affc4fbdb41875174cf4087844deb8aeec97ed4fa88ee2451a7c45edb7c1d77ffb636bb480450d4d69e722f0ab3e3b3b37d32bfe2f98e845a2bf68e033b61048f171c3c3228d2d9c3095cb3a985eb227c2be040588f2d52ce00f7b1ac7e4fb517ed6636e1c2e88647401401cb742f385509046c0122c60ddbe143cd053a5d8f28ebd26d9e801cb44a16459d0a36aaf8a4165d660fb2d41c7fbe06e832a3b2339bfde02f4e2b5e12802be76518ed6892ec3fb4bec3622f4d1e0a45d790aa37cf915733aac17622f303b17ed4a1c21e3c75f905a8417b0e1774063e91f205c38cd0bf8cfb259b0118ce8c5eb0d7c5ca4152c524e1b71cea9e1f80d5a6364c31ff9f97b74141f86d4bd5a2b85d72672ccec3a0a76dbe2d5178c3af72bd3273eb9a32ce626b3a4223d711fa6ee92a6a8421037b4a1e8fb1da22bdb6f0cd5a39ea0837877e39d2cf9a360277aed04c861135eda5c35d3b8d22c4330bca6e2ba228b3a73379bd99469b7e6666faa355aef09b825ecdeae714bbf54833282f5ec4d24b52548848155fd66271f24cae73fd4ac30a3fe13c3229b32c23a7e9938f1b3f45fd698bfa8deeed1cc6bc9e69ad99517c2e62177ba0d54dd78867d42ec1b4b3256aed7c21a246cc9f311e2819bb5b1d444cc0188f0d4a22249c65f30618cfef7975c0b7e08eea738744a4437efce561acf8a6512aecb5a7157be8f3a85b74128561077a7509faf8e94cf73ad059a5cebc2b9f37469cd44a5df93c68c0aea98245b2c9abaeb025c0ff71836df036534dd1c136950a01705874189ff2a784492ea7c9d0db17e5c31e7aaf4ebca0304748ad978566e3b82d4dea04f171384760b86f92d0f7b8fac441b02f6d419c9ba8970a54d5dd7c9808cd26646035561e0793f8a03dca1fc4f955e395a343c63b422264ddcefa405ce755c49e9bea2d2a3a30e4a7de7189fdabc40bd0ff39486fb1bb58c97ca0b177308b98a22856905cdf3eb356008d7fe0610028d9a12977ec76c4c39591f19083d7929b78cbaaa8415071c52c990650f5e7d07e9d652c69cea53388cd80853883baae27a9d3f0966dd552e23f079c1e1793cb5837df82e76fa44bb9f8e12ef7e4b74a90a6415d07ab9ca264db6e0a7bf2f0a4d488451441fd1cdb0a0c6a3e99c9f07f95a1035cc1e49ad06bba57aa79b1e6794cbdec122a76bfd63dcc616b42e1ba249388e044b8ffb34b7bad8fcce3670ef99be17ec00f43f6140d1fd7be77edcbff8b2446fb672ef9fb1d833fd869fcab89325283249357812b2ad8a22a28b3f93d2d6fbbeef6718c4f85786db929607a933440a2b0299f7c46d3b8ca99891d4214f77814be634e20490fbd5275a8931b71e29544b47432d8e414efe70f241c0cdfeb1320ef6819d5304434b044f504e4d1c209a29e2c07f4a10a261f2929976bc42083adb195e84eed47462ad1b7e00bb23dd3d0e65feed8094d56ace9a3c52b6350e0eae238c92ce73155088ae9da523e0bf982cbeb8365435a21a2ca914ab232f9b6d5ff2c939afceab4a9af82ed6d9545a883dd578094e9d2061f55deeab9e0c757d909089af6b5568f225f5d9244cea60c588a876b14210d66e193ed03e34abb7519646ba5e2aeab06a5ce6a310ed3ac3c53e223f61cb725bae1563ddc3baf343158aa42c4e417c74cd550b44c8c93c7e1c0c4722f76bf05434d5ad261f1eab78ec5cb57f7e51323017b5aedcb6fd69478f3df10c5e33f57210e63ddf2ef3151aaee9aa2680f9c1036e3c89bb0c0e652c9020356c3e8f004fba86a41adf2da080542c9380cee29613e519034df08811fae8ae07c55772d4ecaaab3cc4144a19e3c5a5b25f5518321291726f13eaef613f7511853fcab5a5143e089c371f96fc4daf3ac2b3dd3340b6f8f0f6b4000dd5f883001f89371ff68ce4361ad2e7b152f74967286383cd2e312b149b9b294559a2eac734d751c45e2ab8589929b75fd91946ac1deb002e000a59cb4020cf26991d9171f9fbff3b3ab65c1c2ae6bc8f005ee9aaa56f4e415e9e25790fa4ca299fed5f0a468c81c9bb770756a6e4307fce707e870d9f83887c4e4aa0fcfe069bab1726d3abf414e32a8919b54007669aec96974c539ce227b1b1946988668676955a42a988f1df8d8984d6531b22c90f36d231fa0b7c92cf8f73e8bd4ba9b122338be037bc2c203a34a1a0d8429179eb851c7500d19434a893290a3697552184a5fa8fec4afd1902293c4a80a02b762120df16facfe73f89a93a1f0d1b522b0b9d50195acf3aeff83257ba380be7c6016860a449338dbd50ece6192c39c83a25c0a2665d3ab2a7719bdbf727f9dfb466922cabdcaaa6928152b18b1778f47f19725cbbbd8290aa29ff5e6974dfd33cc88f5232c4d3750255468da64bb08ee3eef0099d13c40d8a60b0bbfd8fdba01c6f612661e19680ceb5ed7c2bb1fdb18bd3f40bbd5e8393709ed65519cad66835f85b8a41ddcf1762befc5c0a87d02b45d61d981debae7568b8d27f85a654ef83edcb364f3d39cf10bd90fd0a797203138c7323cd56f4ab9ef5340dbb4da042eda2bb62b7b3c0e3f96504bf637216ba045d08198fa8541dbc731d2d17f60c820044549a52356c57e30c362a16d6afc39da3f7598c97455d34ed9fcf77a4ff41568a833a96b0994ef50f90e0855b8f96aed0ce985a26d4dd7dad02a2b8443c475096ec7ee5e69f676799091955a1640b8c1d754449abb673e515b5388aee8ac727c6811c2be4cf0e44aa1f17eea50c585d6426fdcff1e8325c7f6710cc4817271dc54b3bd32585de6f4605a3f338496d561476f46e8b34ba2335e3b3bf0b9eec5cf4d56656c32cd105a4e17b6e9c99d53a645a5261eea34a83354e8d2215cbdeff37e580ed77fde5c49f3174737afb39bdcb9d1e7f5313529366c8d5491109e61acfaf3ec4d9e9a36c04623526f3550b42ff1af368778bd9a11501b7d1e3a9a0fc556540ef29950ada74aea8e64a904cf16299d57434949917375d4c7f20c13faa0578a6023879821230f2c9d3d75ddf6e8f55d70a0e5f345bdd8cca1339aee460165f57a028839609cc1ad54ddbbd300b6e5c3c7dfd2fdd3f52a5193855d7a796257f54c29e7596041cb7d3a7f3c98353a28cc4c901fbc10021340473a7aa44e76e2e2d087ffc1e5cb5c0482640c8ad4dfedda97f1b883f2b655cddb4b51f1398810b76b95bb42dd08d55c8e38d8d9306d9fa6d9f640409e7f97f194816ea91a131a10a458071b4764ff7703e67566babf793d09ddd12d4bd7c54a9d9f23bb5bc84b92417be87986276137d8f6e582a49097fade91ea1bd3ce66cdaa181917d8da9a4a3c992d8184d3b73862ab4aec8b449fea34b182b8a31f022a33ea505f6f0a77351686aec47fcffb359967cc3b5a2785f633712ba05aca75bbafc282f6a871e98859706460c553d746fa836596f5ff54591ba3a94ff6b27eb6548aa59d2df6f3ee66c6dd8ceeff25f0208171686505c399464237829f6d04c5955235fc88da2041739cc68ba3b44ad732cfee7a002751dbdf504b8d201a6c439ce80c725f2e925abe86667d4d72d5fefc2845683c6f1dad0c2ea7aa7a7195b4bed6ccab319a57a0429f7cf408774a82ec1dfd6299ec8690231ec534596427ebc2754e78d96b283652d36910e975798dc60d2fc023ed9db112c3b11cc8fb0ec7c4e8aa88cb1d299e4efd72a6dfc818304ac9fb3f0608df5084eac3571a135adfb6c6313c83b21d04f9dc50be7c04d6fecb75092cfdb35d85260afa890ab498e95bce85378b46709369d6cff52c8ed94071e7f440d10e0362b223529dc30470e9a4637338ed87c9f5f70b2e2de94494608f02d42ce0eb25e02ec266b7090d707b5ec7154bb6dfca88d7e4f6d7a16cbeb5c8bf5ca2b42de66958f47ea61f5e32babedcf8ae410646abd59471d9df70b466cd53fed1af8994e349fa33ba0a6813b07b2eb48dbfea2ed8a1d9cb106dcf54b44cead1ff1e30f5fe05c3a6a9f5199421f12a4a6fc6e88f4bbba3eb41e5f1bf23c9f5b1ce31342970a0ffae2487550210bfe3418fe3973c2e33c4c6cf4e6cc3d45f0c2b28680e1e519095d72988c312c059a09223101fd0afa08875fb08e06148afc6dd287a7db77beab5331614184dd832a02dfcf59d427be084db24a3efe8b4502476c21603dc2fa49f2b75a585aa78a413ef28955762a8ed88886964594175cc70c016fbc0f9fbad2b1dce75e18d5d5ad5dc689e07fadb943ec587fb6ced333961c6a86b6c8f420d0e81330368160480a98ec1c4273d01f54c7957f6df22869590a3cf0e01aee94c4071b0f25e18cf6218e08f67e9e63f2cb8a307244b5d026c876e1b7258e919282218127332f47deafb1ac6a1027740f2cb9328a3ead210515614adf9325057667973f0af45a949804052677887cb2c26ee40f3201789a35844add2a615c52b7eb6308cf60caee0483ae7e5a66d7aa5e6601d260f35ef9a07b1a8598251c24135d4f0f05b573e54e49f326114a81a88f01ec5d13ccf00ab0ead5690d53204710fc3e2bcaef819da9595750678083a1ddee6699ad9f0a056f98c6cd32d445156f096f75f7043bfddaedd6d3882c4b9316b6e3b2e3b198de9990dc45b87e4b8cd16ec7f76c2c4024f990cd7478ef27cae697cce2730b1b737c7e8b73e96a05269090645305d563ad43bc38c9d145709c04b2ea7c32e36dc2228df8bf8d39aa960a31e266f953175ba9d0dcba879790814e4abe9ed5f7db6235ffe25f0d36c3cfa67d9eb29ef25bd3b2c7048f8752d40f9044e6acd8aae1c24e5cc446e47f11b161d01492de71df86f74f23e7304b873980f1fa69ccde3aab7b54f0ef46c9ac6c927221a1358050a6adc583572e5262c5d937547ceb387b0534dbd6b3c925093ccab260e3388440312ce5e8386cc1a9cba0b1ce61cd3c202d1a8efd767811b7b01f9f72025864f218d65a7ce70aadaf8f4a3db314ea0d944c2fb8c4c2488d295957b794edbf49efb3806adff569cbbe90e34253f4c9903ed133e51a0f3495c181b074669fd3d4798de66ab76e3fc841509c2dad190bf4b1c1be398ae63dd1aa6c10ef6f3f66f6583c658a31dc0b1e1ccde4f47b080f3516c8b6965d01bde39b1f8352ef357bca12d4b3e1edba811f578270744b71edbbff13dbd574754f56e6a08778c8a206ac808c33966a3c782c79429933e9a799f83a9349d390086c646d2e304ecee19f56720bc4c118163449880899c84b749d72e0334f9740052e5274fdac2cd70722d94617c6892c5bd02bab00e1aa319cee4d8ab8bbe1e396d9acea0359e30ab0a1c8f343a73d19defec6bdfca8848f8a6bb95d2cf28b6354b87adec785af5e53d30862ee76cc02670b37a657c9ece1ceb871d7b3c2976397b193c5f9ef49dcf86901adebacbecfb0c0b6b9b56d66dfffd48407af255697e9938e8328de485130c8cc63f90c920a112d8b801ddd6c16fa2fd7689486682fe99028e4c24f647f16d08807b4b714b59a1e479168eb3babbc16167ff67e0cc8eac9eb1d3ab0486fbc6c107bfb0a9c56a9e38058030ef18476aead33d4fb540ab83edfa964368a0d69a17de2250b1eb191124c63bf12b4093a342e42f9490228fa27a88ea4140334845f7ec091dc39ea5ceadb2843e728fedf5a9ee0e46553a98fefb81cf48ee4809dc4aea904535198b992f6d002fe9c37b9f79bf681f4114471b9b3c2ed3572b4bef20fa5d76dc7cb8a3c7236a760ab5aa7669e5cd37211d771a69d445a88e268108820911bfd64dc92d33d73c37820a0111e7bfeab2a8069426f4688f28a3d198519988eb81a25accf149222c067f61e642132034be263261533f9d64404269f4fd0a3abc4e7b1213b8b182007d7804115985060dfb8e8ff3beda280a1c700f3969c9a25c30c65708e631a91357ae19928fdc1d03876eb2a4a87d0e7a0d36fb867bd147c51d40ce672c215670f3ee7ae21586f2dfa3d88feddf86554ff5310dbfce81db7e7807c448ec087c57c9f8b478e10c972fd597627bed6840ed8b99f755dc9c3f438d3805b7f54a0a3d0fdc3010f90dd21346a82610ac26b4f624b813f8e83561d5191c92aea29ad746bee0bfcd4ae16c5dd5df847630478a5d9c27868f2d496984ed9d67b79bba4092d0b4490836e672402535a407a8c1b641ff7b99ca5654fa6d32678f33ed6f73b793cd53c4b76c89426b2b83d18a91c25825916b8c483bb3fbc10dbeffadd2a45be0502e8edab70fd1a40ff29aec564e353bc9e57c3e211bbb518f839cc4b49f2d33d48d5415e2d2bcc0e1bbc4f1f8d5c6bab85918dda432bfa72f3baeb9da8908bbbe90ecda118052f1dbee428841f89cdd26c9b5f6ecc3763b61a38bfb18a216f2a6db44e7c3c3f4c507a929105858f5ea71ae151f613eba8838acb8b443f16182dfe4b3d540626830785b4f27fcd533af7a8f3240a53ef45582441c5045693544fdd24c9128fbb2bbf82abb692815ec229c7f4a8f4a3c582cbd85639211f96285196e9dd9be904a9511f2bad176030e06af7c7111ea85140fa1b2d07e23e2e150fa9772cf21a27c4b9151a905f0bae3f17ea6a40e51d0a6c0f3521bd24ded68e4c44e40f95e34cd93bd4d00d55d4a6df5378db37c42686df0204635ef88bb00cacd33d7cf2bada5da370531daa836f3051b139dc96ed99a34c82b420c8f05c35b61a5e7dc91d626468af193010fc3206e26edeccd7ae94981f0eb17c79e6d64a7753f3f174c8bb6558d06da91e918a46baa688ca379fbba643292c99b237291f5f9aab8e3ee9525d1a9cf9b4fe3b1c1cd79c2e7cc9d3f3fdc172d5b7c8d4b5fa6152465db1e2d80e3ddd2343260303b12de37392f93e97bda8a14e90c2c8b13f45e3b7a187c2e06c40330ef80d878047267dbdd51a1a49f7774a4f46309af2b39ee9bbbbcbef0cfdbdbf694f56adac64fb59d5d1c30b8813d5d1029391d72be89d86552c883df1cd673bbae80e6da4e166beebd526a288956911eb55bc89f756ff7ee82b8f8fbc5ff68ea3d3b0ad9ddfd8c6bf3990ddd37944d8108e7482242da68cba4e3a9fc5145888f734143111cf648798278f163d4815e05cdfb1f68425e1e94cf6a312fb03bf9b27ec4610643b306f4edcbec29661d1fd73b185beb2c648be7abad2362879f8c2268967ca476bba890e816f90de6527a77ede9a87d4c1718a23d7674ecb7245e03b0ba2de190a766338ba2880fcab6304fa330c5c66ba7775c7b9bce9fbf15f7c87a7ffd8cbb441a47b99896f63a21517319a1d273f8c540bffd5cf469e1f8ff05f5897691157e44dc35a15c3c5e304338cc67b22c24c85a77c3ca7eb2831670fae7372d6a8186aafb4b256cebc0eb84997671ede10161838d50f81c383fc9f59f7c7f2843bf8579e9bc07d9de51c81779a8ca58a787147a96a45683aa8bfe85d76fb56b1429a006803c753505ed37281ed6198d02516e44e438d2ea78dea6e92abedbd94e28428314bea727a1e3dbe5260d2cfc0d08d52f8b0574423eb96c6112978b811a9476b14bb5ab21876f3550f134a42077c3bb55e617d4eb8e35dbfc99d671db683081d363efa049e4bb38d26cd383d141be7bd896b017adc0e55acb7b3e90c36a07d45efcb5b33a219b347b1d8144de17b5c1ade6bfc1ca5d3f6de9246ff134da3252d599031f9538ce842e9ed3d4932ab89d41ff81e0aba560db1e85363a57fc3085a253723fb7e12637a8beb474a5c3727ae3a534a18e290df951ca53686b790d0f122dd96fd034fdab02e5da8223f09d07c18fde49e21c772bf00f1c34fe4ce4e05ba13910e5a9cbb66cd229fcbfaf4c0a8b91a14e5ed87f597c57512b504412ec5380cef0c106ffe4ce9151a537c346997f67423f6d650f16487fbcaf8397d949d47050c52c42197f9f3af3cce02b1d00a90305d473adb1d197ededae477fc076ad8c683348dab88aa6d6502834360a743e6b7ad3061ce01c9d5407bb79b5b8b59ca6244d39f55bd586b49e9dde1b47c23cec19830dc36af20320fa3d5937f6a5212d283e6398b34dc8f60322e503b5d693d17f6286f228b0145c2541abbb7250953273bad2cfb7bd1c381cae0623d5d5d5a7639cd362c5305e996532b7d0485bee5e265237bccfbeb8bc2372dcafc57d96d1886a79babed96097a05caef5beed56f41f379f7212154bd924fc83c2412fc075fee13e3c4a7bdb44d96038c700ca2ce3318a32fa1c58c6acb57035dc82457b40ce62dea7671aef94a6018389dd443bc2fa511be88156092f39723dca43b0802b0118ed15c730f42101cade0b1ae536d3e45e27d81fc835805f4b9d510898a74e0921795343d1ac473a0bc81a960aa587fc86d025d77531a032e2650ab92febc918d1da3820a75988052e37f12215c950cb006be74089843926ef91bdf759fd04af80a2a72d53828501b454e9986495802a597a1d830ca40dfcf7ce927ee75af3998196834c4eb2088fa211dc1cae32c59007c225901784aa2b77f02aef765b2e1077b9824994aea0edec78f5057654d0c22576abebafc848d657cc9dbe08d789acad358a8ace1a81e4d6d6d5c644f33cb65ea179ff09ad649e71c9b82a99d434d1bc99f02ec4bfbb1d851d4024076bc29a20fc56f6de376b8958c59909ff12228c43c72ca4257a9ce11e4d7130001bba2ed26f83472449206e29422f4d69bf8a2b72927ca8a3ec4cf07a23ccf3ebe88f94a7edab85cc5f8fbb0a60ce27aa3a49c67e4873388cf186e6d2c3dfbe8811e5826f4e64021476689985289e5e728f69d646e644168f2b47a97e08265fd4fe7ed985f38b3f1642cfc29d4e5733cc2d4b71dbe2395d2cbd013cf04d3dbf1a6427d11d9a95c20dccf1d83833a556a019db2c97180ec88ae415ec4ca5acb6acc33444003484b0703388506d53b63442256886cb6ed0cfd88c6f907c2378db3c02fd5e051f86ad7c577e2bcf5ced3557fdb4c5fc1044644629d968fb87642e5822fd75ca5a9e0b83454d2e78d4c76aee892b648494075bd5d66519514da629e4528b6f661e1b70b1c18b4282a07f51e7fb83895232c9a13431175fbaf73dae1093c3abb8008f2c7e7a292dacdeb16ea2c1cb99000b94dd691eac0ba77b951dae3379993c5d1a0af93935f12da7dc1622dc9d09499b7246b22e6c9363ae52fc800331c80ec002650397b9a1b557e6ae608c718520408dd139f872bae342bf101f6376507cae6568ad84ceaf5b3d5c5a53a936912acc1fd5c5c368da14e519d417e79007b2ae71861cdae7d8ccd631ba526b1666885331581acc08c878181d711f4eaa1c37d402d5d66ca92d9f1a287f2edce9f32213f25ec8bc3e99c78a9ba82c819fd67c65db5d5987e568e69123906d4d83b4fe1ec5da882d9b04ead1a61292de41e21f4bd6264995fbcec6b1209f4b3c9c8bc0a87b951f61a3567fce6b5e121b0a10aa33d7e0d222149f0a0b112f6d9ebec4a290c16fb0053de67378e3f65e774715644d856235586d9e28790e0cb545860b7a4885fb2267c2d589cb98fd2280978b399b4faca4b3817d0a6d74444d0004a9c651f116a199d19234bd68d0cee6c5f2cc1eeefcec01e00b1b8d73410c25355e5c64db5df5503197c8fa8dfafb3b14c9ca5379c26a8f29728898e1787ef49987aa8304df4832aa77ac8cc73b2a11ef52061893178092e5c02cad0ae237a5dfcfc4e54084063174888b763b924c1f3e642308b9b7d9e04030ef3566dcd3cee405c1f8de78a473c8bda0400c22efc595cf5a16dd6e8d439bf3bfbcd67d7c4a8efc201b8d872741a9b809902545d66b2cea7af6543591ca180bdf9b3667a0ac45831cf29957951147db1bf7620f56415c28c8754f84c212107e027c0932683616093acd1ed0d4e649876cbc23ecb846caab26435a7f022c2bea5ac102b862ab5fd630292de9009de68908ee0cdb6054e48b065d21babe5b0180a6056b0a1256284f4a199e051c4ea317b6808346b4551d65555c6606add3370e0adf62675b71eb128858810f06014fc035344d45d513a51f5711d1805ffe5de192f788f3c5872368644fe932617ec8cfbae00349b68a99130bc7446e01638b5ad7a56d1a60efdd5f18dca69b6511eb1bb875e9821213d755711b8a4c54c86759b9672afbd1097f3c7ac5a08b6e9aa366c707b7c763b9847a1865aa0ba90f9aeee546b351c1ae68d6377c4a2cbfcdd571c07d736d20da922a4158a6434e419cdb6622dfce491569ff3443dd0f99e4da9de19f8414b4b16621fc8ed5cd461736baf83c892ce53671f8d0cde1387d7b4cf01738ba92cea99c5828e9903e268ce494625257f7d85276c93cc76f21316de8449f7213ca5e5d1cb0a8aadfb154debe494cd49525ff046dd73bdd4607587fdbdb82522a7b29868e9b7867760b5fb0cf8583f4f8f6ca0cf12b4957340bf1ca88d2e18adf13e7617a31ed3cd33090926ecb2b7ffc631ae0f98957839a50a204034e593f31e7eb723b6502d1018ceb1ece55c9f539548caf00e0be4c44d8a5dbdb88726d5cab527180f5e5580fcfb435926fec1d8517fc3017f316fee340500c1868ed4a244eb13b753074f5707528223c4705eb7ba9a8aad7af16faaac92ed31369594adb38ac6bda7d526ed1e20002e34261c08743f2f493195024caeaa1e921ad6b2b1faf1ec7c807c079bae3c4ee800234dab8dff28d4803c77ec87c545aea0b2de17b4158a51a52e3dd2eb050b373677c321220fbefc1ccba815ec1ab9cdbf5abba1f5f4bae5ff72b85c23af3185828318817c7edc13c3fd2f527a0b858c3c4558bbdfe62cf1623c8da236c1f4bb1857af75b11759f8c435234c1127ff0b782724190e41c077032fa099ea0070c994972d4ff3d2d0d2354b89f3de683b29f3f3254a920924281a11e3716b9d784c0dbe8c1e27281a67d446b938e648e2379b6c51a7a54e080dc2235efeab7b325aea5d495122649a031ea877262b03e83c269bd9923e188bd7e5405c7c51fe5e41597dc455b3fe30240681cedc77e16010f5e869dbe9e928a5f9f50bbccf18b448ae5e1749e7a4f9389cdfac458ed2c782c7d1ea968ceb903a220c9e7c67fd03e2c4e8f108c35bbea2bc72539e7240d0b4ad0efc914c7492078da5dd31d64a31de96878b2b079fa27806156898c4e905f62816972a5922b45e94eb989f282b8dfcd4169135f6f75c91b4d6518e91938d0f289b26fcfa7d7cec68049d5cfde91d29bed88aca711c0dd9ef04e8d2718f6bb85b967ed18a0e517a4e32db8185808a863c14f55b5a8ae893e5a0e2cc86409db2b0054f3d07d6be8dc5b1ebbb0856c711c4f6c99f61e7489946113ba2c444a02348eb114af97d046d3cfed622c202d705026d8dc4f69b0a5023ddaa293431939ac1b8d548feb4d05e229999b200cf5832d28b85cefe59aca3edcee5397f6f3d361fcf375ea04c75f17e3e098ea6d510b330cda64772b26200c2ab33ab1fa6e33ec5856dde2fd1b7becd24fab5317a92d3d1e30113807b1ec81deb0f9f677fc126b88d600ac48a0abc82d77c9f428e8564a57bdafc15824e3a683c18902ef3bd5f4274dfcd5d6910b8f4df021374089e8539635c2882eeb105adcea30ea55e763194b557ea2a9dc227c2a1743ac577c165f8de6d7de7567abbf32a66c2fbee42b9cd59172f43cd1f805afa3e40032d809057d60a9ec8eb176a2b158e9a554ee71192288ef6b78c7f581cfdbf7c3fede4709d95de7d97408c6facf70d769231c9f22ce632f204aa23edeea63d02e87dec506ce00b89166c1903010c9db98adf6d165558b02b18cbb5dfae7f7bcde6ab147c675bf458501394b03239458251222d7cdcb6d38902e7296607425c3d4131af7b1a6dec81c34f70980fac7202d9c14ea21eeb389d98a937015becf888ec38a13402934e15c1c00b71a2fe6228a3ba5840b5bf80233642c03d231e87b2d682cc3f414853b7ff05972f72181eb9d47ea035986371ad0e940ad776292f07aa48548e981d54ba13a6f6f889fab2824bda40a61c0462558f108a99865d935ec3ad5765f8013dc206d461c08d98be385e65d0fe08c2b2e171ccb418e6bfa3f35ef65a715f61698f7b1465fa125f33d908d0c71f92dd94e38d943137fe0debd3100d6ad4ff6bb49e744bd22e8ea7a1c75f16f3452b89af8abdf0bf8a397dcee9ccdd049027d46d33f3acf152a34cee3a8a4a6a78a942f8a28af08e2c6128d465f9edcf239f14f65097a9008ffbbb6adb9711a5fd21f12fc9f946adc1f6d4b70c09739850b21fdfad2d75f168b7594aaf01defbf4428b28ec5adb75ddf3ce45ee4292b524c7869eed4d2f4b93d30e637ce0b12c16d91ff89a242de7f9a4f4d4be1f6619878ebe6e2a6b07256aab2914c3b459523a86413d3fd01607bdc4269e055e804eb94c6a6d8072d10ff84f09763c481acc4a46d5cabbe6a8fdfad9f3ffaf83e3dfbd0f4ac3f03313e0416692f2df1ea4a2d4f354f59c4dcfc8cd058c2d86a3f699969ccde069eb992d1e4f643195186db0ef126e9102b10d656e80c5043cb1dd0900be9dd53986246723a83a683882b82577d7519828b43afecf24542c619b441de2b90418555b71dfb0e9b37b47a4eb3dc868c1f733f30502413d8338417eda17de610979a57faece42c75a247becaacedfc4d72a7907ae84e22acc8d9a050d4dce5b874a9f92d008b919f5e916602cd9513d8e8c883615e3bc0a11a65f69bbad6a1534a6b59e64c35b15ccd7a6c8a8225693fcdca2e9edee405d9dd07c48331cd19738bc23147babca86ef24aa95d9bf2d10bee890f45921ec7ac55dd6c8c209dda7213bc21951d97889f57ed191f57c67375c4edaecfc14ba32ef901af2ab94df39d1b6fa9673cf07ebdd34d0a09c7cc780876a05216dacaff1e73d3f959dd3ca23e9db9b7a1031da4f3d8c2cc4fcb591e6a610056fab8a2cd7b9007589759e4edbaceec0532aa8caf823e687246f5eb8ce9a39996eb7bbacc81646eedaf079d291e58e0a6ac53ef719c87ad036786964fe7d38055714c98a1e386d4af78dcfe7f3e2936c9b8e7e22b6734cad4ca9863ba022bc4fe28597435b04ed7b1b8a40735ac272ab06dd8c9fc97cd524cfa3750cb4cdd57d5d1f7b43abeb752aa0293335cb7e16ff3b83f94c5f96d5283b2cd5115b95720ed891ce966155aded16f912fc84093877dbd41dcc07c63c2f6672b60372a340cada268d4a9c55edb20a9bec9f79568f0782e8a967dd25a4a3cd6d5ff658485c9bf5ec0d95eef3c501955e18e73038d60b6941381399dfc8b926183f835df6561827b7d7f2f245b0e677aaaf5aa7411e4a9ddb96587874eb8b00990c6cb127050fb84e69ba84f2976d156aa3bb8670b7869931cb702abee38b8c3847ebd9e03775b98ba08bfb31b1aad86645eb0133339576694271038a4053a755116f17e0809b321acba36f207aae9bfc425c1f0bfd5386d717b47ee4cde1e921af48d6437eba1947e2f184a35f62f975eb0909a18ab59f09728525b56fb88cb8745dda8c743442676c1cc4b51bc431177d604b33b0c4a4fb6412c72f46ec91fbab9334c8605548056a14f174b54a049c0a51d9f63bcaccc35eadc4cf0b19d14b2ae1f420f695b3607637109e74b92743cfa721da4ca05453a7af1c5a6afb002025e242686a5c1bd160f323ceb9dde93d602dd96afd327829dff507d05050d6287baee3dd6ed07aa8201318a6b0f2cae8d89a1a91cab8513773792e5feeda091fa147a39245687483597964e95bdb6e498205cd66b1a70737a849b19f8dfc8d937a22913aa79597b6bb73bfa8482cfad0ee36aa8c66911565b83b5b993c6c49ff7a2f34f1f42abf5e42b3ddaf2dcf6c2d0d43fb7a6b7d0569b1cd603e92343aeac8ac709810fc11aed3bad64aa69c6951e33bef274030617fa7c715a9c5c2327f4543528194cec56597bda90c85391d22b87b3ff8f8064f5b4e506c69cb722804aaccbb13d3abde1f158a246a2d206a8b46715946ff5769cec6ea6defd061c3d47ea19c58bef8465cf79ae8e45b03e8d8b5c0360de5c1abb4d7af94ddb27f1a9c0c25a08adf225f7d80be341a195b4081fdb4f8d6e72e289a6251a4397837f4436aa133bc2c26838faae1f0f1bf6040f0de4962f93a6e72c0972acfa58860a2bb5b78bef913c57a8a7d30a6486f3010ae1d4ff442c14e9a075b5228ee3dd1fd89f0d5dc951ba61899594ec7d5b9e9fa71ac33060496ba43284711681498be793408daa73fa46961c3771a66b5bdae5f7bf74d651883b665400b0d8824eedcfc9164eeeccbcf8d69c3039abe9c6f53f4929ccd584406de90f272667b8179cd7c34058bb8d0a705826b590db2b922b708783bb28ff2f5f779e711dfe1e2422ddaf9364e99e9c07ae36c72af52265e0ecdb1c90958d3aa6533c6925cf3e14fde9ec598799aef793386bae6c64d1db3f004661c8d6fedf8b0679ff78b74d3e076936937c2b999f818cf11b655ef18f54e61ee34c6edad5bec71c14c797ef219842fc41fd7f15bad7e46594ff2e5007e09644f7c5df71c1c8ba0276cb3b9f3bd83f03f110ae204d5f2032d68a742d3e7b26e897512a6e49e57f3fd15a1f2b5aaf8d3ba4ddb5a3645119406c87571b61da0f70ad0ca0c9db0f8b7936ce92eae909e579876f39d9b9dd1dfe37447585f82c1a3785ecb93220bb51bf91c5819919659e7e4b5dd06a8e33de3517cee1dfc6695df15dd95935e9997ce0aac386eb76b2e6f02b7d266eb4b0ecaff3ec96da5782c7821076321bc9db6008688118e907687876c6c791c324a1823b36d95a24702597a109778cc6aafe3b95efb533d6b0649174a942c3f0091178f28d0e82c2a681e0e69b7e9ffaae9d3509fc8d8bcaf0ab528d71ecfbe240c288a25fd6a10934ff996c69c32972a410f10445b1abe021ac72e46269873077690e7def33c59a72eeff9f9aa10ce413ef3c4c40deda07a9f7d4a390863ff88c93eb2ebf36646c5a21d1076648493ca19cbc6bcc753d385643495270a0005d8aed107cca5c3dd971f4f409517b0e557cadf10535e2154e9c3dff92fc7679efa9ec0a0393592341498b7af4d56ca12bf4ccdc344bfc9404eae7380b3caa7906ecd9961d9d7c821b4f742d20612d08b37add18d1a778b27e5f7a1cc9061b8e1aa6c20ab8a49d11079995c55d4184a70d3066a6b055d44e86dde9db3d3b63fdb33b7d6940ec30fe0e5b0bb65c2f61bb6d811364c23af74a3db80a1cc8e33239e5e6c4b11203cd1b7e9d3963a729f63f696f63a4eed0389c2ab43dfbc1ec1417fe50c4e7cc2b67cf7d8c1c1b329e14257e09f63d72611caa04dddc317e4c55086bc14791e3db2e1339ecf2ce6c829498141318b316550bc51c8c76d4bf088fc1370caa7a11ab615d425324b45e092ab900bbbf48b17c0335ee2f8508ce45f5776dc3512b4ee5f098ed3b326c4e54b5fc61a6db415f822a036e2e1ffa16806bea3e0f2074bc7799e5cf302a3dd0b2af350a51b10a889542bb5c4987d6d923ca8302ca7c05bb27631fb058f1dc2b2acfa4a526148b553fb90b1305e43d2fd2d0460d06a0e990e50d27c0cf9045ac8645b6f4c38d32d0a5314d9c1c17fe3c22a0155e7d8f742df0d2532c58ee6f5797eb35ff1730fe6513222d0430c90a7e82be1faba2fabaef3415bd62df99501175cd7a5965838a1d3ca2d4c7713cf4fcdefdd6df102cac8ee679988788634d51052d0567b50e91982ce5fda6ba1b4fc446ea61afca9a232beed5344faeba4d770d7abd297d846ef70aa16369ff4a103049e17fa7b3334fc6dda4bcdb220817bb7e5d839d4644f4615c136cf3d64481c3e67eba0461980a87cb99e032f2bc56a4157ee66ee9cd4c2dc4293d1e71d9225f065219fe685f464156273b85b4fda6cb8dff1ebf72e349ebf714165e83059bf0ebffc180790174dce9322ccee791d08a10e190cf0e0c9116a5bcfa73386220aa0774ff11c618970221c6752c737b8333cf812d6f5abe9269ec4064b0a95a7d9550e1e14f37502fd8e54f9416a175ba1b3f6d2169765292f2004cc9b83dc1fbaa468b8b4a55040d96a83711e3feda76bfaea7542d8e509d360a4f457c3cdbc8cdc95b72fb18fbf235539491de9f00e481965182e0c6585d2c8efcd63966c1d6284ba2ec645f6cae3160afa88ce509c47db4754d403486f8726fc309e0e44379e6250844729c282f0e7866914a16eb912a1028349f39d58bf3b2c617ea0527c2cb8de63e39eac14259ec972dd9de44b2813ac8d3a7ed6e5a6db14c660c0f28574c44250e715b03bdff6b3588f567895f958272138e1c75c8cb16a55052f39e5406d0205fe8da479f124524ecf4549165901bd1848f1b132aec8b6a72690e756642b107c516953a4ce948469eada46927df7877256adb029b24560e5147023904ec49143b663a12477fc0970e0b0a597f65a51fe2ec973ceaa618aa37082ce5e1ba58917e559789a7e9cf7112c4142d00382e8272a12c28beea370806931b53d3400a7a2dcfd2f80fba2a731df79e3deb2c064adc280b20113dee1d1e912326825877b188f102d77b23f2922049e27cf50e4c6f7c2ddc75653bf66a55f22f0afc5f848e3e5b305a20990793edfc99163504d58630350f50f02f14373d282dc7bd2c5c194cfaaac0127c05dff63bd6ba2400d0343d5ea3f7da61cd230391a3b2580e3270c830ea5124b8080053fd4e20c086a40685b206c0cbee9772c71bae0b790b9e595e20132de1ef2a239918f2245e5de9ce0b05a9c4b112793634b8d0e1fc4d38a3023d144bbc84c96584a2672517968b91c9328ab07980194502423045fa4f15cd7bb111a6cfbbddb1c58f018d54f395a020c38135ef7c17a47021e83c91694fa7812d329f5c2132f025b5cf3d58c23e7cd8005e013c9c2ae131e3bb80f49aaca4afdb769032931a2a545ec43dd82523c013f414cb2730dec7a7bdc7b1a2f27ebf6d8c335ccadf5346d37e742fd06752a6d701db16825171b914357a91f1931c2b29ca3fede516c7352e4014d12ad112cd5740c6f75bac58d941cefb107247f5a97ddb918464102639969d741f040d2bcf656efe5a79ce59fb38c63b425261c619d5eb55e98eca498f50a3fcb196682de41ab53b93fddb6a6be50b2c986897ecf15d838ea236e3371039c50cd7fec6a2e1815b87891f05d8d30eec46434f65b7e51e4d5b2f06d42cd2663cda6fc90e21f44baf80e9dfea1b1641a86131689fe261d0a54422d241538d4956321afaa0b36a7285063a3d6a6e03aca058d59aea3fa0a2df1e5cf59e6da62b51e849890c789a973e3e6a21d670af12931656525c870d713f5cd495a3d53aad17108c8ca2b1e98cb7396ba1b794a85905346094be7763092e18ee4368b8cac7aae09c18e5671021d9d23f55020db8b91fe0bb5c5f5c62924d782d8574e16195d71f4b98d7b0a147249df532bf8d6d3ad000ad785da2b5577714f932fab9f9aee87bc578e40a6ee06aa9f77c4766bddb594f172754ea947599bb47c0cd9019e229b8b2e88e120cf5e4dc287cc4ac44097567798484466cc164bc7c7972271b30ff610f2e4aaba99d00e82406788e41800b1716f4f18a1f17b22e6cb0c6df78a90a173d18e7679300d83ae6d6078b43e5e7b67697bdc0a195fb59792ac06a875d75dcd80a8178c909a3077780d56729ca12da3f4d23db77e3893a97454073b45d56fce6d99700f233eca002bc05ff534a9969e2448bf3d307583e6d8512fbf93ff39eefda328ffcb56a5bb2ad27f8562499ae274975df1d8c54c23bfef4d1b3955927a06dbe8c7d05c204aeac45a84eaeefcd220d54d3530035b114d3638213881b82c64eeb93beb260cbc3d80755ff1773fe6926b00f344c4b2f7e12adbbe7e0a9e2a35d4ad0b12c96aa6333e1d184d08881ea9dc0cceca7f9c7991cc8f9fea451c8eaaabfddab84922031cad2b3bbb51f6d72609fe34123c8449112524fcd13558bfa59adf18f3189f78f211f94ca6206ab54a3ceb01e76111d573c29e0e9759b77b46f42ca7eb30bc6eaa197b7475473ec4dd715626f892cbdcf99546932d33c26156f10efab48b8964923532b844aa174dc60bafceaa68bda5bdf36d934b247d666d56eb01cb2c713383fa9e7249afaa0a185b8f48f928df4b774da312a473fa19cdf8a4923ad4b93fcf7666fd2d78129e4f4acf248e1d60917acd76aef1d8fbae9c0f4ff0a987b247541c2ea7b4373fdfdd00f9589f94e954df303de4e2ed6c3188c7b53b0203055f2e9745bde9866a9f7f77a928c401c0283366f795c01209b5d6335302a2228c44db18e101e9dcc14d1263ac81198644a16fcccf483b561bf79901d06baa01610264682473d1723e709afb10a66a27a6f36851f8690522307d64921dd0997915c518e8a33a9c25ec639d2709cc672ee69b44b1a4cfa00c44cf37c7aff0bee3c274815b0ecf26e472ba7e04a5f1a8b567fb7efa725e62863e6224e1ce5233c0e3b3ab64f1c7579b3d718fe050f0d84847e7bf54362586edada79c6d4d8a862e227cc9c2ed74df189bea103a889d7e35e1d9142b4f0a667bc1f1589600b1f9565397d83e65bab40df6df1dc4a225314a6ec227f286df9d5814b184cc5c511d899a5c721ee9fef0bbb16f424dfde034c2606ea35107f25c0ee3a5dc9a9391e16dda6c6768e5bbeef85dd4a98e7ba88c631680a7bf30b9da4677ca16547d5c26e967a834f1d805bad9c35b3960a562384a1e5eaa801dd800cf60cc6f927044fe8e5254b01426e24c4018dd68c4553bddf52a85d655fa6416472531f0d476a2fe55a24d5998849c2d482849845716219a612f8da88d834aa9f55af2cc127e4ef4957b7ce897f5ef207bb25544c3c64e026d5a1fa9f41d3dd84e4fd6331ca4161beaa3608b2d677f58b282c02be0278ab887a15cb51406992b1d2075c93596c91d221f4cb0a13bae7359ae37d0fe6c17c2218d17bd335d495791d38dc58619fd64cd915339064418ae769c95f3f1c226d361ba7fdd3c16c31bc96baf4024458100e8460cbe968ef609f06f2c7b8300d86aac58758be977141fbbc851a77d2d5ae4a7e30fceee7e5dc3519c3b1572c84e5ea1458d65bd25b5eb1eee450d6dafced0e69ad3c45f6afaab170b3b80489f67d969f4fe8ba564d84f7ed91e29d6c16ac4adf6b42562ed1fba43589ff13c8723fd8bb089dfcb290c0aec4580984e82b93027c22ad6fba5504b7da8325853a8a10673bb5871a758335be8461ed0f50970f13bb0925979aaa96b2309170f1d6743bbe341c88144b30d858c2f3b628dc2857c83631317012cfd17233f489524578207c70b2337239f42267afad39bebdfd3386ea1c79648c9a2c8e7df89e382373c2f64b1801658f421cf9e8f6370ece78099ccb46b8ce8bb97f1bcca8cbdde7b2544683f097a5f839e333fc53443364c85018f9a3198bc240fa7920cb3d14773b8ceceb8237a19ec60d9e41bf4e812c49b15ad76327cf9836a8aef0e172b97fcf033789c1b7f85b64b4be2dd0f54b8741afe69778cc843973d8da0e548114120dc9dabee1ca1481a49ad194d360108f7d35a272e17f9202cbfa3bc52c5c3491ed29f26ba6cbb2dbf099203ba817824bfba31eb13400d9be475b9ffc7361b576e72de9369a3ab5a6b9653bf2059858d90350c484ad9dd48fc8e75d0f0db7030a76b592dc072e64e13678559976e69dbb4cb22dddf6aec21aa129d1d78a4fc77d8ff28912364dc65d1857e1f218b7b76a3dec2277d9cf3f6b8855db6c6ff99fb67004f6055fc9e636a6424b0258fc4e18a817d731e53521feacc35304c06a50044ecba456ddd46c604a3efb41ab040ccd84faaab9e248249ad3af5754ffd1d84254b0132764b10bd5fe63e0ebd3b044d057417e2b1793d0450f1f3d3d0f321b8c55b32d073fc72178d49d78b562f0d7387ebdf0f775e55bda8901145f5bd692f85b3444f8226cbeaaaf850a1c30fff2a944be9fb386c4bded319ee2042459955d95a13fe58d8b4e67a6dc5cbde86df979e86cc995099234e30466f4c771b872ba4498d49c0e2489cfcd395581dde8f18a235b9cf7f0c7ede45f9c1e0bf8d937ce9a8e6b72dd261ab4ebc674cf2a013181d551a601cc7c45ff97d6c37838d217ff7366bb19b09c0bc86a33abf27d7c57e1a22aee95150e5cda03dfc95a7ad44ab418d8909c45e7a99001fea5c0684a1df2da2e914adcaa9986ffa70db5bc89404dfc5fe8199ecee3e94e623289d1cca18b173daa704117cf7a9cca899e1b6d1caadb5d928a865470723516d5015ced9f0ea6b50bea3a15e34586b07b185428c1da664185859b5a9e891128e96a7b5677951bd3f6f92d6a027af2d55db559a8827a87896407f939992d5a08b1c7355f788f5aed8574d22dee5c269e79b2f3fca7cb6f10333d623aa788d723f29c93ae14ac8275ef032d09b0ebe6785a47c1b6e5f505bc3b78854a91d040f731410f9d2c51d02a59c9b64103cdf1033ffd553affcbf0dc3918297be1b2ec29150d4b5bb4fbe5532a35f580f2bb429aea6f06775990c5473b17b5e5776b42b0e2b19f9bbe0b006bef95b58194fb7368ded2eae07687e71fb7c98de6ef158478d6b839ea4ea3968687c1637e0d65316164ffab4d7f6997e26316c6ff0d12e6c2ef9264cfe496d9a96591738a14f16de644f33f4bd4f8bb74ffae605470e41305bb6f797ba447c0bbd8c8087d29114d4d7579c86efbb697de81d40dd15340b8c7686679d314ab454ebe57cd39b9a7da6d04365ec1085f9026550d2a0e5a59910dd49e23608a0001555284eddb22a40c4c2ba9b34e406e4bc33d66a3d131410899931458b6d077404769b90b0412563be4f87ecb401991833ad1873d7faa9e1b76e026469a3daaf37b23d40387fa65d292bd025d32011ab4301a4b47bae1396a66e1ca83ff94a4fe53a442a2947ac7cbd4208b57d5c8dda38d80cc284e8167dea359af02609cebf93a9a3a627af95ab8f34dc7061e2d03f65dfbbe314171a4a0c616bac50d5c3d9df4ba055c6490f23647bd8d1af71c7153921fb4b717ef99618b66df9306524cd2905bb0e1d67407f175df3354e1ef85fbfe69b3ac980640d2ef90e64a155b781464193f2f34e64b194ab3bc3ec88c33de532752925f1d89a1dae0586778ea28bcbf3a27392def6352600b396de4c05f069c8d80bd27de7608c789ca26aeb27c56c2a4e7dc6cc1edacb9dd25de24e13674661e311bec75039f80b2bf233a6d08fd4c526e0b18512fbcafe4a4936409493fae43260a8af9434a3f466540f1435a99966e487b5b35dfd2c14cb630c8380428edbae10e959f76b8de66c394c4f200fd741d8db725b7525dc5c254a994ac1a2a18deb56ca0aa77d7ad7fed636bb98182a92d18f09a5f4f16822cf4cbce27fb7b68152e1df9ae1b60d3814be67f00342d40a334169cd131c60e23421ced2840eb79b33020b10768222e5eacd35642250bd15f2fed9ea197fabce5238bd71422176d0eaeec600288ad8bc15dd895aead4c2ef7d60937a08bf4ff32741a41865874a7b1f49caec8c43e1f783aa95230f2365d46cf7b94ab0da87b0d0ccae09c54c2636f389820bc26c4ce7a136b5a2bd2be9a63b16690d5d97d0e44a034280581f0e36e15f7c79e49814f877620d870e22f732e8a24f9695cb44983dc19fb8a09d796855b083de4b3b972310f874cceaf12fa0aabf1b78c97791bf6d172fa9b83893b51e97d57bba5f758b58fabf7b484c2f42da35b1cd2c1c6d1860a3585677a99cc998fb6731648afb6f06588f1ebd82c5e4ff6b537558ead50a695f84525720ddfbb0e00e25a4269fb2c7fb17f2109514744a67a142465f38f9db0bbe7176d640b1d8210dd6afb309faa6f9aa098ff0fde6c73023fd3788c7026288f66f40ec66ffb27afc32d67f0d5dc6f5c02b3969b81e5b0911dbae83f02800120a1aafa67b2ecf3fd2e6df99ad0d57b4b74968834e61faaf11d9f98d26c8dfa9d3ff49f4eff495559b07ee9d07f7f497727fec8fc50742db931b9a071d2cfeb62b20108b668398974c1e96ec453bf371a8267b6204ca7265628edce51f9ca27eefb4dc498ee0f174bcb118475a19b017f2b5f6e844f3e02459d029c34ff11be5e45495edc3807e67aa95d0175dfee7a3517edd44e888add04a397799f0b055fc131b927b4970241f34feeaa9fee7aa10dac418217f3f8e0320d247e2b616b375c67e30e99af9f02c90cc7303d819ef8ec2fa66a7515efe3bf18c91608d1a436c0d34164dc624fcd0cb32eaf0a265d4e290eb922bde8b2866acc1e6bd3e7e1be0f10df8dde387c3d6a5d636a8a5bf25927817f1fa5459fa3a4fd87df107cbcd28ebb3ab3bcbef971c3458ee6fd25c5caeb9bcc8074af37195139e1358186e42d7e8c5d8a531bbc2bac88574955309983d0db1b5da166498beda448b307aa496177a638bee9199ccec11b1052e77bb5b7613f80ff187e8797ac94634f2f4eb7cf0f7bb00c5683bed15ea003becef32ddafc43640b2405cc40db2bfa0d35ef1605066317e5794fec284603fe2f10bd7d734283e5e2d489a8b58184a02a49dc61c2b9fb41eeea5378b8acab4138bb626dd75578b1d09815f150d4ad60f3a648d6de1ab0b73d85e2c0101dcdca1b16320dfd11768030a3a46f26af666c79db0814ad732eabf347704eb92ffeceb1368b228424dc0f1eac5e37997fbc013fcdb5f4ba70982c0eb9af74c83f622730c5d480a45df17d7283f30be3ad462df767f4260dbaae78aaefc6bfce70a4cb4424761c200e0f1dbedce0431fa16c356ac79cf0616daf74d1ba78464a1dfffa1cf63f74ebeb21b5aa6d2b22f9e2e6f93910c53a29b1fe157893a9b55fab661261096a3bf252ab2720af6e260a1609433c7357738fbeec543d856dc85ee9a3bfbd8ac050a29f034f74041b1508bd5935e6062ce0b28a9a82a7610448f27a8cf48fff7c3b7213fe509a3f1983ea8a230d91c2995cde6ca565c715edc71e11926707f4c5dbb61651896e329daaeb1dce35eaa3b8293ce1f98ba8422995066303c9c34a599f4344016b3d8cd52fc0d2fe8f1f2d641160f31ec6212235678bd59b1e4fb7873ea43888a2890fe5b2caa082802e74f5877c20dfaadf8a4504557dbe2c0a2e9d9a0f56bcfc6bbcc88f3bc08fda8edbb55f54ba502c53097df41c76de998090c4167ac6999185df6b64bb21d8f106b390af094b94dbc6759b44e39a219e1a341eb241f6a3cd06659f6da231d34c475e860b9b7bf7e386af8e48959a325cff0b75c9b6f74072291883ede0c231ba606fb19038caa8665d13c26e3f1186681e85fb6e4a1e6dc6662c481997647c5a3f377c24e7ed9a0b8e46fea92998c0475317d8fdf3c294d4e36d0004bc425438c91e3bd5062abd55b03f5c429b1d2d57aa9ed1fd1e768144f9a2598d2072d2a846d6240f85fc1de000e5f6aa49639bb8b83e02bf0dfded9d29bcd904ee4e69efe95afb171ce01e7288cfdfb35dfe79f7b759132f66e7cb6448a8ac4a20ccae6baa69cfdfd7fdc799789a269f9e7f022524fd53c656dd6f71e37e6f94f6964e72340e775351e96d4e7949c44b51536d6fc263f00e2a34908e8d8df21d363710b6a9f9c92c85f25f2f282fdaabd87cf2fb0d2df946a3d0b820372bb06cad6b9e6d15d87f2c553f3cfc822cc0bb191a7205051a7ca4929d8373ff681bfc254df119fec0ac09db818b1fcb714490ba3250ce41df6768c971dacf5d2d6cdd458c4a505fa8321c45fefaf086b067afac167a27e159e3fc3d44b0781ce0a890ae3a0de292db7728310a3bc89ac63a01ad1032eede78c610e8ad191ff88c508cb174d6a9e7d8e4b448d48fa0f53ecf89037e5f737de6597c92169a184e58e9789a1ab5fb94fc53600350c21ad5b3f14255d41565863461a9e84d0c21ab09a1770fdb16792e1233d5164d80d5ce19be92b2cd3c571c6d588cf2596b48aca7a7d3e6e22863b88a1c2c65532f55dcf6ab58e3e2cd7d1038f687f27111a5c03dd9265413d9975a242aa84b2cafb2f9e860a530b9575b4765ea061e65c60b94aa7848c614d5231ba12b2ce2f4ac20b25bb7edda21a40439a89056d049f58722e166ea7cd34eabce5eeb44c7c3541c4f1caebd22a65d504db1591a96d45b4a50462535625eeb37bc0b30db7b8d7f7080e22a5a3a0b8fa4446dfa605b7870c8f195f5fca354f5e4d384a19b32e88bf58766184a41b61b066d026143eb429f7d8412064d0e63e66ed85f2a8b786130e3ba87134064f80c5b037fd88a57fd7bfa2991a8998a004ed518af6bc35110e7e0ca4eaa67980c45c8e06a0478a9299a33a19f3b0d6d39da424b357fa6cc4d46f4a857a9dbdcffaf0b9988eb498be556768232655605fcb233f642843fae843c0fd45cbfc25f0507d93caa76990a880c43588fb7709d3d63a417024e31ad4e56b6a08dda218d03a117910d3890b1b9b4ee9841e85a4215912411af907456607ce471061203b6aed9b594cbb0e9ad9f20680a6d615168cbaf16cb2667905a8544ec83945a230462c8d6714fad77a48f0aa8f7830fa05ed2f276c70c43922dbb0fdeebc94ed6f021be54b91e827d545027e75f9b3b1a761b4ec93c3f7098ae8d9d21ab3382cd4f8ba5454ac92a847b3d78ec8ad3d43dd4c950bca23c41d8df1af648af2318a04d1e8ae4900910eaeaa05716b68a9fb9948022916794b5dd4b880859eb38d30ee3514df383da2b051b65f0c09ab969f8c897c3120f434033528432da2274368be2f55ddbf5356e54b4b8222b5f53ebcaa1de9aa51a60dc5e3d4260661aa101a94bb0911e18b52232b917f2faff3cc78bc7019d2ba2df909286b8bc2da25922d2d43e5ab3b6381f6dad3a28f563aaf9a34dbe251837276cfa4bff2d526f45299316a0e2980af9c5e77a88489038993b2110c442cd44e193d816c3237c02f6cf3fc0e5874659b774c99875d8e9cc5070933d33644ca53b37f5aaf551a335d1ac9abe0d772afe8724efc96e317ef34f4a281b20753d98039d5939b714d365d823b6cf22a08a44c860e7b3165e8a6f6c05e98207ae180cd1abec8a751bbb0b9a5dc703e08dcb0a7202661eec524e14e4939b8c83576bd77eb7610988f0ce273f2172e6cab37fc20b3c6bd34262aa028713d3c10cd5ab3093843a622487f6f905b6860ef6295ec8d241ae3b7c7b5973fadae84ba569b112d0b15256064f01de6382c71f0416e06d20eaf35de2870e1cc49f181112cda447e40783bf22c456bb92d7134ac47d60ce7bcd89303a734e825de5e5c5cb3a8b8de1248e45cd5ccd27a5ba8b26625bb9d891200b6b6e5933e6c50a0522cb0e7cde51b27874a96c56de86b276a4c97273a69ca15861d9d6d6a35b34c9bff2cba005ca60f56be65aa9a4bbeed9022ca8748aac15bddf56547c13a976e7f53274a4cdf15567dd99e5026f82263ecc15b2f9018bdb0747d7279d76bfaf83babae2ab9befdee68dd501b0f82b9db7fc32e27c77e81dffd5d6276bde9a8bf819726ce8cf4cf29b62ad45d6a320341ac44f8606be68daec7efdd7dcb34441a542cc5d9200f04982387ba62ee4d6f974e83321ae777db8a10be7c2ff3dffcf372b6704bb0b383a1f3de7f08d6121f0816018ab0dbc3fd6f4716b2e057ef8c77601ccdfb9b98f2e6a9267a153d9d07155515771256f8939e37370d23ac333154573e971e1bf990d9153fdbed814d14c6ebcf15fa44c27f430eca32d93007edcfdd39744ccf6e2c0488fb95e3c8fa9c10a2ae46e5d811543e09c6f5f2e83755ed940d4fb571cb32a61255cf6058d18de1f76868cbacfb04ec0cda424c668f8c2b51c74e5314d31f010783eed21cc0f7df9996a8d81651f5563447d6bf4c08f200410e2cae80e883ca3797fef862aceadddf0601c27797a5452a24ed5b617690ae1d92aaceb17f6543d34db020eafa082eaba20fe647cc42ddf2ff63aa72cf59d3364cb744fe7c48703c31405f7e68ecf46e6b8b4416dce84489574daec88599b449a3ddff7301b8b935cccee51238f27746d3d69db80d164054c5c2c9dec0a479ef0ed24823c2d1e8b00512fd5a6d778b1665a0ea2ddcd5bf0a1a9800f6f33848e63d2e73a89a0076e159954448ee8b272bff0bfca14da4b21861697c393a65a7e76200de843787161600c13b6d930aa8aabe2a927b075deaa086d4d753f6b5feaa2214e410a66cb9d651047c2038ce857294e4700153fb1798bc62a17899e03a4f7b4944a8edf63e3a4f0a5b20232c5f31afe8cc3e322fbf081385a6e9c2cebd7f66203e50dbcf009e2cad9ed3d4455b74b5ba5a36f5464c124390dc1d41466cba7822b68a5f2ff267214740bf748eb57dc8ed5287bd40b028a72fd66f6fddd2beaa69c530131c2b73e6e8a30fb31004f6b9f074caefb2e61ebf4e2d54c1d1c205de729bc12a54b6285a8a749a29d54f90e76d088b9a254d755a39f3dc1c4b0b1b783e3ddd7cb81acd76c2c7709364fca710018072fddb09c6893e24478fe3bc3d9fa7113e76b8af5c7f4b188d7d7a4f35cc2e1da32473a83efcbe83e505547d5d4af6882e3a103ef721c0e7fcb2b7ebc52d08431730eec387f515138b889a07e47455f96bc1992aca4a3cd3fb5776229a7860f00d2e591433e33f00a4e70ea770efcace84478aa6194d326eb531b798d5c8901a9ef3c294e487f0d828e9995e2eaf04ffc8bb7d3452219f9b3b3b4db567a63178cd173dc5f0321c0df88b95fd64bd0ea7cff525a1c2359852475910c42fd46b793d2718d6554adf30fe1b0247ad920dc9aff336809ec4c458d4e6037f1af5bccaeb882148203489b8606dde614f7a90ff6f093dd99c923d2f2ae3efd1229d107e23c2e38882352db7dfbddae7619bcddbbbfc7e2b932a28b4fdbed6b5ea398ca1271fbdc2374cf126197b04e8a505be7f4d4e24e0e3555e20e61638fa9d7406ea5246bd816ff1daaf3bc7e8fc102cf18ec7f82c6ffee8e1d14f2959824405a8ee2acb82a4650bb403830a8bb12d4f6bac3ed3992aa4da98a413dcac314244b9301344bc6ad75b69def2230ad58b038b68c742d0a3ec0e858cbd60080db60cd9af8a7c596908909924a3079c6be24a498014e1d9921435c2d0a665694413bc746ef49ea1394f71d09b7c5cfd7344ff7e835a1009a4f0b2be8f152b8838aa95d008dcd1afb60e91b879709a48ef428f0d79b81faf41b9deebfa14006c0a84a8e82e31dc3e8cd5d8b86e15514cc4ba1fd4f36c9684a4d6b881aa5f6472a380a2a159fc7d84d41534cf2f5b4670940bb52d856a6eacc7dee7b1bb10e74e8b909008c7578319f004894c33005207eaf8edaf2a28a44b4907b485258575031b5736f68453cdff8b582fc0fb7d69554a47b61b349ce42e24e3b0a8dce2ff609b977178ec2a0247f4a9eceedd261ad733436859f724a232f1c55615b7a35c0186a8ac20b09d180b9796b7f2d5aefda6aa666da67284e25b56b9a2af983f671d1404bbe5a8bba5ae8b240b01088ede6735fba2937b2f07d03b1fea6d02694cc2e81ac3b1637c6679152317a4fd3420b61410b4856baba6fee8960ddf4119771b2c5b3cd9443531c7959aa375cd21b7e0d0e58c43f6a00ca2e0a581553ae6cea2838cd1b6cf06c1833be333ec7e02674adf4c79f9e4593c5e5317c33eb01905c96729f369117611f3a07ce653d1e0738d6c3cf146e85063a0003dee41d75d86332ad8c63380fc43bb2d6cb00d70f4c269a56bc670b020048df06bb38606cc9cb28d36c499469e66d31417de3220f43f092d7fd610081cc06f5b28ecb0c441144dbbcaa516df0cfebd110106ead19ff0ec2531bdd431bd5ac4618bb76b5a1d608f8be8413827bed3e3a7e83f2306789e423cacf9780f7017e1506cb5d5d8e2232b26d1fed4743cba3e59c0e94b51365d34eae6e164500b4133e143990d33b77dea345475cf14bb90416593105f921143748670b4e41f544b1541d54c0e74fb1ff693d991e0880614470d1f0025b6d970997b4bea2146539b0f560db8340407ac590e29f4fee2d52127e80898c88ecb6d39d0c4e2a3789ed695d62f5401c64e3816db94b34ab79e394cc963ff2ce03bcc91da7ee794cd76408f6ac2b361b78fb1a4fd0142dd3ef9f9165b6b14bfa038ebc29a78968268ee6046864cae22523b8bd8b421a6568cbbc09dd7ffe24e40c7b7514dd6c5469c8646b996f125d359576424cfe4cc613537ba9e742e2a0449b6309d742d6e2d013cad97e5d9fb95055c7ecce6c2f58fd36f6b1791317779426f065f7275d2dfd8d7d7f9dac67a9a78cc46247c44eb0a087bad58af60f22bc810436af5bf77598db004aae45510818b7661c1c08f77f38c92e648ae064ae8dfb128312e27991c17dc9b89f6cf0598241c27379b72184f3f8f7bc4b4172a55e0e462a5aaf09653dfcab8a64f6d3750433191a1895034f59b297f112790c591376f14ebed56093aef3a111b21752ce297a3c8e93b460bc5a72c2b8127a1dab74d86e167d97f3c34690b55af8a72f4303a33e81e1a2410f6c7884da13d6babfa1deb378225e5991368ddf7eb4e2543937c7e7d5e74f77cda738574e91e718f14cf31ee1b75b1c8b9e8bdacd8da417d11b6280a8175f505ef1fae2a7a83ad886d4bb2b0f553d5e2a36c0a3cd38de3905f6ae52ab2b4085c14004e9e2550edc0a1c0b92d03870c628f4d853ee7ec7819e973a8f0f24c74d0f689d12e1ae579357fd7ab7a683aecfd6af145a4c16cc5ae3990600deef88f4cf3e2c2acdb24a3e6324764617636f584bd9e6ff5a6f8bf85ad9c272ce93c129332e14262e9e1c8ddffd60e96f6c8d75302b95abe75f76aef38211accf4e8ae14a216d9c37317d503e405fa1220c290e09cedf9c2a15d8d7d96334ec4aa10612b5aade058024d24582060bd11624401a86f57d67f023a5590cd0f6e75916112e997bb16b31c26b4d550cf3d170f6f5206c0e5105a0c3cbff920f569226d92d9031ed5cb7d08f08ba1a89bcf4419c377c2b36dc784d27db113e4bbc54afd55fca0c3fc72dc550bd4578d6b3b1c2876a6be5e1bd054f0c079b9414947438de120a01d4545979cf827d24c40e47e37a6384057e018c6ef7686fedb5a2fa948fb4fc704480fb39fb15d39534b058adc821726fd41f6ded08c0940acc8785d261de6dd36c20e5873689da7f51e21ab4763ae9c39de75dd6934b7f4f02619559aad997391a1507fbb9a049b820ee45ef3616d2734de7a911a182c9aadcbc980df4ce833835b4d8a0a84be45e5f2d36643144c6e93cc17ad164b1c1599c66c24e7d06b696772a81daff44b8f3d49af96e7d7a0a25868e809c0b11d424c39d5752763194d1c51584864bcf1bd5b61a781ef1b578ac6809d75474af0c2682c1447e68308f7c8ccfb15f15cc93af5a51a89e59b5e3b96abec2a0ffc956cfeac1f5416df5451eac059ff3e47cb1400f548c30a936390db3d5418e2f6251f48f31286a7a9e8586997978598feffa0a9b88bd72e6e6e79f5e15175c4988f5c3764690c850b5c7febcd960e263ccc06bec351f4f85dc3a27d5871af068e8a9b2c5f74e3b4e23311686993aee60a67b7f809644220ade4fcd61d4bb8384c2fb782acc76936f8727d67845246abb070759da64ac1c69fb19836be0dfe7c2e2640021316ccc1796fce6ddfb2b6cbfb3c173f218cb0afa937653db2ffb639c29739bc96ea9690bff8fb9641d5fec8426df8511b9a8bc2b8fc49da165f3c54be359d62aaf17e7ea7612a86c0dcda093ab71831a9953e8a4bdca7e77b714a463b0fc259b09d56936dc9d3fea2eb9ca3c518bfbb941751b45add0e8d14e8213a4f4b01fb3c783493ad14df6fc2fe75696c348d48fd2991e0553528bebeeb556e2634c251962a3bb0d5f8ed1b0d38447d8fcf97e16a5020f2214a72c663f6521e6219dc9fdc589a9614e85571a9e6e088a509fde4726e7629836147fd6eba4f3285c4269acca1ea1dbec23cfa9b749aa4199f7d3b21b3ce0f7078ecc4f91d890da824a1447a8fc139f878b5647881ef9dd4f2fd06ab11343f96483bbda1fa0ac3e62bd32a6e191d36cea4f3b2731a13604fbfc64e7e6af80629b0571018c3467a1999d777cafb1a72e5511d4343d5411d520709de5ec2aab0aa7e53292982e990bdb5064825bfa5f4459114818b1c23da717a5ef079fc19242dbb2a73b707e5625862314122d5fbaa10eb4e422bbeacbf75e8ce8d7ac8d03f648db4227643b2bc8dfff37aa4068689e2d9bfccfb3e40c7217b22d5dde7d07a5d648377477338a344989f34e4f9ac0b28a4a75c1271a020c82249e3d0e24ed02df22def25ded9c1f320cb394dae38b31cf95f7099f9f6526d173b17855ac3e966c274b8a8c2dc4a112281b02b3bcd15bb6df9ef85a14442993b9b56e0d19a5090a4bf233d818ffde2f3147b15276510dad74784be46318754dbd186407e0444d0a2940f449060fdfb5e28b5c410eb612be667e624489bc03c967d472e439be0eb1ead5dd149e4285da8d652891312f3f66f3993783c0cb974d23fa48a29ebd73b2604bea94900bccbf9485c2ed4ba219552da7d78a4b059e8a7469f97ed67007a4a9c6519ad1af7ddaee28d058b1a4fae4a0805795ca6c469c5f1b7dedd05407a5a0646f992e6d6d4eab6c7d6b2d62b86af74692c2f9ddb66d8dba69bc95733c8a5adbf562d5b84cea7dd5890a3e7534c563564d3d3bed2c2eae19aef231acec2460454ea9c9f37dd20e7a220f1000c397273f7a96d2d8a0b42f3ab3bc1f8e10c158f0d2c4d428758aa72ad25d8f02ba8a7348a7100e7120134def988d4e5963470dd61b1f361e72932032d9204c51ee4ce9bfd3bc34f0f00fe1b55aa3a24ebe0ed83c0ab98d0cc9e286819f8ab9a3c19c64b1ddd83ec0062d8c9a2e91eb5ca67801dd90bf3dcc9fb71e959c20ff90cfb884b2ee9a8ebebe7e9f941c7bb4f3cc029000da51d37432a4b40f71d9dac544a025c3868b67fa2138f631c6215e6e9bd2d1669b379eebb83e512297f600b2e1632c58ef57bb71d33e3901b9ca61c00445a03f09c8b42842e4ba7eaec8975003b48046e844183f2582e4cbb08a678a310c4eaee66fda886e69ef4cde44c030b286b1d61207e12a8049fdff7ae6b7e6dfd7a79aad1020db3bcc60bd9148c77bdc5afe3b5d20c3e550add1656195dde8b36a011a9b43211a642d20c0d39bca249678713be83724e240033bb8f3ed9bc02b7f759400139b87d293537dda97de1dcc656dc67bf72943c108469b3b5a66a11ba1affa84e2187d47ad1b136212ff745eb8786b48c681346000ad9a628f07b487d93497bdacb986462ed9d354cad10d8fa9ba00d3f7dc515d4e71e5b3e11cb27b51370950e66e9e2169d092b1e93b2730830289fe93d99266e936b487fb3425b60e92d7437ab296ec5c93edd1d3fd0f992f5c4c5c13ac236b8d7295bfb556895e7458aa5dea5562d7b0a6028ece02b68ed6de36aba2a88c0fd1d774338384d9a354c61619148a94bf82ff1d7bce2cc500fa9ed4c2d466a4111e55a10824513bacff5e4bb9ae19f5cdb0818299f8ee3eabb72abc4e1e8a84f5315499df62d2daf8066f3d11e936ee5e4d2d4b865e788378cec6b1b6d3439000eb2997878dc60c1d7af1b61896f514389cea813cb1dd19c4239faa3b857a79a833d7914a6871e89c7977638083b02cb2155265f01c320c8b43fa325526fa792e9a852bbacb86d6c08856bf16884006aa7058977578623824e1172e268ddfedbe59fe7352e68a37ab4d81d309abda716afdb0c2413b5b476bcf0ee41cd620d78e1b0c23854b8fe9f47b93c129f0fffd7f0fdca514a67cea80019fb6a371e926cff4a3561c721dd05dcfbaf6798dcabd55e619ee7f9ad4addf1fc8bb5548ebde0d832031fe0eaef3b5143e3c65b37bd96bb6397096ca063df7c730a81402a6e80af8310b82fa82dac3a536e8e7db788501d57991179e32b1f57fa24af98aeb62b7ae634f2d454b5e31aa0b8c389182cb2840942832b7f5554276c15bc944c4c9515edcd20365cf6e0824c394ca2295c3ffd8bc7f311ed55bd7370cba121469bb2e909d0ffce1f5446e2143e75ebc3815773b0048295ad91b06f248687054f2711de00924d16014149707e0b9852a5dbf5b767b9b3a3e5d939ade10ae8059cbd37210106c4689fe5e7c3bd85ca0fb07a7ba74d837920dc01769e6bf737f3eed4be5f563ee9d2706f5f99832309a096181b93b6f710f51e4bf756fe2ddeb55062cc1e62245db4ba04901811a6fe0e551a5eaf647039b15caac58217a63fc83a3b3c0388a8639bea91fad372719ac13844f0c8912e4b15f68515084825e8c24ea438a648f87e45922933539039e13ff6440e47391db6459aebcddf63aafafc58257fc8c0c42adea4d39f5c3804ecd6aa03a5fff16fd31935b903c7e6d2efd79b23d5eee6b06db36fe5d9249c2b9c6b72ae642fca567b3c2c04e3c6080f84f4e3135c7c00f2fbfbb05779b48ab38e3e87c91f40bcd6e84bd9ce4a9074ca7cbf045c64035aa33e479f48bf89ef8e7b6a350f807ae7aee4139937eec9c546abc7c1351a5ecc9d405786332df27583f6daba1fb0ffbcc5ef5d90017dd7270131ce7986addbe221b81d3a16d506faa833a1a20bf8b95475d61a884de26cf8685e26cb592914ddedee5c3ff4e4f924dc8ffe74b45e7dfe6bf38826212567d2e385f69f2d068caf3eaedc75041cb9601f6c3ed3bcce9e085051a6d4f299436b2d9b49de0feed5db9a3977a695c95fdb65c23c25c6c480d4eb19396e4d5b227740c9b4d47832d81ffeb6462b08b7936c55d1638a9c60655348b2506e6a33b0aed31e1d514ee93660f5986d2d2d345ff404d537646ae829af834eabcee2880502f360045082062f8680b2c08a6c32f01b9d45a69b5dd30ca79aadf0f002b39cb7902e5f1f23456ae3024199d5bf871d8408fcbd8dd5b0d6e233819ad7777699264adf414d2e19fef8fe2222075db02fa50730b19958039da9982d5005c8ccb1acddedd1fa2468417bacd1953ef3a4dc0082f315fb0bb1ce756c7b5230fc008b1b86c1232644a6c2cc924ae764f1d3c792bf4291de84ffae56d40edf16862e2f3c47f47e24352e58f85e8ee2252c1c38f44332e46b8eaf2f3663c5ede8be5976d8cc1919598cfe622f2630a6cef7e3ed12beee8b79e59a9eecc02f84513b83d16b448b6396d1e670c0fa25631ea9e80bbb0ecd599a33ad9ca4b165a59f6266f50cf1fe9e3033551a5f73465797103f8bc48570537e6d13c6a085e4c97c69991bc2ae69632ee3248240f545b6b550abdcebd06e7ec972861324ffbbcf925077f77e94f77b98c3a17b72163fd9de9b36df2fb1c6eb0be53c9a5316b7d76a4a68c06a1eb1aea1f8ec47707351e7ddff27b6d9ed5cdd9df9679e7d7a138ebba20e6590f47140979121521df1deab83660145fb61d30ca48b1e6f3b7b4e2788f4d0e7317e6b67852e458c4a1e5d9f9179a595ed05d8f147c0dd23f27104b4f693fc875e9053dee5a1657d98fec894e3137dad9fcf35c0308e5b57ae1462997a25007310e61598565f55ef8581ff533464886da5363ccf2d04fbfcada13811fb87cb1445d1d196f5c9384754eb0fa7b1410703f07de5a72bd16de60d8bdd8506648463ef6808292b9f0665f3e3d94ede52b9c0ca8dae8da6d71ba2725d49043c36b60c19047de87d4d08bb514c231b1d3f54889b6577068473cec8ebcf6682524817c997cf0b75fe87664bdab370280cd3f4f49fc002b76b0db7fdac23a234c1d6975edfe3f2e942743e433296bb1b7f79989b2f12ea16c36a7e453020d5d12463628ddd58b73a25cefd24fd85d56a66bb21aa03f02202f9452198c51b7e104a93a512b1b2931916fc29fcd25bbd7a8797e2a1921c3e8f63af2f1427f0bb9008d6c8792622f695bae0b4603d3b7c3c2787466885f26d29f8dc2fc0edcdda39fb1e5a7ea2e27899e02879e272816a8cf8530bf7b7447564aed2d415bdf50d32cb9ac87adebbaf883af510bce320156fc80fa77cd97b5ffe3e87f5ce375a971b15df3a625a5398c5a2387e939480aeb4df772e3ea414971d1b591c0b2132c917356b4eaa01e2489783da7b96d5d4e1cae6c3c4878bc7e61575ba3b79738ceab5914794c7fe963d0336001d6512bf808f7a183128a6afd89b3b9d5a79a27fddf99ca6424b0c1eb80ab01f3124eeada14bfd330546001021d6a6cc4fc7080c62226f403cec082269b83ce1c9468ec81ab200411f81c2620f7e14d7ef08fef3b96dc1fd2c5b4c2c92bbae8e62d502719d654dc859e7fe869ba9264adca0ef7a2d60e4f0d46181d24e9e6fd3eac57a728d49a8a91ed2293ecc7ded8f10821d59cd7bf496202a58b48a1c6e486004b8d0266dbabff41170084b7a16c50446266c6a599dbf027d31d2939ecc9b920a3d2bdf4e62fe099f06ccb1213f8c51e9ac2ba734530d5713908f59c235097de99a2370837f7bb63dcd9cd46274b6b57fccf53e489094c9d68484c659e26623406d5ade72c5eb33ae5b4583d7cc7c456d35eab0ec0e42b15da5b52f494247d6182b1be9ac557d8b8b0a6ed3359747d15b662f3d1c2a074c061e21c29a42b016268e67a60cc4ba09094eee9a0e28f2bd3356321a0cc30ab884803475f21a9a15372f889f3b9193b90957f5bcabc681d8d3e1dcc32939e5fbebf1e975a2acb1e10f1a4e1df81af2cd1618abc40d396cfc51971cc24a21ed301c1668d3551b1f4a9515adbe4efdd56c940582f5bb49b95eb140794cfc2138c48da09b2b5bcda0c2e1e15b25be827b67f847596bb93d6884cda6baea3b5b6cbf243dca979bf2281c9f83aebbe8cbfd75589514e269e06773627c365e4fce1d87d520198fab5ac4006f1d8eef5be1942998c98a73618c5b7c92212dd35d50605d3ee4000ba8bcea24c355a8fb973167c1ad0c6c70568168c0398a54c8de676189d18e353877cf30b531353aba18925eee0846963a14564cadbd03e7a7a909107527ca417f6cdee55049e567c8951cba96685b363fca60914be175fe656fc3d1491c0f16b62c2b2bdb84a4cd0e074aa9325c52a45c499c21d58dc5d2de5fd95e84e4f46517b5f74fb9fa1615a7f90d69a14ec13e9f0f686fc3a3cfae3faf38457e63a6f5e0dbe565702ac4e247fd7e8aa2becd0e355abf7bb1d18c19be97abeb0b1e5ba88007d752cb876fe63359570123ef6c73de885ead77accb4c882760c65a8c187f58ff783fb5d6f82a550eb228e6a7a95bd9f1e962c471953f1410e6ab1d329bd7559e04ee035b774017897e3a4db5e172e0d137db679d4e2476aed8355c8290efea0671f4268fd686689924b39d7419cc8d72e259f1d92c4ecf7c82219e5d8342a2eae3372d9344f08f92abea47cb642578e3461d190b9459e1dcfc55bd48b8c29ff945fe80554cf908059d9b5ff599bb1908bfdc0cbe7b4bcf2e758d9545d509caff076c2f7f3bc97262febfbf07aed3ce54ca29cf0da68f6583f6f09e4050947ac3bdd661046931b6e12684d713af1b403b355e46f7fcfdd31502595926d7f0a89da32986b0b7b8e13a7b7b5d397338f797bc27f01844651fa61c8f4200825d618289a190e13b8687882c3d3e36414911c18fc86ade22932f0d54c4ba2144069edd0fa1855b16ee046c3848cbd79a472670ec1f769d4d34982222e5627a3ab0e0918264cd43e09606a51a1417f5e52260786690c36285f00096d704f078588a94c17c96ef8fd6e82e57f0aefc01de8f0b0970b14a809037a1f8795285b02a61d4f761d8c4d6c2f6f229ca8b5f5a77ef929b301fbcd64a7351c78a1d35fcac56fee1aa9c4890495fe8a1623f5cadd56d7b9afa3d4cb124c5bc6801b746009f9f5e047808ee6481878b42d7ce130f9e5fe99cb46eaaddec092211facee6edad53a770c87bd79e7823c9814bf1127c03bc7f81ec61ae8f19c57e886d0008c4c07b23d382eed2bc2e140327e95e276574a0c733de7d82dee38f8f14d718def9502bb190f7681cd1a2acccf108d1c038a25113387ba64bf3246f8a9a040d03bb842eecd15e31e2618e82c1a7c119dbd6a8a594786e4e249adce73c4e4ff461de9b59dfa4d9c0a704e17b41ec88196239a46cac9a996a57fe15eb96742afd1bcfb8c2fc3922c30883d8daac474c5dce64765b58ebaf4db460fb219f3d9465fc3368a1552ca1cd45011a4e4e3eb90f84b44d6ccdac6c0efc0c065b4a6c5a3ea4ceb365eb882a92a5ae4a6f8107833a5733a14ede80d8906b7cbbd5125e05cdd8e629ede7f249997957a28135d676dcd83f5db515cce5c9087d82c48eec0bb563b8a59d2feb632dd21d20347747940ef87bdfa408a1fbf7793e74652d2a773267b3a6bb09114087664b21a4fa69ab041901f2658fe655906cc533064a2265b6dbf8d2ec19dec3c8b024fa483f6720adaa7f47c10e4f929891b6f74028c0aea239b44bfc43050bfe6d46f0fe151b82f114d54b8601e7e75f063d6296e88d77adf6ef46da330d777a116d7d2702052209d340dc6f43a7e1ddb7263f1e60aa3bc2a58db43d7a51ad485565cba797b3af71f9842b4fcb7a829178f04232d5c419f67a715284fb4e627548d87122c5b20d328474778f3aa67098c5b6bd1b68d420643ade178e658ca7df4bb719d58a4b5806bd0ca2c438a85f353168fbcfc4965881421d6a58de77cd2c7142b15baf0b7200678ed004c128297c9cf55670536bb88fcece9acb318be93222a88088d252b888179836c2bb71396b1d0ed7552b8b4962e3c4ad48400d2a65802bafe33db180ac60050a0fdab03243f79b4dbae6a869eac7da555bb3b1008aa5b9fbaa0661362ebcbf627e5f9a5cfedd0c494a0a812493c7d069e3abf04f59522c5a164233a0f2a68c3583ddb856455b748d7841c99f608705cec0a7357234694b0580edaa8997ed025f814926baecc61af318445b85059a6992bdc63d27e63e5e0629c0294a2cd6f2dff6885fb4901fb8950637eadf1820bdbc0c4829fd226f0614f08900954fe63ee3aa3d3ef2600fd5ac9a897f3a83c8bf4725dfdc6c17ab2a6a410ae496e41dd3b30cc7e8c81acda85dd3a0288cce082771f654d782ddea7d78c731a078d81495e9f52d15121833eda6617b9f6aada0be3fedc9723bbb72f1bdb1070aed299d7ad0e0ccbda35ac55485f71d054ff066f0b7f755b9d13f9f0c7433c37e180878603112a168be3acc9170b5cb11108bcaa45554121243f658ad0faca55f5212f90f52931eaacd9b6437db83c10b5a12a413a7a32aa0d38dd0473dc161949500f692178f9864deb9b0e89ac421769420502f971ab2b10600f59234bff01bfa5bd5f9a651a36779bd12a6aebf0e7ddc8852308e3a93024815a75188ee9613717b6cecb39f6ebdf222c784b9a071cd72c5aafef7914c6b97325c45b2b9c544193be30c72779ea288bf2256d280e637ec5a8048a795646bb85448ec6aa499ee83890634ba6c6fd9caeb5ee39adb1de566573437b8da54a7fb8d106e081a5b9513dae19bc1c5910cfb1b4d8ffb9135cb20011c25622a7a87422fec4b1857bd8f49c6b3a4db9f1e6d58f4fae13138d075121946116036050ca8e56b61558c1d6df3f2a7ebdc640a5286b6456bd0b9f4dfc044bd4c684a825d92eaef57ff1f702213bd27ba25bb2bf1f22ce0440840af404544df7bb14baebe4658022c9b09e27c1ed580ba3929dd26291dee282d7206cc56bb1aec3509b2752f572cb01f7b72a3f4fa703e1ff0c52fb5e431beedb0276c5d7cd4a5cc4dad89b1d4e080588cef3bfa27f69131c47fefb11e3d27463b7b48b19b025ceb820d35be0262d2f3e8f4db72c57af22ba12ca672881efb34aade16398c3a9da1e9d74f06b8dc6721b287db3c167752868d8d711c63e31944286e55967e0864ac12b9dd121c6850e3f2a7362fae3d83da6f37e8288725a2a3bb7ba6ff1d981d2db71b6415b5aff368d840b43dfb06bee05c882ffde988858a902f694d1e69067eb3ca807ab5bae17d1c4e524f2cbfe555b85aee828c3f427d4304d024922dbca29312a8756898a863d0189951e8c0b9329cb565c825611521a37dce9b0d545cf93314efa2c880ea0d2f53227089f61f9b5df5ee869e2d971ee12636044133c134a82023e870df23b3accde584329446e099da7e25dc6312fe203101cb8ea2fb2ee3e16f323443182866e752abaa27c255cdaa70c8c1f47a5b9e4b63393c5eb87e6561380450af7075bd97dc0caa46aad3b376e87581b3384f08bac8c194199f82ad2cc0b22ccbede43df84f56c36972ac399741a83d1ba0239947f7b442d5f13aed284a686261525169dea090755c20b9bfb8ad70844adae54d37dae08bbf8084f11a8ec92b97172562dea145575cd47918e4ba3e05cb6d695b3f2d4001c94910bff62698b6bebacfba6c518a361d61a6fe891152e5314c710071caa649a09bba877855ff9eed6a04a472ec6eaca07e57ba3fb533888075b9b52d991ae37d1f6e66e14a8696739f67816dbf131a940910388d2dc2cf8697983ed919f1a72286e30fbbfffd3d7b7d5c4421885fc71e9b0a6f901fc70e1a77c05e4f60b845b47c9b28cff84fdbdf82e3ace5bed7300fa847fd0a7e77169aa64f02db0963afb92578faacc91454ae44b4ef76731a36fe48c3e113a71a9b4988cc8a12d4d4fcaaa34358170ffd35d61227a61da198ee5dc650cc7629308bb84601794b7c95c378a514b41f9960c1af5f4090097e090012166da0866431be8e8f8d52067a3e429b35bcf06c0d099e9ddf4586f6ad35bc004b67801bf3491a1b331f082337a76edc4fa0e857d23c7034787c1ccbb5e0d3e2631e17fb16ac235bc7f82fdd59623fcb67289ca930b7a375284927fb6bafddb3d699d24f49ec76ebd8efcae8e808e372441341a980581ba9495d9dccb7897709cc7190d5feccbd0604ec08e094d0df53e74a2a6b754f104f67477dc370acf34d8f8ebb82d8fbf73eff8052b8525a57224b090ac5425d7c703bdc927fe90d51d8c172c675e23517b9d18d3fead5dbc7b35bfd41ba21077925aedc736213a3504ae4563ea3371edf6d95d82c2adda017b5f115418316f3d096ef7632acb0d072426e49434bbae97c7d66c7dda702d2d22d5096ed2356f45bc23aa0f0fbeb46d035e581c9cb96ba10231ee68f21905be2c4939fc47c66d61113ad30d5ba24efdb3db6036a065c3449fd2b32d5f61a4db45ed472a9e34630ddd52a97eff413f29f87e0e2ea23c6d2b9c28dc71238188e6e076529cf59d6f930a3de6ca241e64dc12e60cc568e63d9b575d419caac6abca58b9a318a605b3bdfffe06c402b474de006025ed2d5b23533b9b0823e3ed5064184a4ff7de27ca822060bb0db298c8f93645fdd6930cd418a70639ce3af4d6350dea664331ee00e6bfd02c6cb6107fb0fff0e37d8fc3a3f390ee19bc928b7f51655d0e6c6929dec1b168ebd7817bc8955c572ea96fa29479bcbcc35997e34eb1e7f267b355c894da1d40e2305454e4096669a9d621d5f9427303837e4efb8dfa7c8681867334c7e94ea235e94931496bcadcd85a74c93f6840da6247b2ef67fdedcd0c62565cbb327542b4d76ab7e3c074c0a4020bbb5e58b2b6ab59cc82884bc6ebd611aa9e9dd8951977bb1eb0c43b156efd49c0f90245269919289c52f4472dc2c39e08cdd34ff463f08827a5149e0c85a98aadac966721b5c4e2fef43072679b7c7dbb531de8e3ccda191249972fda63a2aee009d5f00b6eb949dea80dc93ccba5694d7811b70e3894b0c58c808510e6bd1c075c1e6ff94cdaac8b9ab32fafc424186c504a3ac7a9727e9c8f95bdd87c928263ed0f2a86e307f69147bd015a5cb9e278e6af03cc9fdfec64f1798298576ef75170500837be76f3f877e1a57c0dd36b68d66987a0348016fcc4cd8d3c0806d4074bf544832625459af68c1c135577cc6314c1aa66c53055506cdbbb748fd10de871317f2a6a905e88cbe9352ad758080c9af110e57c15ca8d1e63fe4df18a200ce0de0bca323fdb9f202a802d242afbc23c54de58105e365b4490616a7a0661c8eaef163a8d9654f820231921d37e9daf9c547f03bc2a1ce98b0a3b0baa9d96ab9563e5a6363dd5cc9497d2a45a866936f5cbc8b28e00654bd96c6c0acf4f6781924583693f23f95230447759977a3bca7c5e153f2054f52c83d095d3c8d4e08a7b848f09802ed31af631b99452face6f8b11bb29a06d7a5e6664661d79d3a7ae2d8915687a27b4df996014225c3d517aeca0c2e3059dfa42f7e30203a351e5abecec06cb5557514cb4dc44fc7e298dfb6b650a4e515bd55bc10fc2a0bdef8448039857b2caf6fc44f68042c711ae914391579b9f186dbed8c90390667140a8a0b3851089e97df01acc7c3167d4006b6e340d00a22cc9d5245d51f2d64f9f21e3f24803d09ba58d4e2254752c161621e334cfb8fa676821df9a3dc4868620af6bf8b396f734c1699111979957d39dda00222fea4ecc5bb1ff6736c216661701b1c1f163d34d44580e3d1e15109a1cc1f98f432bb465a947f36a5d3a7fc855b76598557b94140a06a5a8ca593fcb1667a4f72e9efec1140c6711601d5989391686d245091a523f0206271b7679ab18ad947aa0f93e90c28c0da764a287b5101cd99e0e5cde47965b258b2d8f9e989198e2ca630c7d41044ba36ec2367a43f7c4443b52ceb8dd016311b72d6a724e64827c80fb4efec9cac123237656286de40503669eb1e1f4f45619c0e34f7dfd00296c20dc04c2484bfa56e51def6630a6d5cd99311d3a877e5041631789e288aa4e052d65711f8b8960901786e46a7c2c4ff7e2dd2934d12b46d65f21cb3ce04b20404b241e0d2c9be26cd6c73b8249cf1c91ad5b58ebb5d82d961c8a127e7e23a280878490c0909cfea5814fd6343d030d45db4d3f9c311053e34a8901f6df5905f1f23d38abf53248cfaf5e0be8948f7a1836854bf2287fafe88beb39249bafed840eb6b350c2b79964f25998ad23b38d7b2566ede762fd58cf2696863092ae5d6e477b90d9ae2775558a2f8db32e47e51d7549dc9c250f8e42aab016afd331d728683a12665d446441ad42c6bc15e9b86aa365cb8330aec56e238ecfa3b2d6174a5d18a54aa5b5fbc05cc4a3d0b322dd39cfa4165749af80a82b0fe2e3bbdfeea72066319476c87beb81495d9b1d8db8cd0e9f92905a1162886af1bf7edab50f2a803c3dffd237fdf6c7cc14f96aebfe8ec653d2ae0037850304f48395ae1a55ab288b4bceab981e871b6be6f0cf32fe9dc06ef1f07391acf8b68bf45f67dd924ee6eb04a37dc1d7c21ffb44a39456c31b3552789d2c5b2bdd14d7afb07b693e99e77b3d76417acb9cf62bb7db05881d5c2713a3e3d9f6bafc5843baf71663003e51fdfab71c64e161681594769a4d9cde58a6a1a682cf8789b87705e1f34b7a626d6a2461f1afeda4eb7cf5ba6ab03ae65375e0674192310e1bf7c413076778d30a6d90d7b1ceed75634feec72af5f3b9890b458e0ecba411d04f6cf224a1956a558b0b6c866de24f3e7f6ed21204a6d517205974009f5f7c29609c6898094f860a9360d89f21b02c5e676bd1a84dd90947b6509ae37b13726b5a591b99038416380f51e0f7e91e621fc8d7ac892c7cc01cfee5e49984ad5f17215378d9190850f0442f424ed690d300d254daca2753cf3a1fc2c2e664ce69b1c82e6d187a009129f52e5e4573281015314761b46725edee42d4726f4048e98d665f2ff92cad3771a5ed4607b05ddd7e8ba7024db46755f78bb230810e1a12eac133e40815044b8d2de4a28b1279e34bcb484ecaab7cb06cbd6a597615ab802a71d1d0e573171d3ffcb66ac738029ab2cf98252cf3e45d2cf4d359e62ce440498e19a2d816d2911a4de2a15a55e0b2f38b748b9215feb4f3af7cab3fe29a5e760940be88554ac33ae23a962554b29b774f7f3b3a31ff81c6cda1bb36c52eadefa034f06d2ba6a50ef3bcab24ff72d73fee9286f9de4b80df08b02e97f0a78c622c1b0cc400b85157aea67a569ee37dd2af768298587fd1fb23ab4b25e95163ecb0f87379066aa82db42897655e8b099d81275869fdbdf8f53fa57521a0f304a42d7e8d1553cc6f32e7bd637096b3cbaecbc047a5aaab02787327d790b06dde47c7283ad616d6becfb1a1bcf258c1f1b82fe50c25b8199fa6b61562a7a9227949540ba5cd740514b31a5d5d5db94f45a09211501013b32ced5b8d718012355a60a4fda61856cd7cc31ccf3d5121b852a3935e453ba5fab37c78441c2d4be09005dc50c42261a31e722d841db2296463f7b3034d014f75578f88abcd81b52fc6b7b8de7ef6f3c46011ace572f6db722cf59e656f282949ecf0918f50f6157fb66cfd48e744095ab06d4cb50e5d5f06d091256fff6b58f8b40311c40374dfffef915306f543579305d521558b6cfd289462fd3921161a0cdb20e899c53c975e47bf9fff03fe4e04e97faa12db12d23e23bad5387791c335fba516efa7deb4a51d18161e28efb1f9f7005ab818cddb188bae5caf0eaba160a7752d17516fe0e292b82fac9ff08f1532adf0ec869ffbb5959705dd176cb77679f155e33255bf08b0341edf24c80d87b0d0aa82655b110acd9dd8790ba39cb783f6f206bc19e271aef253c5d53e4f05245bf3bb3fef7c036e326d64e249a084251025c33e48e4faf0d77d2ea29693aeb2aaadc42dadf3f5ebf226ffb59ca76a7bad1dfdc8a084a15bac01e90a21140bd03fa5b432dfee354c7096fedc3aa1256516448511a19a00c7e9cffb4483e9a7ad482b5075819db05820e3501f531bb6b9a9087dc0492f191d5abd1dc21c833339581851c4b342d3a0933c04e08547a98a91473d0555034c854492216bb24e3e02b2cbcec1a3ac393184c0aae4968f0345d101252d512629ff18bae40d7a574869fbc86485efa002bdc179c28cc46f31e62b1f6f850e874c69f0b77a05b967ec6ca9f56566e1a95c8d6a7a01c7fb1455845237dec6e18652d101eb847d4c2a0a02d1c8eb4e0be435f8e6c9b90509dc7db03af5f71f0c8e261c1f555477bfdf61aba2e05d19636df59ac311cbbe058b5eabd7d846c802d998a111a6ffcac8e09d7935068b31f014eaecf57377faffca0ef576f71e926745ef971b3b5c288b1e3da397503bd40d786c177c20f711016c860a1cd178a50f15f79f3bb49ac5b97c76ca98f981dc691143690f923dcf65a237d1772c3302b61125e5c592b02af77a4eb36310fdbc63745e22b3cc4543ffb3a6653bf2004156ee1bcd9f950bb391bcd4d211da53fb00ac4eb681c091b4d105dce588d0cdbe1836aafb60ce8d64d02033906bce9cbbbba2651aaaf42a13a676cdc231a269eb70f6173b86e181e4b925585b543d253c9f8a268b76a14e10d1c4ee59ff2dc7a1ea895bbf4df26e0fca6ac3f1f3ed265ff1769c10e05078b6cad6bb9044f61517b87cba9dbe22e686b19dd0280ec2488288e42fa12500234583a604d9f2b84f15f87b3804b7df7509197a257b444e4516e68a622a5140c64490fa49fb166defcb1dc4a21dec932c1b44d3f03d1e905d34f0d76328d2ab3f71037ab94404ab0720600270e2f167c5c29739c2439de3f368d894332c9147d8909de0442fca4ba044b3799cfb043f5dd7d07e6dd4a7653fa5677c2e2b2ee0aa8257e979d8b912be99b0278a1b43fb3c42a62f63fa12b1bfa480147916d3529ede634c24d405ae2f9cae85508ca66138fb13eb7b4930133525468a04eb5131f58f5260165feda56fbc34200cdfb9c443d87272e99cdf319db78f9eb33e12f12ee0b1a6426bacbd1d6468aa265f2ffd30067dd198bee37a0def77c3772cc29ab15ca663fe57b8751af842822c32b4221246d978fd24920daaf456ce0d35b0d0722ba5187f27e09a23387dadc573a25e2059b664aafc3a4c12b4ecb65a2890ae4a66090c7f93277b7bfadddc52828cd31db8a55e14801e9b82d719c5f87395efc5452a82e4d5e93766308e6553ac889916362920358b8357b3e8d22af1d275362e7880d85c9a3c29a4539d165df667435331757194212cc64f54519fa12acae80993f23a49492e2fbfdd921f56e62fcd3672ec5bb98bc85a84057e33daedc7b4254d48ed952b7bc5ae73051569644fb647e0dd6f58d2253b597acc6f4a0b26ec2f117f2b9a6d43b9fe760648c7fb565deab9dc8fda7a089806178f865f2ae0e84a855e3469fdd938e0c017719b7a06ae11cbc7fd0f79717bc23ddfb1309356f0de9068de3ad1391a9f79280dcc5fa02b942c414f2a7d75083362448295edd02f75b9209e5854d5b28c6ffbe01f6dcc0acead12375085d70a27d679ce4e18e69a83b549510266ed6609f95b00f88f106dfe9c3344d35fe6861d116fed63ae9ccd6b0bcd756282bb2c123c2bcc738518dc9afdcf26c4a9f9fffa67125d289e9759c74ba210c3d4d4d86b42be611a647c1c046a255d78b6a505a71f8c6eb8f25cd8147d0b4aac73e235c944c117df03d56bd4e98fee7fe8e47c00a6fb55362d016b5bc97ceaabe48dc7394ef84275020013b43ed2e0e05c0e4be5270359f1259ef8f06353e91366c956d6e2e35784a05dc83ba8e075dc0786a00a9517018c140f75ea7a02eb02a792b6b11428752b71ec1efec2c713256bc0b5ba285301724a95d3cd4c26040827673bb491a5607bcfc1d254ef85c4f9f2afb760cd0e228be577a4cef35b752e116a04bcd02805405dd255bdee4786ae13eb1f98efe2f4333fc480414b7cb74db94cc7af0c891f487fdffac1b9b814069ce024eccfc0c59f2b6eeedac7488e8c85d7ddc385bc1c27ef863b02309a06559c3cdf00cb9c6a34948afc07c174ee24b460ac7d0b45d101c4cac9132fb00bf86d277ef73361aa36b54651fc51b202808af7297f5521f67c0bb6a522667778b5c81eb5b9fdc9723bfecd3dc65874a6f54b06d512906ed646e2b31e9e599405ce9e1ffe9c763eaecd45b3d550f9f4e2d28a48942da0330ad8eb652b73db8da7eb5aa16b77660c7b18b11d37ef9550ec0f4bb1bb662c8a4ee2416af338cbc68f6fbe72c45d716a16577dd4ccba95859c14a2694e9362afce748b0eda1898352b01651a9ee5ef3ef6abfc5e5d93cfbcbb38fe5a8aa78a1f0ced542dcaa4c32b83b1a701971abe1c8bb8db7efc6de5649e5c339730dcd53f8d2214727f491432cfed911c15b74de6dd387a1fa1555a3048501730e2fe4708160a7e80ae419eeffa73210d5beff60b147a84ca665a4c680cf5d38f56ada08fb0fc0b189df0dea3cb31c968ae1bb0a924aff946531e00d4f84b1a4bbabd2fb408e80a039024d3ef7a7625e0a08a39e4706d98a7c065d27c88748aeb2390fad86defd0e74e847da4dfccbc8c0c7358d080cc462e8cd4852b4565730d3fd522a5b7ab942e4174277ca555ea776c32be397ff6608212b31852844a702825d91a4b00e42495c71bf0200013ac4eb61b6347d6f18321e0d6ef9fefb5c53f0f93083583b89a591f225786bdb29e7a1687837afaed247e5f7e0e1437fc851c3ef680a2e73c2e82c85da2fe2f72e60f68107e880b70bf97902cb15ec39d765b38c23c41d643e1a71272c7ea42ef93ade03fecfe664be9c9782b7ba1479e1e2bca5addd3bf93daa860ce9fab101894b8e15144bea005281bda9fca4b77b5affdca1c6a95e301944bd8012e88347568e7ac0637cb892bdcdc07e5cbe265885fb1e1be74f3e39b339ffd68eb55749eaea42704c9a9a76cd1052ccb109d0025048786e52d22c6286f885a16f980b9cf93e8b759127fac6133f267e6bf7095ff854198fda9815067d60ab26ea37f9bb12bf40184aa0de98f0c7ef5deceb7895d2bcd97a1c56f3277cec130e2ce8ff957641a0d2ab766e7bc7362ee803301dd6a9a842ac8881be09bec9696e18afea93ec8462108c2c61d70a0d61c89317a831981d674a797414eb18956ac1a6282b5957be05ddc4345fe0c4f8c766f50466a5a479c420d96bd132f46b15b8f42e936e7775f28a7644289cd3b6cf8071a073b4da3f819e8494d2fc06a3bcee293f49dc1c51bd9d9bb102663c33bb62d3d012b32af12af5fa5f3ad94e079d1adfe4dd21138dbb22697a7761d73cf6ba7981dd7c4f2f4e8292ea53d59085e8b7a47c912e2df29a16c7e463f2280a2bb90cafc9ad38afb8901a68d203cfdb51df9dec0b904764070c8bdee766c282e496db2b52acad7450ddc6a4e47f4313bdeb82c3e657e02fc31ffb1029301ad25356c25dfe0abc32f38c61205a0e79a5e9296eba165106e48f1ee15f0d7e695f79d36840fd40d4ac533acff1ce7f756b3530b081e8f12e4bfa019c8f6d299385d3507a3e7cd4524e51d1da95da40b4301e189eba92e72de83371a79896351305f154876494a752190a4f08e9dd1b4ee3be6463a75e00fe96dbf31ea3a86a54d1e350dc540bfe537f5be9037f1da3228e542f77f6a7ea909b8edbdc0477ba9daa16a0e0090ca700607b0aa9698440e463e47fa88b51d93ac332d11df6190163ecd7c33167e573f37c30431fcae11f19515f94b5de9d6c8645bae80249adb9b3b7fd423ab058e99586e65edf319c383ef5ef2f96cb101eeefea16b09da3fb528939941e5a1fddce7e665c57c8a188243b43549a9d8efcdf0ea2c61807bcf6124765fa2ee69455c07e91b1fa5f6a4c5c25fc0ed7db26b2a7eba60314f7b96c04b86c11b8d8c756f3118132a9f43ea2ee949012166bc27177690b24e83044b3100a281aa2b00b8d2a371ec95d547c1de0065d09b783a54ef551ac4ed4a56b274f6db2e58c399f62dc64dd8963db3fd14c0dc839301e2188bf57993cd820568f55e7607aaef5ec1b40fa4b389bcc0416fba94c2ae539e66efcc3b25040b3ef2c30a8cceabbcc76f39fd6aeaabb6760d160a080c0c584c78844ef66721e74a6035256861c5fe16c5541fd494d35bd729951ef6785e7e68a32708dd4bdb6de25b1bc11f0268400f2052c16eda0f66ba176093478fb733cc4fc1058ef74fc3ca99255b06beb08b3bf3940198134fae330f10a394e01cda3e1a6566fa62eaa551713e9e9dbb8847f28e20894dda332053308c56b4678e4932517ef2dc688cf6856bb7229693f1aebf6a59487380c628bf0b649756eda7b80e43af13dec7ca816fd7ff23645e70486ae7501732d81015df4bed7733c416a0c85f0208cde9d1e9e2e3c8b55e5914340070adc6f63a4ed9f35e37fe76b3a4d7ca551b298b77f0bce04bbf5de7225fc8770420f4598e27b6db9e68b04ca4b66b946605933bc30ccd7b4b6718c08f256899a6d53b909a1eaeab1b325d8353b459a83155b6d9977a71cd37821ae3b955a5455cfd19504b88d7e12ef63204b47e3b096eb47986309ec0d571b7d75450d779e4c542f14d8ec96d1fa0e37e867d34f3c32bc0a3eb65340326858b9732214e68591ce6b16d57f73644b35d55f1a1ea7cc3fdc07168d8eecf6f76b3b3bdda58821892d0cbe5133793130f7d128a2257b41ecebe138ba44290fcf1e39ca417501bf451826da1dc99743f5d941a860e2c2c99f699ca4c1ea94a4410b6eba43058933cf2d152ea34e922392e94599759136d4e2b4370a63f2d9a9f7b183579eebe7b70760e1aa9d2506704545f3b26f6b069d936f8fab3a2c26a786905fdc3faf55b2f4137e566394430f62624c314a81f137fdc690c0648710f9bda8dce47ec744f0dc038e6011a2c8a790a416b34e326dd73848ac093e2a7d2d83ab8540df2b8374eaa30a1002e3edadef5f83aa8bdfaf89e38a33829727fb1a4bdf67adc222bef5fb31890629a476dcc39f4ee52e575c14848886c5fc89732749c50f1c8dc4f8fdf3949e0f18610aa0db0a5d5592e9211da7113386438565ef0f2984aa90a6380f7d9e3ff1e92e3fb07a8dae34b3a64f70a610311eb7cbd1a28ef1db42cf5a746937151b8205d7e5047f4eee9078c32cc47d56f045bc354195a90fa339d0879fd78903cfde54de1f7bcd2db91aed52816465b67e7ad4e400d7fe8daace887971b0a16ac0f13c0d1845d6c36d1416f735969268ad11bf0b6d396f701c0cfb0dcaafcc53a76f65b52ec835db23fb82f3461292f14d55a2dd3181189d33449d549336a4938b06784fcbb5ea0403d1f688d5a3e989014a076fe04eab5559b4a50d039c351b023479435202a589be189640bff639ccaa8a2b78eb522143c3bd51c8898a0bbd5294fb4244003c3a45e22cd4af67b36a6b2d82d5bbfcc854cfb7ed5e595185abc7fd8a55dba69a7c94ff631fdb39d9b9c2f430717e2c07f61d9445bec1424f55387eb56b273066f8eddb9470f0d5ee6a390cc2ef54d10d98cdc357ffe2cbbe84c0bf4e804399eec7c9c7ef315bd065e4a962ecb70f3376cbc39b0fc05b97ace7d6cfa575497ccebd705e557bc594642222973e351684915cb1ebbce4374eb94c0915926de4d35ff9d17f36e005a5736e4dad5d337593d7fc68db1a62e9385f4fcddf921625b9d4c1dc6246aa29a6ce9ca87e87c2d27c8f365558fff703659b5e6cda7228f3b5d71704352446fb1995ce49cecf9eae59ab958fcc20673ab900d906a4a1f4971cca870dabd16d3ea7f05a97e729546338b42efb79923c8a7b999f60d1c59e8bf3c6b051f63ac69a97559f364d82a5348889f7d68ede6c088519742346741b598cae16531b7d7bfeea5f3eb955489c4c61d16f1fc5c7d9e824f3b3edab4cf87280044348abe29cb44f3265fa21f63dcfe7edabd2cdc4f84697721b03e6214e8e53108275bce2028020c069949201dfe508f95a836413c111cd8231ea289a59d974dd2cef37d9ecb1887685eadee747160c3ddae1353ad05f30779d00dff4797af8d2996ec530ea1242b6560fd4d406a80ce5da44f2deadeaaff0e0d1889dc1c676f4c4c282b91124616ae980c78b4ab436777cc7edc530053c78bb543917b1ac43b54ce10de679b42dc872b58af49edda75a587885b732e3dd32e349372998c9cf23b3d99ef772bde31df34b87691ececc368df1185387cba652ac57df1b875e05d0949b2755b25eacfbe11c3e1fe3462be42b3fb2bc6143b2eb94fdf0af58abbeba263284fadd3ac4d38c7e029fcdcafb6141fadc3406feab679f4cab5d3e76a870ab2af881693d5668d127b0d62e5610b3fcac9b8824c526d768b48b01986f88431cbe583486a07c2abe71bc779129b51983ac67e8de9a2c26dc7f13ce4d97034a3c9666bdb969b9877b73d06891897e98151487b98b26acf91f7615976681ee834db5b354d79a8bb4a529d5a04e00b7cea7e5170a7f44eea710b6d77b6058cdb5e243dad4e85f5080008dc2b0ffda9383b9fd1081e08745abf7dd0498462461b0231a51d8f574b3c30c981ecac7912f2f27ead416d4b40cce107af31c6806d005d0f165dd469b03f5fdf9cd2679b60e6ada6b8b27fc7f06f722a22b7cd73eeec8036ee2f2c2e774d939d9e0f382484ff0597fde0df4df456381c6acec2e67927e03836b04ed6e28dd973ee986a7636b290d628f042a751b8deadf8a15afc3388299b9ef75572f3281f0bb6f635816e87dd1ef66807a561ec412e83199a7f9694c0bbc78fc7369673cf67eae15b31338ac20f2930cd0fd466874f6190371aee7aae3143519649674fe9a579609cbc6e0acdc3ee586b04fb2c771bb44ef80ad6075b1a5db7c362099774607cd678e94d82d9e23a24503dd62ac217870ee61a1ef44ca8b5870c99f087c4c6992ce002be4fea05f34cec69f42f66e0c87fc17b3f36ee7698425462ef503afc7c8a7d4e0602c07ca09b3fb48c50ea1cdb3e36252aac224ab6b9e8e0abba1a6868e014602589e5bd7287e59954b4eeb13ad6ac13b0fe14a96d487c6eb0660e0b0498eafaafe841edc2d872c803eca0aa1d492746471a8ca596bb01d97581c2edf3a293e945f942c92e6274f70dfd2a7b064ed78208d88701630a499e3d916500819cd9fa26147f6bc2bb647e789e0283c6924e1d43f390d5445ac8c5840a9b6bd088d698e48326bd45f00c4983a8410cbda6d88c3527c645838c2c32bb077f3f5eea4271f4475019c4ca6dae2e445dfa24f5fdbc450de76a7128fd3119fde6fa78e1f5fa120d57e6dad8bf488a7d554637820f5b0302641bb7f22855ada10191e1dbc2c659c2d58db9722a59a3b658483ae607ced51c47553ccd309b15bf0a779fbedf15e73200c573524de9ba7b9b4ce7b2d8c2248bb59dc32d93f2b6c08bb3a1c23f697ab75b53ee5f776ff06f2ad75c7bbce5bbfa041fad767f924ee7bf049699593d72fedadca94fe899b76305a97ce26a8a09d90515b62c6d8e67ae022b50af66be6e7f4723b4c7e5461f8812d2287b47efdc6a9eda9fdabbdbc4b06f76628d3e2f78ba37d055e0c5e4e8503994757a1c16bcd7d9cfb7a97b4c35c00f8a95f82cb5d95525a2e279535b6dedf525afeec970b90258dad8d978d808d509f37feb92b43f5a854a6482a69d841f5de9ffa9624b07f7bd90739f116b5fb8d47b8bae5c10c34c993e45316f3ababcf076813519c7a15ce526793d7a79e9e2aa84b841b3962fe4eb806b665a9d8197a1503f8af00a0cb30f95c0282fe0dbf1e5731f63f870c2285e5e6774ebc8f8258008ef3d7456ef927338ba0333a42d079d6c699f32b17a70b0a89c2cb08d0fd8e72bb1c022319c54bf088edf478d533d7ef76f78fa2ab72f56e26d1b8b5122810ae5160cbb33d22fae2cf058aa4b33f8644679fa7203a5fdd2cc1e05b3987adaf7baae842028b5b2ddb4b9eab592eeceed9a82e9e89c413277ddf45d342d37a1f67b11e2721023b6a097c95db2b82968e944948efdda57895fad161e08ac315c86a6d872ea5f8404a0168a33571926f6fa95bb94d3adb7698c7c1e98dfb7cc3a9f603ab25161de95e262f5edcd766ca5947ca261a4855b6ceb6ceac7e8502696df953bd2b189c14074fa83a85e605cf83c0e5421fce4a0324fc3a97e36804e590a8b7a5559965b06e461e24196a5ad6c3fcae007523461fb31a8e712a311eb456d8f0b28ff6efa25dde5eb60b5ca94a00055463e3d8fa4e4ecd249f497f2d916cce340dcfdc3b8db71626dc3ebcdac88898759ccdcb60109a91aa509b66538f75fd4bf8a728d32a6b6c217bf3ff46938a377d4e566cf6cae75f9ae4becf79d01ae41aff8b78a63d5db4ddceecf0da39cb512aa675b25c70ef769e0dcc1fbb3477361a202b1202bbcbd42bd60dbc27b3306a778f547aa449e65e919a3f796ca1db59b794c8b09e7da8db5785ec8b793d116d04abfc99c2cb8871c8b920d6e519e61a094881b69218230bb73ddd114e82f027d49085f4708cd11d3b924a85fabe08a0344b570adcbc7a7a4ceeece0b37a40029a7c73eee4474a66b3bc9ae16f9a0ab49db7299db2c55baf9b3fcb58203deff81c9bb207fed39e050faf23a618b50ec37adb2fc02f36c74181cde116668bd24e881fee171a94cd1525c89938a13d11e55efc9db26b68eb4c291a5aa428bcefe6a0373a141e060e7dd1cc5409d4502baa3934404c14517491ea35f2b43dda54f6c0ebde3c9483d8a584fee133b57cd1502bae392b17a4d8c24c7e1781b834cccbbcc875c6c01e213993641af1dde6adc5abf37d8ff3c6d9c8fa12f53d97edc4e1e4394891c9c7f2f3fe314f5c0c6a61794239b4c78bbb9c096cd4daccf0ed364041793b77029a260b8d44572e340ca7446890ff149b78241b4b771eeda8247a957793ea8d7adc5d49889c1f98141f97e9b4005b9c328e7fb0eccea80dd4e599adaa92f966d829b6e6614e57fc4c44ea0af9c6f101f90db23539a46ef486b2a63db24ef1af1c78566a66e38d7b1f4d4c98e823f42f56c9cf2a96083f38f677886c918381e13e9d3ab8a32676b8f53b00102e64333dcbf22f3a84513b03ceda2edd2b9e3c804b2983c827e26ce3744e3323f08b3e09fff4bc158c68967cb0c2d416f6583e348ff98da99d75ceb4d0ac918be0251a6bfbaf6444ddfc139f1b097ccb35af19cd423b55a6a556f5cea271e2f2c3efd4b7e6228fb79a27f2465abc1545c9f44629cba9118c0b69ce31ccce6731c38e3183209b0c8f5810c1b32483c036265c7442b9166c031734e138a3fbff287942f855beb7ab3101779e5c8e764702fac4ff74d42ddf211a9fe29646c73d8327e23370e154ced34e95ee3636aa1a1708d6f141e2bb7b1e72b304a0ed1ae2650f6f6c2a9ac6a9116f1ff279a73b028184c1a2921733f4778cf6d77a007fc85bc6c7efda0304d4fb2f41c2bf765567d8762e459f979e1270a09069e05b13e19755b7314c7363262dc23a09b23766bb55dad955cfeb09755f90f51682cf2e478857049c1e75cc17aa35497dcd1c40c1658ca2c43c826dc73ff913b47f769c9c4f5050e7df10187d161ee5fb3aae5d4ecf0325d422ee898120ad08a1b1ed31db0eb90df54ec119ba120c7dd2a96a0d9f5ca7adb683a9df4f61d0ae86f281aa06f50c5f2368b6c0ca3557a85ef50f631791f8b919266617f124c42769a456c66a7dd12f83a84a57755c6453528b9bdb703b9edb4f6322d67f37e7e7eb17dbc1f0db0e572432ad45f65a4a522c61d0269baa4e250ee471475cab938024bd674064b673f80c467c7f581c01df34dc52788a306359380c58534b83aed9cee571fffa2dc234a5b9dc6f58a9c81257bc1f4f1943e93cda5ead6297ca98e10c11305743568efebda968388771cb61be32f102e745ec1080462db321f7511ae80db44b87462fb2928826e4c338518a916913c7d1390a38470efb7bf7d7fcc32aa1efe74c81a3d58715c5cbc2e3e551ed6c9ddb85bf430baac718e0814659a5e882eb16f4fe19245cea068be1940c89501d5ba19b51828938b2394087c38d8fa8710872cbcc7ecc26b22a2f59065fe1654a9602b7fd7ff8612e2af0a69665670f9c991477e5f55e16ef5808ca74eecdefc9a07c4f6b7fc8a8d0501784754a167cc64834086c9b5d52bab86b7f66de7b7395fe9be13599c6989c80269a70b41357b58a0d728cb36e8cc83e457ca5773a3957d45e70784556d0f10c345d44f318ae7594b5716919ca9e109d7f39b57e3fa89a71fea50bb340bfe94141e1ea2084b6a984e99d64f24a7be1e911801f931e05d454c2695b55320fc02401ce7df0d44483d81dc494556c5dd2a46f3db5cdd9ff70ecbc82683ba2147c073ab0412eb0392ca78e9c7fc10c2f671717d329e0a2867e8ff69d51b1d86d0c448ec818c11fd766a7d98628446d5a56f3d7de08b058bbd04fae9454d5db5e39b9dc8d1c8a09315f35f74d840baf118470c9707c714b6d13f0f02f26b22d68d30bdd10e9a0c71ad10f4204681e5fe0deb92160a88fc0f3c76872ad1c6925f5b1bdc2d848d36cf6454a478503870e71477f6e3de3456e1111cb1944ca2e06e4482afd5fd93cee987e3b98b875967bc77a739bd9a924230abcdeb80f15cf84d4c915150a3c541cea27966022279b44067b8f86e01e0318f50e5a0d11d90c988ee85d42a73503e00181116d49d1b5d9e59bee08964c2c23167258785b7370990fdaccc1ffdf7377691e8ba58d054c6e83c39e5746a231e5edf0437148c633df022257da1adac43a75bf9e2c51c56230062185c804c3f89584d68e4d4760fa43294e5d08c4fc53f42702527087791cce55681c455afb2312c33555ed129b16cc704424e005d59aaeaa0701414061c5dba3633dcb21f0348c5360bf185b89da8e8be95b372eeacbfb65b2a4f3e68eaa471da9062259f678d75c8331702714056f7e3b8ad3fc6006a13783b0880f83f24a7c3aa5182b2975c896d54de3116d428316e86dfe6a43f525010066c21e21811b5eb5cbd9bbcf59c6c64d39cbfd0cef9d990ea5dcae8d8db88ac60584ba24879eac7bcc2485c53f5d0cfd2f4dc48b1cef7736b26f1d1d2e48e03ca0cebe9279739658342701c415cc6c40d1fa73312b61d06139fd5e3db2accf7762840cd536ebb39e746d267fc3500104304ab5d395a1e21c95d37a036949d0cc8594cbaa414f78628e4bcc4685ed928ac9f438872812a216b046aa92583e7587ec0e6140a62b1436b1850d205c1b0bee520854a02af567950fc8e64033a887813f90833ca5dd7a61c22a21fb4ebbb654e056fa65eb46e2c15ffa2331731985e43168c432d80bee69809ad4b38a95b37e49b54bf3d8a6eaedc698f6ef5369f9536ce711df87ab93b668b3edc78e4c99fb535a2da445a61aebf723db70113d53c3dd61be3d9aca6336cec8edb74b1f6fe3843c38caa776a734a8029a7ed499f0581e13466897067b1523006b734576311753cddf3ae4b2a025f9e848970ca64f45ac793854176369b70d2d0dde57ed18d77477fb9972427f55659339160c9d6792faa777ab5b01f4150337f83b3755568db502aaab907e429941a0639f21b39d5ca7f586c4e6effbbcf182899999bc35c69a23413273995bc7a6cd5ea9ee324e1f3d21f479026363e01ac3eee9886e37cb1a5b9b425698f35f41516279de6a523f29e23da87641d7207c9b7b8bc57d39bed7425c77a25a29ba3eb17992eb74bc7d4baad3393f68244930c1fcc54380bfe4dde932e8a7a1d5e0e419fe85b05ccd1cdea6f9223c710b9cfb5a6de109b4665a848dcb6b6a2e97b39b0f6fb33a5199f20c72989e5c7f3408fd60eb400e0b6335853f05f7d44ff540d49c466ca1e257dd4015f1e04aececa100aee65d08f4f5a4c648c5d7836413f42bdfbeec95e598c7b805074744d232098f5021992a0c90ef8c5f5d9526f478f7f2fbe47d689f76c41aaeac1821c3bbff49f7de52dae0c59fd53e33729e92886106080773f60febc0b0ba6971563ababfa6e0a4cc42d7368cb6a42098a81cd5c3cd73072ab41ed092cb1189c49319341ec8ca6666e2bb9c47be922de9c86a849e9b1b4f2979d9935b385c725cf992b5f2e6e650a9ce726c83b805850a498f5a661e1bfe703dfe76e42d6fc33bd54f8fa5994658c04f6b740424726d00d30b5e804fc5e83ee64ed09603813ad990166690d3ffc0e3eb443ea850ed95bf9b01e08966618b7e7f3341b60f496540848b4b3126e371c466274104baabc2123f885af12a228c68b49b14df689b2b1103b368b293989a2df5e01cfab4bd193aafa9e022cca8594a161ef93f1a2436941f423869a77ea5e8b9b1ae0e784756b606ae7d9a6bf72162b06670f23a07292140c634c297cd260282ac250612a46dec20076d3094c7b5d8d08ef7c7ac89c280b711eaa2fd78c952b56892bd20905fafa723b7678c3d0bcd79e30dda76260b19a0e551c8dfa029f9e284e9c52c0a7c2c31ed222fb9129fbeb406e937c2ec485f647dff42bd146a34d91c16066d38f9dd94db9d4d21999705b04844515ce84fdbf49471bbe5a7140c8fe10ddc3a8a1b8ff453d70e9793175ea4addf35e1e7df9a81f126015cb85687fc444030355ecbc64500ef460ec295b748ab96775e64e67f241dbdf3534b8899aea5cbe9f76feb93413c9417a8392bccb121897aa29b96d9904f1445ae61c5a0b991dfb1942df0e637c838ed903f93c53150ebfb84d7168d57eb4aa665490eb4af6a042b84b41704199896ee2d56ab4e7ad559490cc4e56ca493147b77a6677a8e6ffee95b58d8c355e42f21c0c19d40fc225b5ebc2a10a6c3d19a1d464f0f6223579043013d65f2fdb3e3e776bb2dc9ba6050df0b0c9bbf830ff3fcafaaba599419d0719e7f889aae08ce28908736a0dd32bc69ba6965fc3939964307cb7a1eeb5705d4ed11784a0da1bf759b1402241bd8a2f83646fbcd80364eb43b43d2575d94e6c746956ac911181b4e22acf3f1b0189b1385d86b2209637b30fa4a4a5e08dd84894d0d8486bee322f612cd159ffa55b35fd85716969170344375fc0b518696b04e25346cfaf516d98575cb17e1105f0f400eeb3d2b0ba29670314efd9384663e18cdac8145a998180b9f5ae070b85deca67da3f003edbda69a523143f48c4db2b688da27a43a24786bc8cf1e947d8241b462beb727dbc6c4d328cf4d18ad98fb047eb6d403a224902f6e745555d78975306328deb04457e8cdf3dab5e1c4baffcfc0779e5a6f28e55bbdb5cb566d52b4e6c953b74644f5b04b924ec8d51fa7eaf595e76d99ff407df862f03475ce24d47bfade69bba60982ab90b0414dc564c4bbca5d3c0c7c099f0947becd9180087612246420542429bb034aea32e50ef57645b66406f50746579e878cb9c2c6af26c8345716cc50b81bf437e68f19dc553b6edd8a92ae259ba9a170a783e2c142246f52f169facf72c6cd46b70e60c02eb542657be3ce77d9eea91c1310ad1bf9007f790a58de1bf2a92d597fcaec0004951e5ef9a3d9932492028a45524f67feae5742b86e517f7cef131e368cc4f5128cbeb709a4058842e5d0abc4e1ab4f9d65b1efda8e45d0de163993ee23fc11947dcd3375cdb695e84e6b4514e2db944e03a97594c4fb6245cbd38bcf77cfb666b1fb51742c3915c72e76580d22992f9edd1d447bbe4134643871463ae20f417a0ca868aae5df12d424b1f825046989fa19241a42b90c0410d60b8fa1b98315be40c48f7ccb975d65838ecd142eefe4f8bfa1c50b73fffab9d84eb2b4e72fb1e91f981748e1aeedb45bfcaef3631800382a58f1066f268cd8c9721dbb23caa545f63edb9004f8a47c9dd8ee684386edff999464383a8434de1b83cbed21597a37e2a9c1d3b2c7c8c228ec3b816d0449e0e53f8bce6e488c1bc00d44cdc0cbd0fbe3df2c266f6f93ab2e77ce1ebe340e1c498ee5b3f7a83e52b118dee56c10e67a0044cd6ee28b646c6d040ec531412f1f92ce0d3d008ba46ffdbebe6d9577f07cc9ec0c26bd67660e929e467ceb95ee4de19fdb1bc57b6ab8e16d005ba77da87737cd34c306564fa658280c1ad88222976fd48d913a26c31dcdf8de4ce6eacb1944509f2c8006e90321ff2c412c4b15f1d58080d35cbe1761d82da67a2b74e07b914284b36256e8b9b6318bc53824184ea87603bc41d895bf838e09cf64ead6c939cfb52e87ac452d606e572c631b0f4fb5bbf8b2781041f1c38e5d9b641e84978d4e4379bef842a6fadfd91eae5b05bcfbe56f10a44c3de6cb965e9848947f7ab4c18f662b207b156c37b7f87707b4c25a96a48e019f5446889760f20184802c574d82cfe6046032084060ecc98473e3a104a501cc18200e8869c0e2d82d725c0c5fa62f4c34909a2d836de0a5c1630d95d05026f3d3a903d601c1124b271288aa208e252e6d7c72d28b27167c9587a01d2185abf6ea8ca094369afdeb21d7eb752b7b6d7ea2e602030da64aeec9249ccd59edceeca5f30eb0447df3ec8a6c7cd2c87e976982ec96b8b8a7bf746b90e2f919607965daca0713099816e045d484e67c2250c9d9d81e72fe782cf69114a04a6f4011436fb410f2f8b8227cb835a70c14bb62d224c159c6f34bd60e4b1b0f559c96433e51ab97d4c06361235529aca382150ec4ae1407f79a0c0571fda487b02f568f2586851dfa619bff33cac7a454252fa6d9ef331b60a3f33967eeb9ccb1cc11809006ce5006e2efaf1e1c4f1c935ffa6fe75fd6553b553e8c8d6571ee0d91fd3fd90ffc63d4d1790cce916e0252cf95d8b9fae7fad99ce845d587cd42bf8908ba2df58b9daf0d7f67617081817dde05866a49da54758fe3fe986390a874686c3b82b2a4332c2c65d8cb041ffe8ded9de794f0b2efa424d8a41eb0fd5c49f6625cf268042fe638751e4d2495d85b3c2bd88c4d1c3b16d0f2828b8d084aaf7ab03d4da2cc7b298d51a0b668663179016d0139e0162addb53607a12397e54287a653eb078549fec0a56956644fc2874092ef73c44499ef5c8e155fe5ebbbae9b8c7431d6d8a6935b9a8cda0efc8d05582a348cfd3de84c25ad58e913e70cdc8ca0aeaca02109c27fc59a76b51fd4f4fd3da5471da39cf5d651d3af99e975f225f43831d0e3ab8847d57c335cb6f77b09b0889063cbdf5ace1fe03c0e4253f8df3890ffccaa4af2c7e2a7a9662ba31db66ea8095281e8f4465fe76140558f672e5d74f4d2a5b9b26c8c24a375b093e34bd656d7f68e4dbe49a14755ff9a9fa0394a0b2d06c970015bb0cd2feffc98188eecb23ee5c2f3800ee4ef4a14830c4272ba4057101f58f86a59c1df37474de4b25cb1acb4a5a2825930af3aa3f382dd2e57e31716df84aef749e8ac7a243f32037d2f76484265d821658d8b32a4cb65ecc885be9378b97f518dea57c3ac0bfa5421227687cd08091f37fe3ae3cf34e30f01b48bc395cdfa65ec44d9d6f18dec1bac27864bac8b79ab64de4eb6059dbcce4298a8ee5e8b05b0c7ed99e15bcdff321764aa1dea0b3de06b1fb348e21d81f3d040d9d05380f6684ed0e39e373d5b9aa2834032da1da6648dda65db4fba9960e22c69f9e7c631dcb041d2c66f5c5e0b3f043456e9af1bce808e1a41395e134c5296ca98f9d238e7a7f7e1d7324776f97ed32c43711b381b42025389f2dd8e36dbfb2e531d7a592e6717a72dd73845a931a9da5ecfe9a33e3bfd2ae5db11deae5e5641a4a60d05d064476e51c75799bc9832753ab386e1a75ea802a523135e6c4da77b493040a471cf6aec9f58a5549dfcefaba3229f0f7f90f83bf1536e4ff351dbb151421f2c69be6a701e7056112f10f33e0a5ebb1d064551f6c05467f39697badcc65c2e86d63c2f51e77a32a1950566cfb70a168a346938dd71ca3511d47be9faff749c9052b72b35d9a17119ef18cadfd9cb808c721cf8f0fe852567193b89a1dbe2e03efbee3632dddc8c923d877c4250d84bf977e8889a9305c6d8bfe2457921518f0e90df5f8763f1b37c9eae694ec521d3c7ff193889811ac1e459ac026a9dc66de4c7f59838226692a3a82d5f05a6b45e0dba00a4ca629f42bf329cf86905f1b415b2ac361c12574a3f6134a31bb61db92271425522a5ce4244ef59194f58b98b0cbdfb241e76e540f2f7b042a5f6be04719e7daab631adffa2e97cd78530f2f11db61a03f1a7bd66325f1c5037f1dd2b914693eaa747cb46ec5f20633c175d1c527678d4aeb62958af4767fc67ed8276f4313cad40a4bbc0d39fbf2f40365c203b25b3e2c84307c47d7cd1793023a815d135d4c5c3355169e78998cb6a4e4cfcbfaf152fb30b2ffbfa710d725b88e3093b801fd1aaa25cc8e9ed62ce90b27ab70f1a7d4a2d774acbb73c91a7413c2f3914ba80678493413226a779952d392e8cd145d7ba52cdf5c9210a9d77c833c6d1897bb60b7e2c9891bb7b7faa2ddd97f96a89bca7b62efb4dde32bc6388906fc88a620145499e89a840c69a9d6a39b3980625e207dda5fd841a942754cb65ecc8c6e8fafc9d9fa1a8fa0998af18433ff323ce9166ec1f8988e423793af6083aaf25334815dbb0e183037324e7f53e1157e8bf4e4054e18ad0ced37954359a1b4407e8fde84229c830cab7f90a212708431c8511efde72654514991eb4c42fc1113955c984162e3242124525f5c1c54fb4a3850d648498fb5f3417aebc4ff44046e55d33c3aa1444c79667e43e5d84ec42395614d106ce65d947b110cbcff11a02d825684c9848ed11e48b0ddbf2a2ab104a7174a9a3495118672dcbdbb2143c37eefbaa8d425fc0d4a29cac840d5996599e38650522861d678cf5d93f3b62d91d363b22283111a4e914eecf883505842729935f2e70e505fae3de556d3383804659a440ea73c12dcba99c82555dc2702499f0c6d151835542c1a2806e0490d0d40d4ea6b42b0f4e7dff2b2308741b393fe16396ccfc621338f36a53d0b4f4783495e66f5d48b8289c83b043f18b7ee213b07d9f024c6cfcd5e5499373b5db5921820b1d90cbf43d7da2512c972ed8b7ab5fa49fb9cd30d83905225e7e6165e1a96da3ddd91916770f3ff93167f7946919610a2da9a1de52281024a0b90a7bb7c2eeaff19a6b0ffac31650a94dae7e71dcae405fc8ed727ed8463f296ba3433b3e2bbb6c885a29eecf2f7e1e05e437e21926c57951ec46a796d860baad98a6a50d3d962a8f2639175c85bf06128b620203a16a392089ad1bd700992a78799230517a475bab8bd2cdb3867b061cb65ddec9af06a24e4df8dad70d27629c8563a21acb7580bd685655636db7084c02ce6670cf184e69b351a38827d9753b751e64db9d2ad24a9fcd2cae3f4729bd04b1b5e42d44c0d67162cab84dd1a7761357b320c30fd8a7f025fdf960e54fba6a2fcea770c91a889bf0892729b5bb859d6b09e2df17a57ffe66d8309e2275fa4374210cd84216bcb443df95c3e7c818266af1737e5f7f739e016aef4f96ca50c2450effb56d4be4b87c00c7812b1dfdb4e515615fa83c827430c71165676d58bd442155896d16d89b2835140395610984899052f48c17dceadb54e9bc3e236f46b2a4a151cdbe7c804fdc9685517dda832a63ca196a636d789888429d70fa811c735d45232038230444e74aedcc1192308209d8ace932f430702bd4b2438a2b1962ecf73382b5d77f33776babba22146728b09d79582056259324622bce2eb1112c031cbf548ae52e2cb353372a2bbd7f3294c8068c55157c2f2aa5e7ad3914ce7ea2ecfc4f6291440d362d6af1bf143f018a57bf340adf3137015f5442941b02bfbe0135a667f9ceecc275925fe247c20485b624c3e5e4870604964bd711b13eecacb50d4de76608021ecac1028634fbf195a896151e544301be52116bbf39b0cbd34d99cf3c05a1b36e39fba55edb41cd3b5e3fdbbfad999e7c95801e3e6394b162e09e267f4d19bb9d2cd9f5dfa33743fd5446763a7f7f7526c7c7046fce30f81ccc4461595d872dfb921599d2ebcbd51f09f492e4104e1558828c8c173c3da4b777d582e9ea1ac263e98cc82eb5c920d207567bc35f0004223c4fea762272bae834797f029947f1e448380d01136177f81adc5ac89b3244ad6d9fd5d6c2877a2f3e4e9d5ee324268aec17e19bb29ee60224f5b3ef3511651a4418e26b4bd45af67e10396def459a378d8021fbbb63e6c016c79a4d2938fb466c393d9472f791940efa151dbae8419c81fe44f75e6ff2594aa542b2b5a6e5fc4b9721c45e797b4c16b1a327f1d46263e76e9eb1d5fedb2b8f6478a0d3cefb301cd30ab9fb48ff1b4a7dd9b789fec5af106845d791eac64626bfa4b9e065a4236ba9d1d07964137be5f59425366b405b93edebc23d0f90f3cb29668c1460c3a2efccff43705974b1adbd3f7321600b703dce9318efc5e41c5cfe3a6f64cfc337556f86977869f8a46bdab434c0b8fbfc3d67e76f61bc10983ccf1faa45ca95a76057328d3386f2bf1fc52833d57f8d5d81d161a15c345a6811214548a64ba25bd43be71318951d12a4b7f0bd9dfafc892c54965657aec96a5838b02cad0f483e4f653dccb50a340918587591756e7a1e65ad7eb5e39be33690b9679bd26bc767c066d9136dbfb5fb5a69b9f21e60d7c9b80efa78360162b0ea7227d4a6d9e32457297d5faee4fbe1ef7e9efaef6b63bd02f8d3f762354badbeca4ea1053ae64129c446ff3d655063e7e0c380bdea69f480c3a470ef1e451a90b2453101a8e66bed1759dd521bf0fdb2289b6ae1a85532013afe09a5c2273f11c8ebba252e1a5a61df9f98ec2b8e8b9de7fed27f5ef1b7c594cce67c79dc37f9d31bb153e66085d6d99ef7685506c65dc8ac4a76eb5146171a3326462fa2a7fd51a86adf5148076f3a83bd44d25a89c2c239c8ee8214e320a62df1bd5baa109399831c8508c977fc721a963673a169000551b7fa6fe20d0870c3118b838be757fd8a75de58a10cc73e4baf0c8818417295a64aa164e9c87e2ad5711c7361cdec7a619479d1f7604dfa923fedf05d7a188635c5dbc274282d8863662a48900e346474e56a327497da74895293ce086eaab44e2b2814b58ca5f683956465286b24fdebfda1c18a5b81ad1321d25afa4f92c729a95c923f8603279656c7a90ef8a9f2ff78bb69a3f2697f8358a11c540b098af8697a2e4a3a750a0ac50789355605d19c487d54544e1c2e4eb318c85b7d3eccd5c0d3d57a69d4303180cc670b1c660df00b625563abc97b58151bbd266b86549decc3e2a4bf1c8a7a828bb232893b5f33f9f581fa6c89e17117b770259a86ca6a2e8f9072e9defbeb15414e57a548371430ea938d906255706df34c524d86c3aed79b14454786a78eef98a300086c609226acef8902bae4e7c2a1f410ccf76372a93e2fc9a11e72bb383d3bf338159a5bf4d8da3a0cad9423d4ffe9ab73fcd151a72bcccf3f52076639517ae31e157d5271854b6ddab2270440e80df21ba6fae5842fbf1dfcb0b837d3d5110a02eb74d0aba09b09e3c8e477fb8190a9f0ff8804bca3e36ce6cec984bbe4687c53ae2daa08d29b5727cc902f1db2e2f9b2001e35dc15fcf0ea175749efbf47f01441bc550632f9bd21038f2d940346bd89d872410de3a3b62b56bc489443375c1a5a19f33e10eafee0c2af760526aaf0475b86a7648838b19a2cc7ba133189c965ae846fd7317bd57fe4aff327797642750b42033acd0ee26f7055705ce4a63d8f8183b4352c4d330189adafa7bca278d4e22f99354072a86a2459cde2ae9a7c39eed699e597f7fa90ee2c45951835aadf29256e85faa27d561750d874ee9a98f4683e04a2dadfb7e1fffb8af00640896640c13bcfbeccb4a971b23bdcbe5b388da5298f6573cd5ea1d3bc5db2402abcf9b16f837da9b6736cac2a1c370bb40f6517b0f14b7ad3f5cbc22a9273ecd9d9297095d199711133826505f82c833478805a392aa5f291ed9a5761f7c13ca3b70f3d73662fb3bc82184b2d474094ec9c0288c8deb772eda12dbbca462225eb9acfa3be80badda52b5ef10fcd7efd1bbb9113e57a3d1ed32517c76f4e8e61ff916525a927367002f10eea238e081ff16f829e78876dcc8124217bef73e19f461bbf64a9b1f68e1fc3c00019b746b258f5b70754f28206b1ad5294bda28f54c831967fbe35023e915165ebcb78e267c111bb5cc15324eb5c6f36cf33046544325faeb73decf3f5b7d448bd585e5ae2a89529062ce95da960ba6dd49284c7c44fe82bd406f19d6120537252da39fe705bb70314c5c75b6c3c0ca13a113efcf1b8366e19401cfb4431c0776306956f70e9e956f5002d1f5b9d9accfc42b536f415c9c1cfa439cb3af7f06e819b3d5c4227f9c2aea595fe1aba042ff4f7e2ee034d8cd993d006e1e37d7d2b2f610145bc9b231d1819f06255819e3d648626fac1ff80744741f749e4bea660d7d36446fbee4a61e413dacaa24f45bd623648d29783d61578fdb103745752e6696fc04fbb15ae7c47517330912af4ae15784c0ad0a5c8357eaa2423373525501dbfde5d7ee605634329617d453f5ccbd91a54d2c240294639e76b87595960c6977d3260df8df2f57436b4fbf6e21dcd2f56b0c69174a5436e3abcd90fb69eb07940335824231353ff2e53626f7b324341cd20bf1525a5285550c91a2e6de436d8fa4130b99259b5129d583cd59cc80b2b546c79712de89f42ef672440740b4a233118bbdf4f801a9163d53d2fa7082df6c933f4eca798d97e39b7737dc69f03d9043acaf8a9948fda5c590c3877793ceaf4f8ff572e1917d5b7909b994d07fe835cb70019f5c190a3bca7ec7b4fcbe72753abebd5c0e05b2ff7b1c9fe6c8ece69fe3d9d96d8faac4112eca9edfe43270b31894b282fc33a05f0352947fc695a648a1ea66a92ccbd9c230efcd7e5332cbc9b2d9c0fdec4c507504407b6cd94a95482c86af33d8c6498092c0efcb9564622ccc38d6caf99b6131ddece6ee1921e72c4f9476bfea897d7a347d0dd56288860e26116363224c4c964952bf74193f8f2e023a12672b855f2b626630b9f3997c672daae837e5f0cddf79a2559440a224705bd774d0419c19935540b95b6925d7dc71051e53c39a5f4d8e12abe8394fdba99c68b64178ad7b8c3a25f3e9bd78583ee219bb8593cfcf9e503ce4bed90f47bb2721a8f6f00778b8e0eed4231</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>贪心</tag>
        <tag>考试</tag>
        <tag>状压</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200824</title>
    <url>/2020/08/24/T20200824/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="301c80d9e65abb1e844a416cd949056711021bfb189a655362020a201f8a5ff5"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>数据结构</tag>
        <tag>Dp优化</tag>
        <tag>考试</tag>
        <tag>状压</tag>
        <tag>LCA</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200825</title>
    <url>/2020/08/25/T20200825/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="af092571f7d2ed6436e9abed8104eb0febc67e1710608241aa7f221f0e5e2091">ea28f56739cdf7e0c1b6eef8e5c0d7b848fb7d1ea2363cafd5f7408718ec2a9ffc39d9834b8cc63feb027fc4f806a8ce9cd4988bfcb732d81dabebfebe6a54088e42a38d46a9cc9ba920023f480d650fdda9482d96868f350fdde8d244c8d51e442e4081d901dccd6bc8fee1d29c80a7f54465100f1272d506a3cea30eb1b661378996bf448b8f570832daf82d23fa14fc1a77327fd9ec26b7654cc48111e91e906968dc67420a9574c4d0b7fb987411182925498e4b7100f17c34378cee356f5d9b39a9a3ccee9225522042f8224b89149556306ce33a15a99c29c84608b16e7a338c6b5ecd140f229043a6a0b06544e5d0a6bc929be7e32db9806f50d3906747586dbeb5a438023d53a5ae67f2b3e197a7e937718299685874a309ddd5ac5c810d6b1440e313fa3c7ed4eae243873e394b48c62e739a03b15f2159da847da696881429b7508f1750defbc1c075e72cf281f440249567b557c205375b111ff993b8a3de4d6f62ede77992614d4681812851c5e44278768e1c88c0fae85245a07ecc9edc84841e4fcbc8c7ad0f6c0b1a10909dba203e4199eab4a316010764a0be79d82cd361c29302e0faa82ace52ffc719d550eb66ab53ed2e45e3af07fb8e4b34d93c30dd4e724fbb1b6980649aaebe677d2b670c0936d4036f99df761f6d73d93331909f2cbfafe4db9910378e7fcce12bc9c24a0ec86622e3f7ae18888570c856a10b16fea9c5f5a92a0a9f7878314c7bc9d2b00616ccf7cdcdee2b9eb8b4a76071718eb8b0b00bb3e703f2894a79c7cc116cedd8f4d294c7da1001a8bf478793ae8d8314d4f457e04ad513cd910c0745d292cbfded3abcaae5b8682dd4e90ddf89e63b93f05169d46c47d64d183ddfc349324840ce3d88b2ae8bf51ebaf95fa5e6c80135cb1d40d922e45ca775c06108ef9b7dc2b808a2e1f745e8f77e7e73ca3679dc559940fc34c712fdbd0e266bc5734adb64647dddb22e81878537d7a12acca7f0a69132b8ca39733dc940b1ad3e894f58c44d67d6de42d13f7916c39bcb380946fe0df425d9795309ef7823591ef646ffb300e47799edf5cba2025a470682a634850d4278b0ddbd30d61e8bdf6253a6595cede8ebf06d18aa254c122377fc41a64566dc1c7ec152dc0c033eb56961a29e00c3d111f2c93ff8f09b7dae4b7b040142bab545310c787244daeed7bbd87ce0552460d619a5df424fd5de3b617a969e6b06c731acc0cf53e1e132d98ef80a9a93e5cf5bfc6b88ef5c644a80d33166f36f58fed5fe0a9e6879d754c969714defbda22ba581fb786435afd5ffd3140a67027b917a979f1b8aa93e564ef161464efb1f67c2e66c0c0d4a077e2876226fe1df06c79fcee20081eba3ac0fce970717f341f0548bd8aacc7c3783342ec061626619c636240b553af32d25f789fbac858e5b9ad721017545eb53f926e754e2e23942333cc93d0774016080836d711f5244dc8911edcda8a6eedbb6514f1d9343ca3698b7e508c309a4812a8fe10d833cd6287c7ecab23bb79fce00bddbc011cbb7e7d0e9872c5d5fda211726e7dd6d1d55ed0e9e195e082cc6f44d91788d7122ead01ee18a59dca094287b80477a616f0c78e79d163b63660042abdd88e8fb7c1404e932b7fe75867d4c326bb1f34a00ce254855090119744d27cb17807a006bd863c0f2e89ae355afde25200a0b93f8df6996e5cb188b9e7d49dd683dbd88dd81188c26364794e6746fdf6f5cf96d19eaf45d7c49844d21362d7cc09aa03f7174e5202436fe5af022ffbf7cc23fcc44e183ec7ad1af1c4474c4b1800d7f2e570726e4e6c93158c051e0ab723437b0f77c73d30664a8ac5b7d9a17ed290ba36dbe1c9f09b07d515db1a4221576ecc9db96d3b0150b2646f0de1742a2729607272835e74d136baa1f68736c601836c8d11e79178bfcbab425f8be7aa56458a833a855d785b7328611537540157d64496c02dc38ca6150f32338ba94c344113945ee7dce6492bfbd064185ee4ac93267b854831370227098b28bda6f01c9be4ca5e679578f4c913342f599b562358a1b3002107c7b9b7f73a4ca863a3e8d04022dc520ce4b26292ca1625f9fde0925bf4bb65fb53571ad836b4701425cd33558a97b4ed7e23892f7347ee64abb0d7cd860d86105c45499ec12214ed6f4890f0d084e8b36b2900f33334e299bc17a5389e3f6952d48e8a5518e6ed78bfc89159973785899f69ee0d7976e575f0108dff8320c28a8fd7d2d304a8095b2c8b96f1db53d6f2dacd86451a8d3fff0672490807da062314349a0e397ce55e6a2648425f2a7d847ff30dd31b9abc6d533e1ff44e8899c8832b8003de9077da5f3bbcca22a1bf4184c33cce075a61727f9b0711621c2a04950fbd17494558c6c7c6f78fe0a1b6f875bd9c2aea3727c2fd84b536af461ae953b5d0340b24d708c20b0b19b1e6fa26dab882ba516ff5501cabbc4c562c00130f5f7601e8e567583fb948c90ddfaa88ec3ef88dd8f0d3fcc297e628602fabd96a44d841c4192025e3571d208cdeceee2064e1005aa3db54faddca4fedd6fd1780575fbaac9445f2c07f6a60c2e6e94382dcc99b5b4f5660c09913c855d768d931729fbe95ed56d76b4a123bfc72e8c1ac239d5578f9c832d8acdc71d46db90416eb0eff85ca6fadc334c7c17329baf1723e2c7754f9946c112d94a37c49dc14df29797ae9c52beca29175c45e7c757d382d514a625898ba4177b4e216998a8243b3fa9e931eec87b4620f1783925b354ee06dfbc743773fbc9de143669f183bb2654175b62f83bc313ca799be9706e6b1aeb48b2aa0129b8e01e6af6af28d0c0103766a6447c72f2cca783a585f3e37870b4cb336f84cd0381f49dde7ef4e3429aa5efe42d7cfe4c0836f18aef8892fc4cbfc067f18108d4853bede1e995aff42929f8b3c2ceffd7a79235626d2e1c9a58f8ef36aabbe187df5f3b361aee26a52692680e6354cb6467ed293d1d21658a00994a335da86f1d408b127481d6a399e709ff8dafb966530c1af3c482a57f580067dc7b2ec791d25077aee4eb7ca7e599b04bf0904bf7e747f2467a40e9ce30eaf988fe9308228823def317ca1c03b08e8206d44a0e561f861594452f9e006fb80e2b7a94e4b5410ea913a97b107846832774102cb3f1e5de5a96b7fcd4b950fa9be57c65cc9066b958630bf6d944c6ee0ea8074c37b5c0bde0e24cfb855767253adf09cb070726ced2e947123f471c44ed4a3cb43d8e9a509173c709645b81041cff04c86dacc04524c9b0599be0bce935ccbb18fb05e001af50968fe2d76f73442a8f028534c6a651306989c61cfd9bb154d015bfdf131e87d880935fdab9d14a2c10c5e84b25c827277e52cd628303418ad35f381c62d3151e1a87257b11f383e58381cc00df343e6f010e4a9547ec141294044026859cdc03ff8284e0bdacf109c5299adfdde4490dea965a9a477197b3ebbab8485a77643d0364d96b9cd5080e22019a5eca3ab067185fba81a4e168e05c8e1c53cda93d7abc42509bede594e6acb9164b21c749f30fe93b7a035c8d5839ca436cec031e561fa0ee9bf4dd9a7082cf6823edf5fcef74f8c997b2741252bb2c8efe394d02d84f3ed4af616ddf800bf8e91c40b59f814774951b6d535743126c3feb63528942a7478fff937f3a04673d43b1d6161f10968633fa955fcec07f69118e31a11edef881f21b59d654200bbc1b4771ba32ec03b220435338829bdc663b454d550379c78baa7ea3859483760288d8c1d442a65776b0c6b6087c20c24867e21d192c522703056b207bc4b38bc6069c0886779e591b6351352757c1287baa58691498a34a45e6fb5794db8fbad433f0a841d50e3ea446e22bb0dc537eab4e6d05a9e8fb5311fb3600b224ec9d57a7cd0788e1c4004dfaedfd10d665d39bc3a8e2f9d907784a2c16c754574f5d24a2d581b20d08b6828572da6a50c8d89214899a189c72a63f3b8292be7234e959f797b9dc037b2b5419de9ddcb4459a450bd7b2064ee7bcd88be26acf9085fe2a5967c2fec6b119811ace8742ba7e1db566f1d5774c173a712e9ac8765b078ad864516732467a6c0a56061181e259bff28fb9b238b00269972c37a89f925714b17b01434f52ea0d01b1dcd3dec3f305ed4002efc953227dc3111fb2c1a17d9ff779a6d32380e680115493092c50fb007bf4a633933efee2c7544441909941757565c984d9700a2819127cfa94842cd24468f0ebfd377643f261a9d077c7ca8d553b63095f7b2dabf71f0331cb39b77fcae6b192b6e664be49d472cd7e56f2f768d93064739f91f03a4e1a0bd619db05d5ce54e43ea81768fe1fb08f027e40c7fe2c3a3e08497982521bcb04d2d45c329912c8b8e930819c03b779d8854031b658dbc244fe5c3624940794f4ded62514e0c23185adb59a68a511dfc66c0da263cce6b8f410cc319385ee6502d2e3e799c1d581aff43e85f1442cc0ec24749e9be8147d401ae3424f5f0d80cbc1ce9fb5e532647ecb4d13e05935cf887e2442872d03830277734336e4ad34f42842db381a4ec6150187f9760e177f3e87dcb963261b8717dc48c2de5d1212d324ee9e3814132ac1b50d98c1df39e2127cce0ae3815b9867c8eb176db755c91a6d1a114213ae22fabd3038c26656c4c12ba509c92a1548b419143bfb76635dcb51033122e999eaa84a32bdd42ddbf95c603b2bb9863f1d3dba749270f74aedc0890bba24480c8e94907482df832c081a74477a66308bd7a53bc63df1e86a1a933ecbcbf89834bc7f769d8b42f11f3d819a80d801240a379556af9f481d8935045c6d59f687769b7125ded0bdd8149db7683ad21b62a7949c5cff48577e5a7da6a8a8751ba52f37481a75039824e7c08bcff6cfdce3257c870cf1048e4aa14515828d5ba7ebdc5fcd3630fd2aaedc9954a1cd752eae4296aaf340fa232199aacf1a451e63ac54f80afee6ccb25140b3d15189cd67baf3fa913d0304d7dcbdd39d4d43984f581b814be02716d49e14853912368f7a7402b1889054f68b4e6bc70319933939a5e8a41b3cb7b1dea4d1ffcdbac9d25945c826621db55f7b3cea93120f396c1144d1ebaedad62b704c78b4d0847905f775a4a8fca684076931ba6be0099e9579f88afc6569c872b59a2db7f29aab8b753177d93ae58a1746ddd043ad194a8c8463f30eee0fdfdf766aace7763ab91be1e6e80a85268339e164873166feacc9c60ace483f9287b7a3c1150d8175466cc000c99d0457e68d45366fe5fc6d81c9f51117671f7f11601227d530ea9a4dc814554392575d32c1ed78f381dc49b3ad3917b24ca4e1cdd768ab36459ab11b4f2d79e5c0f43c1e9b38d57126a0bca22c8f424c7d916d4baf2c94cac44316c35700e90d85d4168e912ea3c64533f0367f0a47a0fea5cfdaf04f6c6aae844af87e75346a852cf759733246e7d0b197429338b030883d100278b182d458bfce7f92702f06f45930b11624fb25a5b69dde0502dc6ca3197becc02629e6942854e21f9c0a977b2c0bb6016996279f9657a1f219f7a4ead481b22afb2641ebbffd662c730c17f9a772a91508b3ceda1b7db7553dc8b0328acbc76b088ede74ebbff1d9d6d2455a1f96687aa8c8e0bfc59abc824318a407200889f3b4f00d23e0d9f179c1b28a3be88f5ac0a4339d60b326466c1f056bbce4b3ea65638ec8cd9687d60161c39ebe8703cbf4b910bfc81d0be5dda2b7a727bc9e3c1935d7b4009924178797704a6cca710964dc78c38c28bdcfba1b13aa6577fb5c7c82c7e2159ec33bcd667d007021923514ac874253b078688605c346d91b80ed090df4531d0ba766359d02805d4717dca1d734dd26be55a230c5db1a1d53b76b25bc3620be54af5641e728a9a04c356266762a5867d5183334fc2d2caef012d09ae7fedb3ddb8685c8ab61d931a12dde0b62c92e6bfbc77b135f8a5f13dbffcef832bb8969f8f188eba1f12c8c4205cc6df214aef6b55702c6669dcae5dc4f57362d27dde4eebdd6d051baf1995b0a5a38e0df61dba28372907e5c52e93290ea76cde8bae874bb79a321246e4d2d4504b73a38278386a30bf39563107a29da716c60b11c598065b2553600c0e6851c1e425e8a0b38af04caa19f79844c707439995d270facf464094d8ca180266737f1de2e03cd2004547cff2d0146490da8c1c46ee69a1fd675a4b19858b1bda5c1181e151968e88dac80203b22728b23df1a5ac68a665287625fc00fc4bfcbcd91766ebf75c8d8737037a916764ff0b3434ec981ba045a1c4afd5665b25a3b9e2a746022e7d346d729c2ebbd7f7959ceab9affa23c9fb5abde9f5dfa7860ef9379bc6ee1ca8babfe8588cef48724f634d327f6b9d3285977719f74fc996346216448c64231727c236b133fb95a6747959401a913afe449d84307b5cc4e9c9997b75207e9eafc156e3663f2585b903e331776c40384a649e923a2a4a6963d09e77fb5ab05db7652bbecdc5c8581702faf30553ffba414c17fbc40883ff9a179ec59b2e9480e4974182e83fa8be5da94a12458718c7923feeda6f41e93794023252cb536c8f7a73f9f06125e5574a740e9edc0facb4700844247a500410ef4775aa45fb6df13fdf8e4bfd5059466ce02f1b210202d3f04f451b927ae03b0ec9fa0f8234bb648f196a72170548cac4a521a454e29efbe6a184b072c8850363176f2b650b5c473d0a8aa8ada505c924c6fdb42f003ae1515a89741dfd5aad5262d9d5ac8d9f5ef2753c245a985550450a8dd20906ca76d37013c67dc54b0d1cdbc478eba33e11b08fb48ce9784c2d007b28f21d3f86e1653d6dee968c59c234d4dd75b463cd5e3861ea56587deeda858faae25396787bb584a06fb255006aabcb520b314448a52e45088dacd4ee6b8be44754f08f4f595e3edba1f53a1215c2d89fef77f802b96fb6202bf5d1ab0ae754846a836e20e753fcfcbb3d2cd3fbac3475d966e7745e9da0911e3de4b0be8b90764680c07a964e71cfe199a975b5458003b1c70f3576eaab43c2192012e2fc64cfa44be391e0a8bc3c72a3e04d7d0cf118529de6c13bacd760d896ada828ce612c860234252f205000e4626be74f1ddca39c1e912cafe5540767db1561c5c423d27b01290747ac6d77b8db70f6f6b36458f91d0a444dfa15e836725b6e89260784836d73a29184d52f24595c0c11c28c080c337b8c785b01567afa31a4cf329fc8dcc3c4436618e2ed3551b3864d58a72dff7af011b4872d3973913454e95e407a6c1499b312ad80635160af0118cdb3d476ea514a12f21d392845c4c81b79efc3bf1ebdbfe8deb7a60367c47a35e23a1034b73b83f5ce704442843aa6d261d61c6ad510cb0bcd0bdec9ac427cafd53c9c7c9ae3ca89d705cf4909c5cf2a8551ad2876a4b2c858d44935bb93b3cc449a06cf7040ffce3af4ee25fff267921608cdbefa40429ebd0f699c0dd82fa776d7f640adbc40f1842eb72e798b465fd51cc52bfb0c79abe6aa35dfbe855529c1c5d7089066ce8899becd639687ed063d998c8edd38159c9a6493a629c61bb59ac79af2e28e7a6d056d519b4a28e33dab72a9a9a08d99a6c6d0f5d17dd1b2771104d0e72914d02bfcd74b4296184a5b12d63b7009650124a9f17423b1ef21b364de6c2645ab85088289735dc87fdcc103a9619458154a18e50bd437d4375311e678275a89f57e123367094cb5de0eaa80c6a3079ab88873a73f44934423296b36d4f8d1c9c51591f82a7ed3971d137793af19a60d5c0ce532c8f7b8913029d9e460ecfcf9d441e294dbcad7bf58b4bc1f139ffb796ffe6f2a5d2d9cf7b9b9e023f71ff9b8291f41006bb7933feda7a039b254bffe45108a2533dad23b7e14d9253c488b3cdbbf6b662df082033bbd5721b831956b2f4e6972b53af613f7eff414e6e6e591982cc36ac1d499580b5b85f67e562f920767237480297bb04344a50aceded8bb6a10bef90b9f0139aacad8d1a19d6c6ed39961cdc6d8ebbd6e2d61b5932d4c31d7a3845e9266d71d7efe651eedc4f8fec1cb687b15c9bf93dc0abd5092692ada861fd2402bcd190cd5a7c35071392f546237751a748b6a24b095b4ba85555bcf30a1478e4cd29059deb75c7c191c499c52588f4d5455ddc43d616fb47c82fd0b12842302b21ea52a702b4f2e95bc7ae2a979371e0b0977a6b5044847258d7701f1aac93152c89b91217250499bfdb2aa7f38ba6945210189ea8ffd5cee2c41195caffdaa8b1291ab61cae33748ce7476091b67d8f3bcc2645fb07a276c9f65f8894772b640c5ab8355fd1a18f95e7811e6d81f5e260fc66d4ec11f59d6d0fe2a9a991ea5845323311402c46516b8211557bc83c8ad13bc9a94212ccf13debf6de43309e7f8af3b3089fe22b13581220b8aee48ed4190fbea98c90f6314aa37178e5c3bf18a05e68c0cee8b86efc0dbcc5fd16cc29a802f31798f91482c37e937bf1d63613284bf10d30db001c8d9749a0c32f4825ac394bc0a94e249ffb36b0cad2ee652575d7bdfbbf177142814cc64c1aa793129e20f1ff3e46ef10e6680d33d3de3bab3b7ddd15891f62d888425485b3a1856ef5a34cfb3bfd05c27a8ce61e184fa0befec3ad82206da719ccb04427aaea6bcc27549c9985fc8798777f4d59f75c092fca299fb73b848a33b3b4be10cb3a591d637480dc7c6bfd096385a3337d61f05e48382904681c28776c1dd40ba4c5c04311dd6aafce92fac9c4a108c6f1b0c1e4ab7ff376080bd6eddb4201579316b2c4929c599d94115d596ac4f8c9afa8c693e7fa50b3ba605adfeac375a87b77f7c00cda69c317238e16950f97cc35d1b53b03a007cfea5a577b9c38e6db73ec4c322768abdfc9e2755f61a3e2e411a901cd605b457770b04c3fbcc2b7ad650f139fa48e8338679b0feec109f7b13c5bc97ad9ad928012cc64ff92e5dd281be4e1b5d0c0d1cbccc600a3a8f71625e5f0ead5ff9e6d6da48a360c7281e7da91f75e497bcd1c8b73ffc576fb87ed375cc633260d6101eaa378a2ef24f5d9a7a8215ebd04fe222cbc6ce1941e5f74e7e4b523849ac7019c6bd674c8a89b4f3a3dc27927f142b7335403759a9854a640c6af4e76596e699ef2ddddeb4581455bfe2eb49f19dabaef1d5d43d026c1b955e68a359c9ab267f739f657f1186fc002a2f2129eb942dc80c23159453235da952b1761c48c3c49e1694f4208e83eb70e6ef852d74223f2a3d9b8deabdc638aeef0789de03f8e7d46de38c418e12435f641bd0748b57f0e00d2696e9c6314d3d91530396ef3b623a8cf6153f088b78ba7bc62952fd49a9978ce2bafe6f394cc305ee9ab4012fee219f39f439f017a7d140b33c3f7cde1160c32c51ee9963c6f06a8d3649c3a0e440b98a34049b4793ab2e1596806a82e8f3e784af9d30e942a2ac1be2932440f3603cc5f2e72c87801e5d7980fd6f723a095da9f505f61ababf6ee8eb1309d04f217b43909ac39627522caad5737a762b95315300e4281f32a7a15d2486037b3d514c8b75dd6315419b179ad20d95d7b87979936d86bb13ca0e65a3884743fe29cf3c98946b952c24e0801818d187a0fe75b05a897a116ec3e2af4ab3f941a37fd7013cb6ef73dbc51d113f1744a5f1015cb36ce704d8158541088a35566b2ee0fed813f9bb44695eeace044df33d21810731979201840fad9c4e241a0465d0355e6f014ac8a42cd8faf513dec393979a891749d58fd46135a3b14bca716efded56793a3fd20a6b1200e86eb96cfd76ae7611f2da17ff39d8149ddad5156ded39c540b9c02926582550523e88df5be87ede1225f4e351ce8e300cebbb63059c18b89451d7c83cc0e05fa47332b4786c35c716280640eaeab5a429f398d69c294f8c2a690ceb840eaaa15854057d43ab3da64fedde209212b7eec3dc5cb9c95509bd831ff759f315e17fff4611834bdbef955bc6a77d6936e46cb2d4164a3fa0bb69119fe386ea625c43879c92f32e53167ccc4a506e65e31e2ff0d39ad94692efc67752b7cef4309f780645ef8ae2d4919bde6d17a377b54a9d91a4856891945d6dc461ff779dfb53382f87eac60e58d0025134b3c472a600fe298f6b329c2aa11b169f4133df08f68067a31e4c11894515cc4f2d25bc1a0dc9bb0b33d616d22cd973cfdfa66eba1a2fe004df1bb0fd5f6eb06ad6ac6fa0e1887d3c269a4603321324879590198c08fff032b17443ebc0d21c5a4d3241bbfaeec69d0420c1a775bf5672a7fb2cc04261478e3d9705014266d2458440e34cf0625c3930a345365af151c1ec18953160bd7ce9b52dc97707fdf7a844c5f604db3c3045ba1e57023b1ffb17e79e1a223abe3b529d12b35f788efd1daf44f4dff87525030ac3dc68565a79d1d58bf2e1ffa9eb8f79ed29086d297b7fdcb88bb92c3e02a83479066ec6d7aba0f0d7898a610c09fa38201af4fe5aa550d8c451553f7c1d369bb6409104d7e45c67a0201afb670786cf2d439695967628149741ce91c61d37b63087ddbabeb2de7c82457a8788214bcd1fe477b9bc1f33a1a4a7c66bdb210235205896d9c0d4617631c6f925d4270c1a24963f45f41b5d488210f41c3e859ce7902f013ee900b62201628cfc812fce71ac8bb474c5a4408e7684d4fabad59248a324266c3d5f5ee802e10b63833121711fd47090bbfb2fe1d406de9c4b4d222e5f64c77321c16ad91c5b68d8d05df4845a603b5aa102406e6e40262df3917fe19b09533ea96459522088ebdfdd79e85e07b719191b630e120886d7b9805ce5c08d9c4bf7925882b47947da2104aeea3e302e376cdab9ac6977e8bc5d4fc28e0d70d2e55bb7ff22234d62534a01962809346b7ed62f61844bed0d7d13cf54010b4c4d29e7d61d73047817abf96cb91d380e5966e483b22006965356918ec41c9c91661535cb75b93a9a45cffd5513e315f2f76cb94de6f8c4089d36d00b64445a93970e1dfd4258ca70738103f617a4a1e00a1e5f6dd3e01dc45a36286de0e5a7f839febf306b9e450dab9fde588e20fee1c04909c72f57c2befcd2e3c0e100228e01a697e77759239ed2736653e6b5a5ee8528ca2df74590d8609c25b8f87416102507dc64ac232e7d4e0cde566828ccad9db60ebedc574234f4271385a7ccc358677244c395428d79a6d5e49951ac1265317ddc9fcac3a14ab2e501c03c0b55dfb58be77c829705c7e2c8092b23dead307903b3aa59767b9932072129ca42841b11a4b6585a52983944febfa4fbf523f961d05664de00a11efc2ffc6414c21c78595ec054b59158fe918d74fb34d2bbb6a43bcf96c9897d875f7352725e36a34f730b46153a002b12a1903950c9b8a567f204c1f33dc4697863b40c9cb1522783f14137474b196562f98b9ddb459b0ca104bf8a5be589b7cd6a138a6b2a18ed4d65556829ed64efb576d98fb6ac99a7c3e4892a68e0a27fa7d788af0af42eeea139a02facf882cfe0cdff4f4e224e5dabd68aa6b34a71b6ff60ad56a2dd689b1e907f66464396244b348547f2b6f07b4072fac5550f0d1530cb6b8a856d798de953f4842418cb083acc29110dbe455d7bcf7b2dab3aca933f0e15ac348661065b367807b00f87772b93a1f9a3c906a296637a4f109734906c70dfd821f027d0b01fe81c3b89fac5f42e625b42ef4612a38581d091f9392d80462148a9392f5e253e81c8975a24b86c63e3f143be12f768b98d69d6d0d7ec75e4f22c5b6d37fbb4f2f5475fe07221c277ad3f026a83265cb894515008cf4829d9b8c2031a592a0cd9b3206a073e2b21b7f2972878dbd098ca121203e603d640076e7736d56ce696ba5cc7fb9dc3a8552fba7381240ce369c5c99f2728e1ec8956e537861549aa4c4305ea2c273d3545dd3075cc9d89885692732792e49581513539e9c1ce3ccba6e82e5fa632f7f89f6104153428ced06460574b3367249a9c117290ec3eee14940929f28d6e0a05ad87162ef1a1954556b4bd4298fa896c4a15ccd0f318f324e414243bf0ef983c449af6b9c3e88968598cd2603fd99e9e5e058b96f1ab586e2eb88de5aeb268e00a96bf85f0c55d657b1c309d8be86c780ef40f12f312e42f01fdd8a8913ba04efcd1bec465b592be854574b091c4460f90c6e6bf0452f566a129f766eb83da15f0498774594a230ccd1e3975972f85c3986d47ccc01a28292e3fc3e7f5b08d1cb0a64d9822c905893eff367e7cadb22032f252d9032d654db542e17b72a0a4d3ae3db0a2bb4a305af5a40a481792a6f73268305be0bb00c3ee4374c4fb74aa55d644accc1a27d2727b74aa19d7fa50cf6226ef3b06423aa6c379a4cf8d47bcc29f5a820073cb18ff5a2a7b7090aac8ff001f5b294b0c34c07e97939ad3a5c417204b6fde71524a818511e6453e3887244c9a6786d0312f06f83ad689a220b4c79829c7ee33cb18cdb63793dfb237fec97a482d41666c03c725296cf5bdfb652b864c5d5b04c3ecc6eb09acf77e33ce8e6c5990d1520153db9dcfae94043c652cbe3036091dd13bf3df27b2e1f59d322ca35cd92b7b8484aca592d79fa6e3f3d48a6974165786a04cbe62e68ef4a75e300238c250c9341f054504a280420e885673ae7197a12b95f734f47add8e292cc8d2bc0d8ffc7a05ab1658b34744291d25c52423b5dac2d62a4b9ce7e84f121a33fc373e218ce7e4d1cf2a8e2baafa3922a7885dce7796b2432bcbc25ed5c9fe87a156059683c81ae3ecb05038a941004081484e8eea2b185f5d279e299677771760ef8034954c365189e94e83dc3998881fbd2c01409ff10a986b503280b025c5890b75fe021ece30410d7c022d9166e8cdda9d234e8e3ff7f23218aa7c260660c797fd353e37acb60692043c4623ef777531badcb87862f450d9e280968408ac924b1d3d594191cf486ea23ac3bf399b80fddd76b07f446e884a6db29ae9dc07c2600540eab6d92f4ad1551fbdaf1286f65024b2a942837366e262c562d27f1b842cdf72549ef455ffe131d81f3d070b21964ecb0634b4e764d0a3cca8eba5c9d7557f0a78d4df313ea143a61d0d3ca9203f849fb9386c8cf0038ab209ac79b4a5be231fea2430312ab0c6581a11c8949864086d4fc28ce27aec9d25c21b718ca0f0889a4060ec7a77ffd696a64074ccb064d72545bb6cc4c2ec740d54cbd31291db05b8adab8892b4d7d07c5b6aef2b661cdc61ba86515afde062fe61576fb39e9a4ad889296295e5cb863211d815d43cbf4d4f8b55c06ebe6ff49f9d8f3f796e6870e109a64bafc345101363fe0d0cb188845a68c8d268a1cb7c0eb1c78c8eab9a12393510015c136276e062d49692d9b04970c7c5b496bec9b0c5677debcdd7ad7b6336c88b5767a96e51b1a01724dbeaaeb3c38722451b89b8ffe718b7c0601aa8cf50116b932a680a972fc966cc16f810f7bf12de3967a3f7fa5f4b8cc7c9f405bcf9d768fdce8afb8c67df502f0c2776d3a6dc5b9303a26041217c464618719ea807ea81a38cf76cf9186eaf61983da0bfe4269ed56f22a6e1cc1e2d4f0bd9f088a21928b686d8bc17fdcc19157947801469d6283f8f963f74ee633d54a1541969a59757e82759a6b33a180a4e350f733427e4d414c8ea2ceedf3e0894d95dd9da2c339c1086071ea9459c6d98221d76c4ee31bd309bc47e2e1d830d83e269a84a88351e3e86471800554a93c8a59d84e2148d04c87d73b4c4a5a4c2be0fbe67bf79aaa7b460c4a2539fafc873449abbeaf89f32de5b94840305c59a00cb688c7321aa9ae12c2a879f2992ef0c7ae5f8aab2226986b018a6550c6d7d8e2a411038c4d4af38ad02e250c55e489524d6c7cc3a6fc64c93d5531018ac225c8e3142b182d124368948dcd3da76a7b25c18f7fa7e2b0d1fda6749a0c489f2a579ecd70ca6f3e736d570c24cbb410121aea8c22770f00a59ae12b3ec0a78ea69042b7689524176c4689a20d190912eb24fa4d9598d6cd0a6c8cdbde5a75a6052322b69cf5750af065392520e8aa641c652ceea002773b06642e1215826faa6bebb7becbfced54c295c1aa1164f6ab98231d0af4bd6d608b96b5cc44deb3d80c29d2c94bd6c07f580d893736ca0a237658232041898b5fb34c9978140aeeebe4efad9c37bc59213dcd1dd27788ebdcfc14bfe72751456deb06ebf89992a0539d0f764aa2b1aaa323618c61f84ac98256dbef71f9c70e8cb7b7dd3ccf25a26637daddbcfe72dcf9c191622f42601c9cae56cc296e6a326e72d68206f760d2f02305c1417c7f1bfb90eda4ea22657795ca45d15360129562b0a628e2eb735c0ef6e1988ce24dac4338327ccade475ab3c67c929daae5583948e61220b2d05dc664eeddd45447c2024f2c3f28e7afa6c1ec7d747f6c38bf1e2fdbcfaec0c44fb883c5f2c5b77578879254edecf6601e967597bbe640198d4a7c333ab3b499e85fdb13c7e90ac06d4e31b346b80cb5deb57d342cb99a2c96209c1173a02d29327c4a77b915cb83b3959338c2695b0d784e30f526da911fb3482e61372af370b262f545eaf5be4cdfa440827317b60656d7afae1e2117e818d4d42ca4e58e64e28edd64115f78d6c22a77a066ae14acc665a62d5bb740339c587e9f9a212cf9fa6ccc820302a3940ce9aea91f3f18b90f5995649f0cc89ba5b062baa6e8ce6715b61b42c56b8666b6e7d46b14c6fd1b67ccf5fab9dd2dd209a49e6f68f171304bef434b49aa2cd700cd95e11732f317bb41663b2e8abbdc5f9c54ff2be3be7d1e164f8146e927f0a7ac2f901bbbfa7e7211725140076431f0e8d5d534589a39a5388d7d6c21c70674a27ef1939c3e7426b6d79e0383223b23dcab2d1679584f0689f470affd2c646ff434ddbf5c93fae24c1b8a26313411f47c1103ece016f70b750fb59bd357ac0f6e9099ee8da3362913871aec75092de2bc1f66bd9228305d7ec723049a76e7c4125d19ebf59b13ee126c5ea6504bc20ee4e62316d1365b66872f7d71348a918c8c2d4e44b505240ddb40642fe694cd10414ed2dbf73db9de8bf4e605436c1a59ad1705916e6a61a0bc05e74c086c3e552ceb80d3cea404aa3b5f21c5af436e15bf54b83f5f5b0dadf14bee2221712f4b492b6422e8fad1f8437c7c270bed8402fc13895d5c4b2c85aced8542fb26044cb90a0753885ee82af9f8904a0d5336d8e48df2c4980085b575f57c79450256e2bf4ab1e43307fffd0cd80b068cfdbe433b4f46ba1adda97fd5b4019b48b139e9085bbce6e4f24f1a12d56d4075226fa7fc5f3c8541310638af894312731c505af51b23ce00681bc1beb7b7f5493ab6ec1de3e8813bae7e6e5546b8d3231cf84041678a4b2ef3f479a25a162f14e1a7d468ecde10ac81c6e609bf2b17642af53cd35e60a2c20d898f6e272e23b25f139b314d542e590a46d734d9297f2e5eea9953d057859f4404512ae6577eebef893ab22908df86506b4c742d41cf8e6b28429e24a5e25ff3d01559a263c26df36edc607c3d01c073626a195946fad4354f1faaa01ab5893e1eedc098125881d9ad1ecf985903edae8964869cdf2280d7ddddaff808b8ac83fc2073e2104d5ece085f889f9e8a9c0feb6fedee892341ec970239da8d7f9e49b6cb1268d10d9f8c3cc1e287384e48e720e8c41bc8e4cb5c307c51ca0c5c9eae18fecc52f694b9dbd19b4a6a4a21314d0714da37ae30d863ed915d50418bec3d2cf8ebd184933f4e079fbf0549c8aba239e10a15ab37e3af09ffd070b0a3808441838974b67e326cfc8074366f2fef283f44de6d10d0de36f994fd9b9f87c384a8101cec7b2e05d917236c4ec391503cfb826a269ff5c562063441f51d5bfffa34c5abd6157ca3334f0e5fff88138b4473d644c487919f2011402f525615f26859ee084dd9934e0cc0b8756ec3650fe3aa88f976333a21864638bf4ed19c14e66f52003f3f092c2f6cce6ff45b2ded6405fa1d810e4dae015ed50c980c790ee6dd46ef5865d789477b4674b6a1ca3fc8d11dd6176ea7bb09c608c92850ed8fa59fdcf4ff1b627535ffb1e4159531eddbabf29243103a9965e3e71a14dd2ca63cc0093d8572f161854f6a940c42e7694c1e41ac4ef4af6b26d1fafe7cf311361c270f23291bb04d4152dd151083d206d6518fbb4ca1f14447fe58e64d9da0acde6f7d1a9e1f23aa12b8bbae71c93122abd9892f91870ee8caf5c4c2c102c93d23b5b168966ff39ce5b847e01da035d2548ca9f40c228aa06726755e5fceab284281d76f0b080655459363b6f60c269aaab6727f4d8dfb82d2e1144770629b4926fbb628626c58e29b1610c4cbb5639628c820f85928da7872d085b6243cb94c4060d92c18fcf6e1d39b6f4e61014c09463d6b1ecf4baf12753adf7bf5a2313a496c7d1a31a10dd616b3c7834147ca84ee3e6170bee2b2dbdaf1e91bd24b066a43662ade11cd8c382a89c1004ec333af8f10fd498e24e4ed9022e1bf51e67fcc9c9848b53f5568f6389e05068b40f4df746d2c4e530fe75332ff9fb8bf8003ec325b345c965bf14243c644cbba0d168bb09803cdfaf1c85ed812677b6f8c4162d4d7e0cf4817836872c1acf1ba72cfc021a866670914ca9e92ddc63be26c127a521d8f5311960fb21de20bcaec47034d9c51b29e0ad74c49bc9ff209dd0bb58033cd1a2eb84e1bef64361acb7e3a9ba032e57d5d8fcca9f9ff44aef6bbf15f4744a5da040560b6f44037a0c26c54010fa8e4b183ca17b2c775514ab8bd423b257293a3783d2a87e808e67f1a3e915fa6a36e2717915f6c001f700c160b252fc52ecb095a24f7114970aeab68f6fd66fde5ac7333f8908ff7f8b6bfb135f19cb571b7c766204f73f5d1df9cff5ddf64f51e3e7611a1ab68905e3f09866a3b95ec850fbb887819782a507d2b00c72102ff96b4ab094bccf9812796831fdfd02ab325ba897b76f506154b4f3cbf74aa15e30e92a80717a9149f3f23c32a817685639e3c1723b23d2c416d8b4556218450a67b09a2831506abeb23c949e87a427e7b52235024c477de689a588d55e47368410ec6c2500368fb97cb9b869374479a9b60e9a3ec28b925c75a194013f299e750d7b6461cbc65e75b10e2f9d8bdd37e24cbb92e3eec9b99594d81540e5cb40df987a6bdc4cd93ce8f398f1f891e3d7e629b8c3fb30ddfa828750a6a4fe6f949d083dc83c9409545282cee581f861a086181ab943ecc810e0e9cc04a361281b5c2f7c230ff04da724bf9a5c125aef1a2b676fe9d2f0abe04001ed62dfed2c1741ad16475486409b2520e2bd1fe2e0044b3def593e90e462caf23bb749b0c8724bb3058c99610c9cf457b0f873acc45ed18527fc4c52737a2856c27694014be9acec358cc8f6263fa93acb611cddb02af679e62923a703697f287509b2731c0a0df04c38b8c56e0a9c5a958449496c8ba4737622fb7155df511ee4dc1734af4a0c91749a4304d8bbb7e1647e12353ea9699bf71509240a3d55e23186e0992ac691608e365ce26e80080aa3529adbb8a1031f11ce0f5b8a106c62208e0e9127309a9b2e57926b5986373f2d69a45ec56f2683d0432861a78acd67a35c52d5fd405b2b57346614760fef7f2fe7d4939bba755ffac6dacac7f447f10403b17ccda9e9136f88a2f60b769fd2846d835ac8c5c0cb7207cfc4d8ed818ea65f3b7e5272c70b9288a30868d1f82d5c428ca770ec08f0315494cdf54341c90a449b272f9a2c99cb3cc70877403a08a1b339fe980ee027750cf243a9d7f7d5bb32f1a1baf3b6997956d70e34cc5e90a756c843ad90a280511f5a0d1c654339e4df84c7d8dede834125deef5a91b7166114bfbfec14bf2313a4a9038a1049f5289e260d504b2c0f9dfdbbb3f37489c5a8acd2ed96be5dc12959944bed61cefcebe776dd577e25ae89287dd51ca2644812cc1e3ff409c8aecdc614ff558899208e1b259cec1ffefbe0df2d6480aabbcf74d7b45c90b7c8ef6f4b6e42c579eafcf33edd844c1e8ac205b256c087c119bac6f8f52aac86a9bacadee8466c7e8e7bb02fe2150d3449d9570211f0eb6ff74d4b655388bc93b7f62f405da8cbb22b245e33a7268e6dbd89ebb59dbfdb2acb6a9c1dfa6882b40f0091aad385dd21ae9123757ff60ede36805b3f0c4df9236f2ecd5df55a41b777d2fac1a8843454819e496ddeacbfba522d79984596103c3841008071f06fc3503f2a98a9b4d4ad179564c0c4c7cd5cd76592dc239d7e957c56a8982188cfb12e18c5d470a63683eae255e6dec506829aab59a64efdb70dc2cc42dfc756476818a25b7cc84e61fa20d3cfb05baa356245e4f064e7139921b8a4a3b4feb546146dd273866042eb9244417d62ab3173bce0a0ad492db9b25ca9d292f8a21ebb1030f36313a96b0963663c205f132bcefa63f645f23969761287fafe90461dff89dfe67f29e9cd19608c32a71f53d1e6d550cb4c5944f0cd167043ba8ba8c30999199e8e330f00c920bee311374d27d87ae7c979a75c3d54f7a8b09e6ce22a6856bf1caf45b078e9ae405695dee34228bb320ab66e4b2440dd18625ee92262d41e14edbec809ee8c4c3449d2b8cd8e65c75044b16f96c323b1e9b7d8fa8725f425c82bea336be0d043f61fd5cf408552290d6b67ba41c2d91257e3239085263c74abea9707c052c1ddba6a66a6efb44fbcb2e4a1f0441346c59a4564b313a359c3c68350144acf387ecc6fadd572e6b9d08a7d6dccb877c534f0ab65c950be3bbdbed06b245ab3fe19f235a4ad3dfe798d92796389a01ffb3c7027fc8ef91a814e8f437ef1b22c7eb0d40bf53dbbc6c232016aff4f410bd17a1df8f477e58e1fed136bdd2c5f5dad39ed1b886f8821623da7b6136d2da94d77712b0c55a7832466404035564459deddef8d7c7adf4c92131cb323a63897bee8741e14cad158107b39a6ed4852f827c727f275fca691826d24fd7f6a72ee3a0a85ca85ac6913afba9f7655c3eb7f4a5b03334f3c388ebdd91949b9e68022c01f5c4206ddac9db57e9efc270f3296dbc7c2bf6465219a598defe0e42ee8ed3957b2f97c5ff06cd3a89b3f311bd303b761fc2050cb78c451f3b4989c145cf1fe5959c8e06a1cc5e4222c60b6f2e83563222c98ada9802b336e878ad688ad37a2caa309f0aca3043ad0e7bbc38485001ca25f9636ce4ab274e3716942b786364ec515d242067e981bc491a29a7e187899858668310814b20c645eeff0f77867f6d034e6d8350ea10456b16084a06e8a55d2859c5291a29960bb599c587a15ad92b03b1b456afba4c8537933116f1834a03d92db9630e015dad893b61d6f546ca51f2b5d8d016e131c0089240f7029dcfb894591bdcd2f3cf7a0e87b0fdb6e98e0e34f922c586e4150f4d0b5c6d8307b8412082c93a4f73dab8caf145472d356373eff2dac8b099ad8fbc906d76d2f8397f72fbbfe35901d44fc5a2c5a416cb8701687b5c75182fa56f6432002ac7ccfb2fa9dbd54d8bcef764c33e99ae1a8016ba3cd9a55de943010012ff7fa32f3200e9be7dd48f1491caa792f8cfb763d0b0ddb16f0aed7c3627d8fd096bbe87ada24df01944bee6bb682c2de913adfbd5f6987fda7b0ef920eaf624bf14cb9e150be352d1107141d6fb074c19cc179f33094c7abce0dfa3e83e14a5afad542c940afa9df1940270f9d6f1cb536f27964d57bec9fd2f2ad2b7d532ab835612f779377b383893154425a32deebd6c9c22c82ed0c4c3a818ad07f73f21f1a2be3f68e5a50ac9a56ad9bf8aeef126a36c1106ea85c543b2a399dc472b22663388bc27b4c97d3e409b3c40a0ab0a6f577628857bbc57e8db3421edcb90235200ecadaea4d47dab1edb8f84cb145aeae54c9205dbbb2cf93ca0acfd7b46bd4921c48c32da53cd66f14de1c9ca8a36d5cf57fb61acbb9f177a134782cd5ab12bd455a814e37b520996888156e5d6a0eae9a6248ca09c168c54f4e1bb99e3e141791c08e1aa4a95c6cc7a6bda8943ffdac80e0ea7d0687c518ace215fc3705d0a8b961c02f0fff3dcace86cc07692018210c77b1d438b31266d1d077df318aa6b5fe92ee84d7c89e6bf90f0b589b10dc759b7ba88dadfb73950155388ae46507fe8b77b84e7382e192dab3ecb522d3dadd4a213bd8194d75a2088a707ec0e145609570da24e2ee9dc91742e7055f400c0200f4a4a67056cd611ae687c7e2e98eaf79695b0f82b26704f27237e8aca7c8808f1917ae1b5bc1bb5af5803ad7bea0a5b4c421879df37dd7d23fe62886bcef8d1fd40f7e44c126143963faad9f9234010fb655fad67dd7d20c5f36b02b4af2ecba7e76e42e15a145a264440556976c3d0f237cfba5008c2959349b63fe43c94b9031095a6dd73b7157ac30a409988da0519be46080484b5a1980f855bf47313c82774b02bb7ae83a52d6a23674a069eeed52dbd9d587aeb7c810456b20205755ea8b134334cea9b7e5b154ba4c0d8f74efba4487bf91358d075331f09cd88078dc81146ee0f505513bbd4b17bb031f95ea4a5f75c8e73725378c3a7050fd62f1c16606c7667296b8bcc17efe77f5fbdb316f89bbf41091b6a1a55033804ec81a1d831a167d154732910dd2e78c66bed161a0e9f0d30853da419c9d9fb72950857f2686b673ec0eeb334114a4a71cd069d735f1ceb238cd10a97f1150da6638320e4141cdd76d21372920e3738925cf80aab20bed739023af2199ddcce9a32bb3678116789507c0b0b38be53fa7085556626d2159dc8c2ba4801c0341aeedfc05f0701827b6555f72e15bab006031a29fa3aa38cdc4f5bd5418af5cee79487ea7083a5e9ca8fd41b3348107fd0237d4e4ba17bc757803fd8c7fe058cb1b104563dc7ba0f3ecc38cad93ed09ea5e19bf4eb5e636967a4f87b284c9e62fe31ae18cd958ea62266c40eccac4593f5e8e4236f2ac5fd867aafb40770eae1bdd0b52b235e6d022b123babcbad6ee1c8c8f15800dc7f5fa26f8c531dd1634eaeb71376d1fc5f3b8063f6e3229e6b46d9fb866fe5ce35fdfa3f0ce5633ee3abe58272effe39df376aa224cdc0db1690218f352269eb3e2e900a8505e782deb677fc6fd3be5c4e95956c7f9a387b2ad0ad812bc7153938aa2e5e9133ba134b9b5e3344e570cf147a887eb06cda436ed048d81a9ac3e02896703a93351d325774fcd42285e1e689d4db2540048d4723097fb80b3d87c96f29e17d2f36c0bd3e75dcf2c64ee418b95224f65f3aae64e122eee5497cc65c710d9eef8fa2b83bec3750740f005bcfce317cbb7792731b50b95f280d031c69e02b99c804ac95a489ecc403f84ccc8cae3431cd17c6c12636b49728cc04876aaf86f605bc9ca8335585dc97df5fb7d27522e93c00e6103ea418c5c968f2b991eac800b6b5f3d15f731f5c71c7544315b48ad2c1f748f05df02768e9f5bdf721115c2068b804ca563f0001c1ec24f06cd3d07b25531216fdf79b1703a28819c725aab0db57cfe5c2443fb9c86e59614835c2f1ad813b2b5cfcbce57104bd504efde7e254531f4013fd0fe42197e1aaaed59f3ae60119e91fe39770211a8909ce15fdc4958a7056fb8b61e479be88744380573cbded4ad3734c4eeaea6f5aa028af972b08509d231df33eb0e4372e97cc8c20001efb6b2278091792cfa74c8223458b1e31c3b9d341285ce1ba452f4b1d567cfc0119f843690dc741bcec49a105ac6d95f44adf6167f1058d1b0cdacf802a1a122d181814ee1807ac96716ff149e38204c9c669df1f2b18e4f55723ddf53ed10b181731b49148ae67bfac57daa93adbc5fb342f966eba2c76cdcd4f06940ecc3972d5e29c73582cd3407031d9e578bb87cf53506d60690dd88da94f6d4defc42d1afc4dd126308dfed84bc8f951e24dd692d4ede3d9c9ec68bc4b37b71e8e95e0e14557306a6b1f853f177e75a93ddc080df19737ceac53c35c3b76a0ffee3c9058787d7f1f3408d22bc659fd64623c75652e6b9edbccddcd4c5ce9cc58df0d8b1be99437e0900eaaf23cfb5ad0cc54814d7943acd7231a7af9241fb4737dd52aa885b8e738971e02408cc22b29bcd030817108ff63092cafd687ea94b31adb7d3105a38addbe003e2ba3fd21008fb0773ba2362809b5454e57e25014ecff7f270542e86cc4ab29615432891ee140b362cafe14704c62ce878c44946064c86c3f81a47f06495986e797c6a003127a224102554cb9713b71d78ba62eda88897d3e36d6d7247c99a1c1de8bdf19a5d6c886d3e70f3624b00e3694700ef993cdd1d9450281eb15714c96a3411f95ac76c647c9b233210684b62bf863d851ff511cea0e22ae9d098deca3be924b2015b42d02a9293834f9ae702d005fdb9f82c611a46db20bdc78053f59bf381cabab570e8d2ec3cb7b297d9bd2b2191c231e78fed5d2bb54d6567fab109a1291f9f6843fdabeb64b16416bb7cb0083dabe8c6f40557a63b6237915c4fcce22d84b74ffd6191b4f335a6276d65aa6605b0d3c298144c923894173f272ee08a28813a81d4fb09676c02c790333c49f9a1d5cabeb20d6af5f9be35325713b9b80a56bfdf56f9da839b0a0b67ca0402de7e51112dbb53f5a3683364e7b8a84b82ecf621da84d6286bee759bee0dc60f086dcf2a7574fc39397735b47e2c2b335b050624161fa921b4b629f55b0f100b14a24e3951ee97d8e64290a11edef6793e794c81cdecd5e63f7947cf14d013b04e632aec0c1e7541713755beb9470b438f225a2248ccacfa463dd8b7d418aa20cc1bda0a977cdd687b180a5f73e37cddbfcdaf7e3124f6db0054e400002742b43b2b46bb3ea91afc40582c1ca74ae66419f15c13939cc6c05c844a4e106e66c1cf713d8334b343aa0f5a6223bacbbb942864fe7b378067ebed7ac4eb9a4547c5b938f8621214c480af6c752719e0fc792de6e574ea51d867d952daca97b754a585f9bf814f3f274bace415e78f4387f6eae5e380e23ae9a78822837de383446b3196c03f9b38d8e6384f83dadb5b4081857e92d91778f92c1f187989425cd93dedec08b3953ed0439ca69c020176beb29262abb2cf5ee8610bdb01c7464639e24c87de3ead5e7a8c112b905e1ce66eeed7adbbf2977a8b2315c1ea8bd62c58ecb3160aa74f4c9c3068b6da713df048895656c8a83281ed721cf7f8f86da13b4e274496ae99d3a9e7997348352dcbb39d1c469b024bb15b3cb9a3218211f390529c64acdc88c3c9a9dc8d874dd7f86fd3febdc2ca7e82bf27e3eb978a64abd4c974f748b0174f866a5f5d0e4621ac1dd47151119e5ca2fe62d10a2b59e1dc4ae2270c46789cbc13f2f46e9e6e88ed813f7a3ee4c2c8ea7b1097abd75dd9c35d3e1cbc23d5b8bfdabe8c3e50f164ea9737b58ecccfbc3ce190f1da895225c360bd9e297bbe5f7a109cf2235667c9493e84ed081d3693644ec2c0ce31986f7180ba65a241e03f088cad72a27ede032f99455a9c739d4e5b206b48fd2b9374a479a275e1d6a1d7241e99865601f2a6c19c2cedb61d67308c00ec749e65983ee613927caf9e1efb6f743700264c62216152ef69f1496ccc03acccb2de13bf6b795d1c7a6c0784fae5e9081288cce71b05f64762453493f234cac34d22749382ac76d639aca20a7eebf413902f431bbd222c21c4583a4213529dba4dd56ea699589a380df98b367ddd19885b8c355f4ea7487b34a46a31a9d4b47fc25ce576f666e4606055e2c6328c18f33d2e7a0b1f7746400d727516d7294b448d2e9e19e75489228ae2bb3b9f9004f63592556b8207157b677941bb92d579adb0ed7c2e68f8de0b03292b6b83dc4fe07a9885865f214b9607c9c0b81c7fb279ab202db75ac403295da90103d8da55ff091a0dbe75c78d439f89600a13e46022bf59282af8c6996e8bc60f4cc708344f5d9cbfbdef96da93222668161b6726947dbb159b8e9f667d32b602a943ef81a944921f449b1950c561ef11da64758508a072cbe8e1e5b750a7ab83d2bb247c648852ac722ea5833d561c74f419a23a9cd58e9a6c0aa3c743c73541e16bfb0a47c89edfa444004a3fe7eef1fe51aeb428c62fa597f7a2878414060dde13048e230b922a3a225ff783f0b1293f9851bb98a6507514cdf2a977ac43f579633edf159e5b71cd10902407bae74a2944645e8320a40b0aa7090c0d184f680bebc8c615128eec734dc0b201695e6747de4bbc4191d747021c007f16c8d3b567c09a827e4b6768765c5ddc4c02f0ceb24f80cbc1a069487d00f213edf030bb1d82a3a801995f6e923edb019634e45596fb1c89341ff71fae0737076137469eacc6addf2b19adda8fa3b597a7bb667d482282f60c56fa1704b01fdbd538d5caa17c0e03028c287ada95d08cbb374a55135e6c37c9bab9d8a66a907d4075014e324bbc63dcf45b16cadfb5cd092d8ba659b7bd5e35f665054071468c76b51784e3a05c90f0150df7d66129148364ee700b390e8beb674b3f5fc3c0f86237d4063e09d5fe763bfbd6ae364720732e52e46c0ac613c508bf4eda389772f463b587f81cfded92c1c536cee35742a876100596c26148f7b1179f5d3306f2867ed08b71194ddeb0eed649400711410f641b771bc7ddb2b4241c501f90ef2ef8b970d8adcd006bf8c1649d0c396f7c8ade1702795dac025eb61790ace176895c2a69115a8d0cb862ea0c06be137cea70b73e6954837075490ed168c6aaf3be92ac883f244fa8db6a3622b986bb4263dbc2a4354c74e454b2f25fb1f2f6534d47e8acaaa9bdea4a401b650b33d160d6ff54d57b07c3097d405f962e8992783b2722fb5be6be2a5eb8778c0c27063e99f4bafa46eac935a657a7f0a933665ee938c8d2efc3caa683b406ac754c759c995f927b91efdb6fae5214c3e241417bc227405701cfff86bbdfc1dc24b262bb7d792562c3925f7bf0b193961a6ee04816d4d48790424ea3ff9fdb6344bd57cb3e5debaf9b819b16c07e9fe641846b20a7becc7244de278be0f1daa867f90050bb56aa2e6186d8f0500c3802533c8a5de95288301e6c9e13717020e2b46f506f5506f42c09e9370b89c91bb973aca5574062c5aafaf903ac6e8bf287aa84b60e2b6bdc25afd0062aa5af6093deb4effe017b8ae1af0ba20e048d111cc1cdfb5693284e1f5fc023e1d335dc24053e27ccb5baaf7dff3bc5a0347d698c048f4edb60d853f17612032af7bc3566f6961284940e36c3aff98caed212cb697d7f0028130d40f7eaab34f1a1ed85ee9e1a82ff9ddadbceb39b76daa046d51a220cb165ea124efcce4184f1c36527a76bb79a922a5788eea66b598e22a8a77f560f1265d098fddac8bc58410d7140d320ed79df81bcd96d67c52681c26f91a67bb1d97d441880093916c8e574673af5b7481a51afe4fbad783a9d450998bf35c2d7f2114c14c27e7141d6a044a3a578e2ac361eb9f153595282c654f307fd13a3471a2b961dd8d4ac41895226b1d573a625bb98ac2bd6cd97585d541127a71aa88555057318031edf973acf2f06839523841a9d26dbd614ddec5d350e810598e0974224b1a1259cbd8f431970eca8e97f690c35d45bb422dd0298d76aa100cd081d3b316fe4b6a04a7ceae4c2c5ad87a1985aaeaaaf63b18446b9d500c47574e27553777245dfc4f36fa877d2d5e0e3f14223d9097245c89f29b8ab2a8e6174e3fa930593e55fca84178838e4da861153c131686a3bb2f09147ac241eb0c0210216504d4cd65d7228c34af7c51c647004d148d416e6a50407f69565575c3d41d343e5992ebaa75abadc17aaf9a6085e94c1df7181788e31a35b57c2bcaeb43f0a36ec501680bc16ac95700b8660a9aa3a94d4720676f7b868e1f15aab4131cc82aa20d6aa062ad08c6448fdb49ae9f2c5e59c4da31db43a0b5c60411fbfe9011f13c86a6c012b7f18409ace349b0da8e5fca0c18c5961ee85d3b5cc7955dc9eaf82e7af20fea0efea5350eeeb9269cd4af21f9dd2f128029e1fa2ff7454c73a71fea7cc2daaea342058f493943d97a06d13bd44fe5273fe50ab36c07b11ce46af9f58967d6f1d1ca571d8d001b6be303c63481892a7596b4bda675cb70effa2dff2d3b2aecf620a49d96a955fad6d7e5ca916a4065eadd04182f7d764e83fac8da47aaa9a1243e145b7df713d6f4d07f85b9ba2d7749756828e00c21079ab3c234203e6d197424abcfe3355c5eecede5a6d1d9a58e5237ce614a36ae86ccc90e1b48900eb2cd3a1aaaa839b72dbde08193fc8cc53b8d2a525410b6ebeb4c0a5267fda58d2f62abe481a6aeb846e7cfd4949f954a1cfa2dc0a9479e6baa2338b63d06949b21c91ed200c0d5f27030422290a5d89ec547a81be25553951e76451a5753c3c32afb933ecca808f7ed6e8a53eb7b35356bb87c8fe51a6b17b468354babe1c40b2dab03d9af971a2e37cf7a5e192060e7ba21c670a90d59c3359c9eb780db4bf8160cb2a656c4218efa18c261e2eec2fdad294f2274a9675572f9533d47c021981861c65af2c38b8a4e824e5c4db5097034bf565ea4336138c04a21945021a64f3e2eed30df18f8110ed6a3fc4e9de57206d0a89a8350128d3e09c413e9a98633309c292edbdd34eea0ff5974d777695eef483ef0ea2cba1b0c7cda55d293edb35240f6bcbafb5a84beb9759312461e80eb90f71890c08432fb9473b3a17829fd6b8b7d73f89863d6926da7be21d5c52729548d3f1ad23c9cba4bcbb75392521dc2f7a3e2ffd5f719932c26b68e149be5394f50c56d68225aa37cf943e8cd3a379b217069bb97ff48ea5dc525e47f0eea8ec41d6c04036a3806732900a0002f08d0a81ada6dd2d56f6eb226b15deda07d9ccb5c3e69fb4d6838c0a223ab292123bfba2b0c87830e7438e03a737c2cb3bf5af18f51c96a12ded993ce994e0e332c3c0bd28142ad0d4e95e87a2c9028bec5569e276fbe2acac6033c5e1b2f8a92b412a81363d1bad39a29ccf2a48d8ca966f113c7a23efc7d56a820050fd537341c85b07c3541cdb9a467294a597233a3909c18e6e122b471e9887b0403c38c570b65757901bb66350e6dd1cd96a18f8b158159952d255a75f5d92443eb5b6e65cc3f08820f0fc83360c2128bdd5c6d11ac15d7c900cb3bf89632d92637687aaacee5cbec695d27eddf1d87d1af73bfcfdf811513a1d0c74230f885a8577897d64942df46c96b7aa66519b80903b40393446224a492bcf6bb8ee975eb5dd26fed3b8bc17a1afd1b0a080740052c4ac4ea856cbab90f21812791af350dba2784f3e83babbfcb18207847a285c8d72a132a153d925089db531f90e6f009e61476ecec5b968be2e7979161c98055bb781dda3b684ce991e854678fffa082ec99b0603c2a8493bf7b1208fe9e6a7ab6ad1ef8f8fbbce9f776fa1f741ad3f18fa6afd300c376788d6a6f3c0d846fbebe8185d5c28ed98fe8f97db802edc9620785a8ec44a2a69bbc3346ec3d428f60902e8e9bbb1cc314072f1828bc4e53d413f7cd52119df92c79cd6e7333fb8fa0eaacf85f813c9551d01035d1808389dcf1279311c8669a2b842c6352240ffceea50c9f2a5dfa356520129b2f9b197d6cf883b149cb7d380ec5c0b946a66ac9cfa7f22373e6f14eb0e0bdcad6735998be803a7d45b0911a9dbefe53fcdb7adcc06882587b0e9f105a682186f4d39e526d9d54f54893846de497041a77b0e5392a812df1d14cfda3060577ac21eaf42dc18a9ab24b887e09b4c0586644b98ee06a26df0089028ab5f81b092cc043ee9b1883ebb92197ff78fbb5b828ee0335f281d317199ced213e59abdcb85613944075cb4367f9ed0206117f8e6801456697faeb318f5e40d6e4d920da18054ba74f610c88bfdd134ef266f09865838652d3c5c9712b1953c4d8fc628a4c050cf8321d88772cc79462e5855a9402c4df087a8b9f3154466f501b2bddc58f155bbff2db704b55d1bf9c5af6ad482aba988d0922e9052fe2ad5980cdaf4d479451771e212733b9d55c80829513d274247cb7ccdd37ad6237e4de8c8ca745f1c4d5fadea2fb275ef7af9a15d4a89ce66325ad88aa184669a3b64e6a5d7baf9032a2dbd21dc7e283041257cfd1691384e7982174fd105b114b4fe8a1c9b444a5fcb6ed75acb0cc92ee37653fa98f3a58c62009438d2dfd4a109b632758772380a126be490bb0d64e5685e2b4e3f6cbebd06768e50762941f6de6b970e9d304f6c7321036f268e5fc09da98765758a51ea5e6538dc703f54b813d2be34f307e5a068f89c65d314cb00f9e80c01b66e27529295b515fbaf8f299f2ca560d71e225d1f51346074ae12ad7294b016c6d2e399d2a60e63584bfee6ef44a824bd25469fc4385fca346ebd2d224af3cfc1ba75003392b87eb6ae1f02c37adfacfd1766795654b8a07f4e9c3a4bc63505dcedb2e7f26c68197038b1b7d9b73370b6709893beb19fe51955341ebe473293949c6d9c45b2110aaf6c0eb815ef02bab99cafbd831ba6c616c7ba075b9223887d4c40697365339112fb0f8ceda54c4bc5318c0c5afd01749f627dec18349c55472fe03bf8548580305269e91acc7c36bd99c1a2bb146449529aacd81a72efcd32ea1d29be0afa5c259dee72a2e534ac694ba7c3d57056a37e656a288094de3e143d289bc10f810b8210a93d25e53601cd9fb1e3f9055ab6eabf38b374353fa430ed207e295ff0795a85927f551fd439883205a6888c47e61356d2f576fce3f5222952e020fe560d062fe83b157a557f9fa9cd1eba2b91c581281cba18d0636270d9a3d6b3be96d19fb245fef09f1da7e1984662eb8cd5c3cbdb6a9d6c5e68a37b6c578d241537a6b8a04702b3902b191efc763b25ca57a93825289c2bca64f7dbcec4ddbe6ce5f7422def39793b952f7e5d5047ed2fb530b5ae6619eecfc6e44cf2bf10f05bb9631e7633bee8234591a5d802b05403c54b89bc8e55c532c3b82b4046af07904d8a50dc15056b51db7fcae8f9dd4354666c79727b9e0195fcd3df0157032c0ecb303c1ceb5a7c4fb70377e2b45cef663f9a3a6ff250029353b6be2fa13638f1009c479c8cb891d19288ee984d17066da834e55347fb554499536c7152546a9a2945e6f860cae249dcd08f219718db795cc4dfe0ff870afc388c2342ac1f06f2ce632a48ce9bde862ce8c94f5c0ac3d0767225c34e5a66048493d8156cc7604410e2fefeee693704136baf826b3bce1eb209259de65c7927653714e3c8f2959b005555f2294dc7b73cfe6b2d1a7fd9053ac201624b1965e95a6c2af3193534b2e300861afe0d51420520c7a7af72abb497c060a3f8faec1fa1d43e3e8534ec7b67bb19a6b4d9fe85737ef43dc8f14deb3fbaad0568c23937f88f7af7e53fb555b3e14b9cb79590a64a592200f71441f6ffdcf8ccb9fab184c1ddd1c07c69a3d10c58ab7e0872abf79014c1c1be38e22427f086afc7f2dbb36c7a88c6e464d69305f6c4c1c83ed6218364d8525677fb9e7b4a9e8d6752596f5372be247c8b806fcdd3d7176d6fa20e06d1956539fb02f9bd657c15eedd3a6e774478c6cb75d1d9638cd4cb360d2c67dd6da3ed8a7b2cce3a863e522893fb9875f0d7045c9176d2dcbe27ad71230637bce62b6a30d990d866f47eedef9f872adb4ee104e3ad1381ef4d7356103a526ac20c269817c641eb6d890b34223a9ffccd3f208405893f4279609cfe337863d4ae427ea76997cf1be9d9b9cb1d861b34dc338b7d51650911877e4173c8111688ddb516cee580ad906d98807f120a1bab7b99b2d4447d7d78abd66008f8187abd0dc61254e40615a3ce1598f640749166754736c63dee63ce31ee93a4c47d12d9506973be9c02fd092ab9a4d7a72634dff89b40b0c4b8ed2ec97e2c61a9de517561813f4b4c0515f0d3fb1eecb2d4e9c42af4a59dc2120bb7bd8e5eb9420c30137ce41588a8e31642720a39f5bc7670f6ccef16ebed20525346231a58e02d252006e5c39b2f55b7335751e1035be69d75e8feaf8e26a8235d228b770ebbb82dae74c130b3d655a0d8023fc4d2934d2438710d2c7d030644348a0bff858bed024d099d93526f7546f77dacd331514ed4cc05b323367c3420d155783a35a6469606b13f4e62a01c18585096ef21f99441d552ab7b133e538ef95b8fb87ab6e597f76a118d0e8f0252a3e5180634cbb356f573f6da7fe2752ed70ccc8104003b5c1961ba76579d3a0ec7d42a10c59f06f3d096f90fb3f5a87cabf85ce0896ba5586b9bf8703faae77141b3c930afc7c7ada230f871342ec6dd89db463193c56d8c411d2e253b6f3324fbd40d88d4be034659476a24836e2c4a7a800d45fbdcfa6321d2a1c5977644fc3825e31076724c9fa8fb54d6874965068c88a828f6473fcb6cfb3c4e6f685045a667e970470e8ccade27e90e194dd9917858936758732428399d20810e418b4e9c4c5be0f07af49b222bc83692ee0575f60d11647d00b7e676f78558f5e787d6c7dd557dc59fb0b49651bdaf90cb6a617e701582efa7628e4041d8a7ada0d5284bca0d2ea93725543edc6370cdac42589b76367d4f68b674060a4ca48e6e889edad3584c698e2ca67d37f726eb77130bf802604060f22cebdf77d8a1d812734024594b6857cc24d19d338d84ee9f22b88d356140290b9435c0ab5d911c3e617330ae8a3102328ec69d363d2075372f46e2cfb7904dee1a6961a72afefec7aafe8c0ee7515ff90279a5351f03a2f7448f862f14ba3bffc163652dd6ed6e35cc58448124566d46344d8e36e0309ff96d2280314c2f64f3dbe537c674eef92a5474f15fca9ff9e7f47722529c06c60d465c69c9d403c53683bd17e37f8b7ca511bd928a6c72da157fad5647deb771d78cc2f8b215822b54dbd2bc8cfb8d5202eb31524946ac3fe50d337ddd6e80bb35a81f2bbc1f4c3cd9873fc661fe27af7e58ba50050b3b6d95a1c6b79715fa3d9ed22a68eecf8e7f360df84400e9f650e0de350e56806a50f94cbb25034ab2b10b72fe7cbae79eb6064b0c75f1e2851c64014f19c787a456f8439be22c1a1265a42007da3766d22385b57b127b2d9dcc177beaec057ce1233e3a1521d20dcf089b432aab0d8b2e3d8b8c76cbd5565506a5752423e4c5c4efacadd84fbc8904a48829643eeaa4d45a4ac6f7bdd7927dc2e58de93f13a591a195b731792cfceee12138da5cf494cecef47db0ade98b5c04a3daefcc69f511b722920efa41ae8608318b089f2aefde18ef9ca3d168e1b9ed033f229665902964fd2f5a3651fce2ecf1f741e4cfaa0312511e18bef996572748448c752b32f827950dbfd8ff8a814e8e07bc0189a31bb96228a4179c76dc9104368fa5541fc2b52bf163707230ec84e1c11e20be615517c1adb4a9475869b75fef2a389c4a5d7d8c627048017ec277543f02797295bb8e27ae8fbdcd12a4df4ba1d6fbc9ea46ed6e01ec5e4024b29feccca7744c3d0bd621691f0f2064afb76d4932133b3dc5a8a9d490a5b277f6af2e8e7b25787f504d28037b946fa1b7bc78540e59cc04c97307d85b11428cc5a70f568ee4c67990b7da8201002b247cdd7788b14c6a807a753073cc327dea7e91c8ad35a4c551925159878a7066553496ab3c3edd0471f40a56d3262779b47e621b8189ab67c65220b344b9896c4e9c31e72a8f67a6fcae626a8da39db1eb45020edeb921ee8d6a48599f35cc7dfc2f89f1ac610f4509818e90cfd4be5f7e7f023daf284bcb84e3559fede1e379c7e71f0115a5105c2eee636f560ecb8963f6f2746e749bc72fd6ec78b3c872d7a0653cd5f5751dcd000a42bdc68156cd74b3f7592b735c585e8ded4b87bc64610df6b6b64f62622e89bb4dd34ac5928455b0db947b073211cba31f77dd984745e544bd822fd322e10d3f423da46c64253bace5cc37915700091cf9a166947382de3855cd40f1926b60db651d2cc92ae77e55845ef1cb6d7b52213da364b1677edf6c05127ebf73ee9deb05c9b797fb0916bbe248a03fddc47f7b84d7fc3edf88a61ad9fcf1d92da0dfee0e31bc804bc1b8dda7bbe8c3f2860189c2ce9954977b30c1bc6531996d2ff1e3ed6223a0f9403f07dfdd9b7a92869f16e47e5d8657be165bf7318c862e292332f2fc39da77b1803b92db5da16ad0e2ae9386b98fce5bfd2c77d1c767523567daa959f5ca2d8204e8fecc2cc7e9eec2d868b8aa4fc19144e5cab74151db275379eacb989d89692c782cf0d4ad05a7e42f1ddf7eafd331f2be318bc5845097743f2cded1da9ea3f83fcac245e489cc81a9a6600056fda58b2ecd03e07b0b14c940d0175679b220ef57602a3275bd8d7d27afc25a592ecfa06d571b54693009ec1951b0a65b50022509d43700d28875eaba1cb5d2e1f8b0e8f256ec4e26594a00466658bbcd9dc93fef63fc959fa97c777919df8fc94600ada2c276363c8238315458cc0f0ac875be704924bc3963e248ebc30237fa83331dd5861854e973bf9a9e8e1f844950bde4107ed817fac766fd02b6235ce13d80e882ed12254bc3c0497e6d2974da76654ed476c152aaffefb73400a672a4a7f34f3b33e440ef3711dc4ad5e8c66e40ba68cf4726af7cf1e0074af3e2f9361ab4a48d873c5a7c6f5d58ea1a8666d66ba31a2a450371cb57a97ddc3fc5c333a2a5d2bbfaa24b3b8fd1a40cd15e84bfa0644f6a13ef7c5c1ea79273c0336a06d9b802b0d9aa950ef68c8f351e474e986158cbdba246f4f64dadd374c3323c56e506122d2560957a3594f2b2a35d2d16f889de0a8a7e4147bb46a67de34db30178f97ba6be715d555e9cb29a05500228216024d358de2ad926bff8c8b71913a9b07f9fb47a7d7523abea119d19ec402d1fb748169a210c3160504014e6844ac94e347535640db5935249c9d3629cc97d3cd2606cddb6b6c7aca89428b928e000c509e9e22631e5ad28236bb07da0b9630119ef22caab8d257156d525ccc57dc7afbdf4b8ca6452b3841b03ec43ea4f8b4059b72e4ade8b71fd99bceb57d0925fede465b0a23e739a34fdfde51a45066bb179685137364dea0e37e4cd37a039d2dd7aa287d9b5c072ad8d216a39cfdda28b71f9a776938fcf4af8eb7967bb659448e4a73957256509dc1f8a1238096a0441bed3fa7e14cee1bdc3392920fdbb5e2bd03f646c45888619330b8c43d0075c48daf5d78016c9fad120d84ad38c5ba98084aad2f3cc2cbcab3eaa62702ac551e408bdc16e4ec9e24eba0f7726b2374f80444f40c15bc2fd6059d4221a06cbb3a99df7ac5109fe607d26fb855e58d41bc88d97fb0bad28dce55eb66b89cba0ca7f251f27de7b17c42c4aad69499c42efddd3718c26147b249e757b01d92c4884e81a1f851f78f64fccacd8ffb15b6f96bcd4485604d5117d2b64ec4d56eecb96fe41cce41482b528d025cc3f73fb2f556755810aed4ba3e066770746b0da8a7a53dd9cabf09f7706b33b3f4324b1fb57da859ced058f87b2e1ff07d7123969e58e8338ed7e85051c46014423d7ef850adedf995d5cd9b4d06c61fe3a98282d9b9176e0272fe3c7023fc6f83842db282fd7a605198fa6953855dd405702bc5f1c0a586951937445f11ecbdb98c290c4027c7401a54235715ab556bb0c77b5a05876e273cd90ff1db528d29221bc747486f04ed14c5e4974dfc134e94a26ef0797c76901f491e2d651d7c34543ad85a948d94283946986306b513739d0a9402d36186cce7bca56344a25934e997f690ccf8f0f04c305a07c0ecebd707149540a62fdb835119fbf3be178f69926d201a0b2faa421153b2d3e576d3815a5b226b51a98ac6e018ee0d862c8c06cc523cece1283d1b12d9145beda64c550c799116ecd7b6d0a6c8815000f4b87362d70eedfa6caae357a229bd6617382a4ac0545e43a8225da6ba2d2932010605e97fb117c861214f64f5d1d6ac34ad7f2b4fad5b552539f3e94bdd17ad0bd8a492a43a1f43cf64e32e149e121b243a7f907e3775282e2819bea48084a1d0c1f29de73b4aa36f128060d8261daa4da73a46cf2603f056bceca1653db9c7f0b0c0c90e46f4840dda94c3e41f5c35ec1ece26a404c7fe4ce981a458acc9d991d97a5aca09c6ee4f9118554cb32ba483e3a571c8cb425379fddd4824f167817d6456e966d2dabc4109554a1cdff7d24e35750ce24c2c4e65308be1265af1f08d4f4b2e2331b4387bed815769faa3bdad099e25d3ca7c0fba05b4716559343c797ef75fd7d92530e4af9e39575a32eec0d5aaa409d3bd91e5eedc00b2ad609f2496c25773fa02c2f63c86b1a041427a067b13244d35ea9c9ac0e9f00e0658e0741f64220bcae969b05c84b9a41dd009d33c5f229068a5b14dddac667cc4e7c0bf2d4562fba2ea15fd00f867ad7de1ca5c7ecca610b6d9fe7aeb1ef30b1e1d78399018081ecf864bfa2d9baca1950f354b3f3f99a95238a4faadc95106eaf58c4bc6ded805d6062a49a13ab21d37ec719d552d1bd670a3ad077be0f7eb1e9a0d0a6a5315aed5ec4465846471551e5929cb61700ae129b765ef2c74725540bd6fcc9545914d5b0a5aace61c3f86b0086d9412b70c82d25ef8fa1d30a3e2fbb3d2a00e281cbb7725e6c0719ad382db155dd14d7cf62122b87293d5f6f27e6e561157496485e6e2b63e267ebe0e341798d906e9cdf5542d17a54bc60bbb5d7dd7b9a934289bd7fb91dc2c045edfa3cf7e1c90b5aa08f0ac9a30ffc6d776cf652061f61fc5878852de71305de48e06de15c114cab330ae8e4b6d9849def581d255661624c57c7b65257601839afa83504c95f30012026bbe392190ab41437442fc6dfc51f512ec1e20a7ec92e53b71bab768f771ddaca2d3309dc1d64cce2a27f06a69eb72b86ceba0578d59c7666441860be34bfb383c73cbd2bfc4a9d6fb28a59b1ee9b6a588d97a203d43a19a0ff2d2b88b36dea183c3750c67a26801fedbbe394dbc427127ccfee5e3a3e2d320f98faec61fd24dceb7ea1868c4371af77413fd89c9b2b801817e104a196bf5b7616acbc6981fc8b1814bd344caf6ae6d31b8509efbcbf08f4b2e1e154822a14fa7b4676ec74afdec7e0382b8255c305662b5a6d644540c2325074eba8e11f8c25117e88df4812814d0260a5ccf78feb42b8fdf957504e0151c5fde948eb70564c9ae777c06f5174295ec622a79d34c26f76786d67372e023e8375a587247011e57ad5fd0b24de60252c5c90c4d8fb5c9ecb726c25c1fd19885d6ac62b9d0f52a2493b42772bd7255741723336bff5c9bf5435ab4bbed884ce338465bf469962c14a832f5d364695e273e1542abe36bb68d360e63df72547f5ed4c23bd3e9affbea38c840f9edff14cc16cfa48bbf2dbd2b9223474c62b3397646db028c8ed94ab57f80a407355ce139c01fa03469c54ae3993345643e54a68976996115a566d705c44c1111179e7aa631d5bd72ea4452d67762827f2da0467d33a49a75436688f26c903bf7288f829df90ec8549258c9f95ad0fbad9a84a1b7578e580c536670b5a46acf143ce9d8dca24826d1330ccddd2b3ddf671e68d2692bc8efaad77987c7435a8e4b48d183db3c39bd8893e61a039f1ba9753d4f52650e2b6ff8c8e078fee68a388e5d91dc1287b7c0230d54861337d030f335ff7825bd33d5e96b5727eba1e75bb97fd3ebdc1456b3b41796312725b48e5b3df423b9f43adaa6522daa202e7fde25848840d1fc63e50a5c0075021152b1917ca6591d97e9cf623312db6f2bc064d76772cc446d90ac1a164a825011a75688b961baf58434f3e76f385b55ebc33eff4974c9b2d11a5468188b71c0451d2843317dc1489634f03c1e76b3214cf37790e78dcdab8fc9686fa2a372d6eb327e42f860e9a36adffaf35a9b6181414bf37863f98c21e006edc91ec99bd2a30abcc09eefff60c62c4d02c4396ef7fd2b31ef33c4f14f084c985289f242fd6752c6a67c5a67d346c730953dcac231c200f32a68e67f2d2245aff277b4f67440baa5528be49175c39ffeaed4efeda04261e4c6445ae07beeaeeb0ba38796f28c95293e532ed8a1727f66a34bd853f8a83b95bb3361680f7b037b5057defe4aa6ddc1513de4bdcf62cefc7dff8e0ff7ac7598f856ea442fa6ac887070c3ab0c28760350d93a10b0ea24b19cd41770b1dadd30e17bd26baa06e3eaecd061c3de732a975325fa28f3d0cd64beec3ae0dd3e87d3348f7c0cb070cf7451e22d655c11a2f2ead28a894f859f16697f42f35e11e4e9823d8089167d8e7fa456b6a6684d1645c9d3b7e62a8e2ddb0fb1f993038df346dae64e516ecfc60d985b4ef6be322f6de1015de03ed6c054b3f559a4247476e2eb8288143dbe179775e867597777a0af4ab22fdc3f2d573887afeeac257f134e770a788860c30205df06344308bc59eea91bbcbebf816bafabc71d9cbf99e9b010786cc6fe74ec07703c0bf043bff3f51adfb2db1a54dc23ca2955406dda883cee5955445f3b67f9037ed2560a3e0536d7a710104493850de7f848ca9860a58e8a112dd32b8e2cfe102f56932740a715aae5287d03fab68d881183513c6783dd4d95ccd56e610f5061964f715bff7aeb3b912ddb05402aa97d2c1d5ab9796fdf0110898835df35c2b11463dd56f8254c2ad9e4f051a71ed1fbadbb157a1b3d823cb5d6251c799ef5d5ed138a825e215d159f8cfe61e9afc4429f5a86b7a647462c1732d8ebf8324aa1d97a875e736e903c76dcdc93511ea6fa8487620f44aaf4bf5c82c280bb0044afc60db0ec62d12a9350e59117e2dacb50e6675fc9ed5d95b19e4e01fb75fccb1b9d13c21d7c13df081436f53260421126baa9a2972d0bcd577ecb51c677054cf711d3e685066ff8f30fbebe6948da49c6949da45c303356a8c7aacb8a6a346b2a2d58bc36032f3c22815b7c77243f1a7e21d1394dcf2ceb5036aee29a70d4f32e57161d2f3a07b94e9e1a9b97038675b402b768ab11eed05e43c1158dd512996a68081228ca79ee772af19293d48af799309124c76ba0d17d891b1100618dd132fac81c867dd9a0a8717d07e0448612f551dcc54966ef3e5ee2c31f1e92b062763ab798b00232f1a1e2987e8bc72210ef3f5edd144d29a387441a428baf7d2c01983bf76601d2d027c9a2af560cebe7ec1657d30adba5544b2ff270c2270047dca90a03a638428c364086cd1a555a0f9f270e164429ed494585ffd36168c7a5ddcf1111f629c01bec07bad476ab9756c646d9bddb0478b63d7d990532dd2088a40af30944ab718fb048847824ac3b0a3088d3e04030b0c3b3a98dfff565ea81e743821004569043fb3d5c5445422f2fab9df5add8cdb03fa4a401e0e1985eea89e3e158d354281d3ccd682dddaf17360cd945f92fb78da9d2834395b2be1b352651c80bce30e7b62fa6df81def75a312d55a089d6dc2d30e57abbc7cfb257c413f675e23b196c0ade8be08400b50f596efada6d0752c8c7463cff8c8a2a974dd00fedf01e1f103175a1f350a6a676ae52b2544a18ab3f8419db6b34834e0cddfb35c6724ec45b359ad0eb76248efba0a2a157ebc6834e4153ccf1db0713b6a02100dc086fb75b46b1e81810daf3b3346a6f928104a0a4ef8662a25cc26e8463fb7ae60ada01dd3f56bdf48d01ae01543dfd404e44f91385c8cb8dae00994ab808e7b571824636c86012a83c93024ccfdf6a9b788ff35ffc89e5c68d1b113787ad8a7387d2d2da599a5865eded00b8d2b761715c57761b330d2c073b7b8cfe20d2887acd496fbe3d6962c147310d3b20eb9ee1e466addbe362efb6d720684e2566a3f4325e02572d42ef0154f7435dfe7cb5b056d9c2bf9f58d34477c0944aac7146d4e447dd2422c8b55fea02335f663896caacff7d0f598160826abca08f6f80c88cf83731ae6d4ef2132225be156dfedf4d798ec7b328f79376a5454bcd350f1f95b69add66d3fe30af021f3477e7405fab116ac8b09ff934ff84eb4eca80210edc473d4f0b229e2df4b6f572d41e64d3be9dd7997ecdef7ef97f6b03fb1bd1b67e4607f66e6a25b33cc9fd3249f660b0ac3a23376eec74e096eadcbb4ca4194078b219c77e0c2f5d035a5dbbc5d027198f1a91c8f7d2ee9278baf6803c4b2a1a6952a98e92950747cce34380955dbf5aed8f85b2e27c1ebf75c354558328d3044b594436f56a0c83577a1ca0d12d05811c00eb20c808e3cd78563dcc560f4a680907d5417fe5cfe62e70d8406f45ba6cd069618db4d01dc7202386df5e9a9200701c9a17c6271ac09a222620f1e6f21c526ea0257047c389718b99893753571fae6949283489c7eb67c357da0f534cdf1e4b8c16ffa41bd0b0de843781bb30efb2f8053ac2a0f17dc6f7cbc19d421b3ec3e99d264864ec14cc50bf730ab67eb1fc3ac3ec631c14039cca461a4ce10055868a25b7b927487ed0e702c6a2a6d2063d5596cf4cf405c681ecfbbc5a54503d84aea684b781b46431a820ae76f8f31d722b1f1ba02875ad43b26478cf5a876f7c593acd18cd954a9ae51d4be25bdb09e9859f2cd440353709ebf7a78d694e2986f6ae6f4660b79769de2744c31ddd841744a2db33f42a84d4c96a5e2174e6b1c1d6f0696a4306ccd015caff8047f14b02848bf4eac56440698f8e9d1591e044a87c873cff0004f96828800e495c3254f6d6b207d5a97702e57c86ea8e956b50b78b0de6599920a8805ecf5f268a6a83cd935cbb1077dd69c2c7bbb946964b9669a1e2f607a1e8445a2bb2180daf6e03719e67dfb287075f0fcbc9b19dafc84d4c5066d1fe2e6f523fb3e8cff34c30d95a38a5b872c0a3c5d83244f16d3ac4d86cea02a894f0f19809cc54f7871ae4f09e277578fb4422812b9745502d45aab87772fccfcd7e96becfb65033de7fb1e1c392dac2b907e4bbeb5b5f515f0eb1b1c412c7e034af572b48f189b5b7d038156ac3d332d74ed1d513185599113d9841bac1f30ec55b2243947ff4cb3bfabd70325500cfce0976861a106ea79cd1296b633f576350924fb275b65d12de6f5bf8a8b16b69560dbea8064bd0fa85c06941610d9740906315e488d2f62d68a159530eda45ed993abf4b9138f38bc50149adb6e8e71345ed7e097f6885de6b38004a995847cab37423cf2821d130f0ee26b050eaa3552b70b2e63f923b3eea2a7d200a8c085a54857178ddae5064ba8c5dac057fa71e2fc470b4479edfe137f1b0a21d12dd56e8293bdb350d14fda26fbdff41b10ce622a260e39cf99d60436378c993bb97cbedef8531535ab89ad8adc54512aa53ffc313733531297390a0ee15d89c36b1b96295b299b1c34db08e75ec10f9a716527ffe874430f66bba103ff99b97b14e633231b81e33f1f4fdf9c80ca4a3ed9f668b1be4795464d533fd139fabab071845ae3d5e51a7d2be71e7ceea36f65c499ab2a68ebff66b7f3f1288494d7c28829ff4a09d3dc54610a37e621307bfec1855687fcb06aaa43b1b7c236d6e2aa15a27bd8a8320e30619dc41c9cf6594622ccccbbb185c8acde05560767d984be16beaa61cd5089163fdd188c9e0a35e91cbcc28e85b49f19ca7cc061af979fcfaebd44005d9943ee4398bfb2affb78f39754a8055e650b4d1eefea93a8a98b243bb96b0ca977e8c6a198ab15275f319e7ac56764125c5b82d69664a0f5cb1a28d85f24160eda47506d6be56afbb35571f4b6ea10d8fb49267e4858d1f71ae231c401e4c13824689f6c732e2bd713ee4e8359820721ccfc6a06bccc548420ce5ac38ddfdddce16b3f53da0b62537b0e6721f3c1961657302165f9c76e63fc17fef3ea4ebbe785ceddbe2d625ad2b3b5a2425e41a8274d12e92ef0b25a25e9570824e0ede04275306a8c15ef965f73538a35d5b2967004d58746671f5123e9f097ee06263eea0823a32f9fd92e220f14015f2439060cc73c9d923a9b810c2190a7d6da9521526ecfd24f7fc151f767f3645bef70c9f3798677fb4c032a4b6045bfa3e9881d3e379d9b7ae3f0d84cc064ed6b2d7ff93e8ab6a3b2a8e00fc6800989379fc09e1a924852792bd869383bc7f90a5d92c1bfaf3c6891ed0f50f3eb95a09e09567c6e76ea6fc615db3a88ec686ae2467b8ea4f6820d6d653136895405ce7e5d0de7e5483ac458275244c8bd796d1c21533bc4ba4ab6209623787739bb416777a424679454f263ffaeb8b2ba81f54ac655060a8e347acecdac025b1e77360cceb8513f443fa00f5f431a6483e28fa5f13e043e9ba2665723b49be9a9d2f55dffb4978d4c890acd59eb3df29777214ecfc08cee5b51920d083af133907d2934d16ecf201708c153256487425e4a4c9bce1f6e249eb30f1afb8d6a72139249f9b82f9929938265701ff14fb0c0ab187435521ba3cf74a2a85fba9595cb2c806ce467f16f8ad7e07d607e9c1ba0ae2c5c2285f604b913c996083618420a72425b9bb509b38e6bb052187ca490e48b104d73719baa37c4b9fba2511252920fece181d4093ec60848b1a4491fd16b4073ee9847e9abc93538056e2496319fc94f7d3afdc5219bdaf415d2c0749d2894bd8c204e44469f228e6758d408e4fc157e5a62a4dbff715bb777c9838fc67f6442c39ac55dc42e0b38f5a522a1e2e5ff3bdd634b328c3b1478b302f9f96c1f36ae40f03a674dcadb5c2adf7f9bad809cd57180a1beb2c4d7f95eab80b1aca39b5c32a3c723e51a6a85437befe8724367c620c36837599e5c9e9611481d844801fbb3ffccde8c5c8782283aa64cef11916edcb560eeeb92008d8df27306e3db7c81a058e6ca10491217a192dff34a2babdb75c27142446c1922e3520089fd132b4035ff43482034a1733518f0b36fff03dcf8bc6e146ce0ba2274b873c7150308945a39987c535f3bd2ea5b3bcfb1675124178519ecc3806a4d5bfd6674aa3d727b70c4e0e920e603d32235adb1c79299cdb2c0c9b7f84b7476c82101d22f6f9c7888499045dc3ca15db38067a1445fde71564887704a31c119a5b5df580bdba7d70bc03dfce2c237999e7abc366345c44a110ef02666f6517b1b5be529dcae84e29fa5d97882f275e93068c2251c3bb4b956c304574165bc6dd49f2cf0ed06521ab2a5938c7a98c2dbafe57612f4206a58132450f9ea99534197ee0eed48f41c7fb41a7bfa3b3b18a55fa7ced4cf2763aeb4a17c8c96d1a1c5c2c9a12a0c41ee163a43595a5c705b215641fba14799ae3171847a902d8158ee4cf40552e8d66f81fd311b0bcb1149054f477b62c6bc281bba962f2aa1bd2561452a98e15ffe09439d64dd65162c22c5047c20045fee007ea2bbca1d75407540058b95797d6cce3b90ad72588eaa900b4c1fd031a4eef014a22d8c3c79d42b24abcae155ea8bb36a8a47b59bf53f783a28b10eca7d89a5c4c0e3d68633370771a4720e74617716df781d3462aa29af6b8458f454ef809aff175de27300c949b7d2877ecff9911e6318e273f3c2764177b77469fb099ad661e2d004a743cf1682bae7b9bc0209284367475f08e0c6b0e6400e83aea6baadad0f0269fa8e2eaf56dea0e38eec6390183ce245d0d2e1a0f56c97e03ffe762570fd7ecc6a64ce7d8e0e4a9b46d35a5ea90a24be08b8da140e32fb5a4f5f6b38c19a581823e99fcbce0862fd7d6106f8ee07705530f63aa2e292f8f7d9cf9a3139218bb27274feb832e967633bd6c6e08c902cf93d36f75fd3b75800efb786e24dd42d6c0afbc78556d8a29aa1d6037df2fb306868d5630d3a2829fc4425e044fec0d948b4a4078e497be5d5f2bbbae17c1b99e9783159030db77d8710e011af51cd543768eed9e8a5e36f157be942467ec21937ac4591c1c3d1ab96fb15a5453363e6100c8a31810f631f687fb7358d9b3cf900d392d79f5d90fb3b425c6016e5b7165f6d7bbc5ed09c90dc16df141d49e854ae7b7070090f692e50303a4f9297db3e5d93cc9e8b9e87d0244f4e8407af063159efcf27818e3058ba8df16188f9acc258a744e84fb18f2b166b170478a0373f8b3e8cd7a4a6061a37a20ff9a3110029394f31490553e30745fbcd7121855bc9ad467011cbe10177f3a3a12687a0ddc1b16c39a11514f51bde4353ab0748b6926c97d479db358798eacd3d1b3b0f03b08fcc9c8e44078a9777c9580425a50689b322e4a42d62f95dc0e5c26929551e08730dafd0becd2554fd7fa47a6c6bd20cb40e52b7431dedba6a1f24fecaeb39c1266215b12c0f69660621df38c15e54ce48a35014734e2bf6c67173396a4393293037c9f9663f412d026ff0acc0c167da42dd8ab2cd855250fd16e0a27c79d2b3385bbeed13f46fb323fbbe9b599bbfd598aff1f2f933f2d99359dce1385998417a1f8716edd59a74699aee8a172f651babefb87ae17e7930bc2350ab9ea80df653c25bebd841f607345dd69b71696da5eacb56222159ac706f9e561aece1a5a4aa882613802b37a924c84ecd8f7f929360a102ed900f81e8012e0cb7949f52fd60ee9b23d90a2c8ee48200d6520fb9af47dd052b32756f991bcac8c9c500adfe71887e26cdfa0fde7252e760c3b62c5ef8945bd2a80d5c7ceabc18d7d18c3d153e09f8cebc18d177f1fc4ac7f10e3fd62be32ca653a4c4e50c9c948254bfb76a167b1f1c8c7b70b7642c64a20016dfb9698acac064b7df7ed60e9ff92a342ac785ff3d82d359d6a70da98b726d5ac0285f3893a3e67d1c1f1cbb72c1128f0c2e5ae71fc7331083a4e298f1d2646f8721181b6ac467951e35b40557a4b5f5b6bdffef5f139d4e58cd7605a66a12f8c6ec420ce6641d2294b52cbf82a498f0def5b6216f8c0021723eb353ed64340829acc1a0e6e983f57a788ee41a560b5c5e63c3e4f083f14f097e0d66e694e471bea5e90908434fafeb54219c456cc8dcb5f26c43efc8e83d2cc68ff7c07f1e5e963e9d5ee586400c2cbd5ca20a26698422034787a26f3794695d8fbe8f5c795ea4aac878c3fd55a3e26612f88cda71ba7cd6fc7b161d66d1d05e00d627ff441064338f16be857b49390cd5ff3cd81455f4ee3816bc6b160a5a53306fd2d8ca1f7fd55bcef25194ef6b597f76f4edfc5abe63dbcc2a002f2993230343c6dd8659c524269486cea709c74abdf525d5d1346e8e076638ef0eed17d495b683a2045a9fae0ca90ff606b5b849d6ea64013321839e42a3ae9775a912ca803bc9bbe43c893604e9bcc1b25f7b402e7bd56ffbed73c191e5371aad6a0f281282891d878e1071d0d17b67a952dd92c210f5ded3fd47a077bd25bb57671da50576d7b033fc87d8aa7e97a3a2f8845d03b9588f337f42bc7c82d7d2c4991489c15c88b41acb738c50ada7ed6455d36ed6693cf8c20334b331a82ad78df431461e39533c3ac2ce7e847ff46f6548684dfef1bcfe1956ae7d96974f2a0c0cd10ea61c77afdc86980533f4bac7068e51cef96a874a614cc71b44fa5a19f5193acddc8efe840a82e03d32ddcca9ece9121422f6fa91ec78a3cccd4a89aa1aa89c52f5c2a208a267749514d84d08fe13cbbeeb320e38f3ae64eb912feaafd7ce280316287e952985710e66bffa511510ffad77b73e924e7f2daa1f5e693fc4705997152abe6ac06c9d1fa6df12364e8d77da8e81d7ca8666a207ef06482a55356aeab0cf11bd7ec84417e88ca83253672cbdeead903af48808baf2e300298e840b5eb2c7493dfbf4f87c72d20d47792b168b767e9545fc28242df56275642dc4a814e70ca4c4dd9816db88eb798c16f2c855ffd9d09b4f25c5f23d6e710dbe528c54622055e4dcfdb4c31e072235c1b33b55cdef2b47444ff00ea3f5bd5ecaeb67e5a5a0e5bd35108bccda95c2a8236fa4194048d829d31b55b6765aeda16a876b1ba7e4273cb7ac3940f686a43c3326d8f6c901660f79e1a9a60f26b4b95c367b08ae248563dacbc4dcb755fc3a26dfa2b3949d8a7b4a2637a3fd21ea124ca3bbd0757ef4a3601eb0e726a9209e501d22f66e2dad051140a01e17870e40cc4e4147d367080506ae9ef28c3497cbe0a264ca7820a6c9b2852c1acc76f8883349448cdc2b27e7832254ce04c68c49aa1147cc62a3eec990adc271ae2394dcfb33fcb5e1cbddf1126a39e2bb545fdc02bc0c25107cc82ed19fb624329481cf531a7e026fc9e76d3e9b88d025ac831bb3d0ca090224eea3fe1f71b6ee78f050bd311d75d1678e00292667dcdd9f59efc6f5d6c15732d8a35feaacbf0de0c1742b0c9baadaeb94d1126133f1e5eda017724f23a76ab63463606b13f64c54e7039d6f97692180610e4037e4d4aeb25126dadaebb8012b7159b6b0cfb9c8dd8599eda71a3896fa0d339d9561e9759bed67afe657f53c80c82b7a1094e2274944d3340f9a407e3d4a88244d3eb2f2be64b995297d380969408ab38a94383da2d2eab1ad7271093d29df97256e9b9422fd1c37f31149298fbba93451cd99ed37cdd2b8ecd26cb0ae78f2ead18059927e111a985a59d242d40dc050127e8bdaf676721d2fdac47c8b63c1f56eca11c4c26ce1e6955bfe50a4f914d99927e2bcf525c5045df651cf8b561c426046be19f081dcbd12e2190ae883c45b44e777a07e62c29a2ee0d5487a2dce3b9accc184625bf2d386b87c833c9fa7ee442291f26d394b881e003aff6fb29ed1c9376bd3a84b7cb3eae5ce983237f34aac1ea04ce9aeff105fded986df803df78256e703468285a288258f5f886499f643258c598f6bfb4df243506fecb44626c9d889b6af9b5542e490f200f0abf125d85856bf7852ff61469f976ffc47a51d75ab597ac5b485331dfd56c6d447f7b78b10aa3bab51dda3881e94e619ef629ac67891c9e09201a527abfc2e085db3caa74c78011734fcb90807815e668785f4ecf72410e1fd08527ab0007ce150b6daa01136dd078f0cf53317aa13d23556c7a8c7fb6478de449e0a049b593c24d7699852f1a6a31c44e0ea6221904453c0b235d8e736ba51686f192c5ca127c4da94e010b2aceb22f302fd5be6b160a5498e18d5a6c56a5a9a478243a27e7dcfdead02bb12f040d86becd214227f08632f382f49b75f354db46383e199bfdeb7f0dd0a1dcee0458c99d9075e41354dcd24ed8a80f1cdb03886bb16a407f3677372fbcd39d9edb9fcee30d33a7509869a0e8386e3eb4a736c873f32d153302a777c8d99272807eadd5a496399b6353e778564b95a688f869b6d136fb0b6dcdeaf39a7830a08091cef6a690bd88c99b78eed780003e708e5149577a43d5a26d4b9f5611e3842a255ed310c0f754e3d95106f3f1e8b47827354fe6ec27884ccd75d07c343b2aa2edb8c48e15efe348ca3d7c73083199d083d0ef2e35cce54680abe5ac51762cbdbb7e3c244bf6708360cf2b92f885a42326c670d780afb76f98167a09170752fb06ae75c78f248dffb1d29d9106a967ab5a88f4e476dfc7187792cb34aab3e6aefb4dbf62774535ce00c5148d4e530f901ceb2ad7596ee09c2d73cf04034cb69dc879c55b1af0</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>鸽~</tag>
        <tag>考试</tag>
        <tag>KMP</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200826</title>
    <url>/2020/08/26/T20200826/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="555c05e157e6e3b09f6dd6b9339fc5b2acbc92aa0d48c6ea1821f5c624af0ca7"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>树型Dp</tag>
        <tag>鸽~</tag>
        <tag>考试</tag>
        <tag>数位Dp</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200827</title>
    <url>/2020/08/27/T20200827/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="5f2e73a0805a8e9b7f33bf97c75757d5a89351525a66f1230a4408c1db7a3693"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>倍增</tag>
        <tag>数据结构</tag>
        <tag>鸽~</tag>
        <tag>Dp优化</tag>
        <tag>考试</tag>
        <tag>LCA</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200828</title>
    <url>/2020/08/29/T20200828/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="03ed622c7e332172620ad779840600b94a274c7e3d8166eabb3b2d94cc8c5750"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>字典树</tag>
        <tag>数学</tag>
        <tag>鸽~</tag>
        <tag>考试</tag>
        <tag>状压</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200831</title>
    <url>/2020/08/31/T20200831/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="d601790c363ab21e44a16c9933e5f876485641349e8b9e17e7e963add6d9b377"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>图论</tag>
        <tag>考试</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200901</title>
    <url>/2020/09/01/T20200901/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="19c0668c6c5a2d5307589257a10b0de251455abc7dc42f8602036b00cdd7b9b8"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>数学</tag>
        <tag>鸽~</tag>
        <tag>考试</tag>
        <tag>期望Dp</tag>
        <tag>启发式合并</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200902</title>
    <url>/2020/09/02/T20200902/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="993e78576918627a1a2d83fa834eca78902c5fff5847eed121073c00d8b7573a"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>数学</tag>
        <tag>鸽~</tag>
        <tag>考试</tag>
        <tag>概率</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200903</title>
    <url>/2020/09/03/T20200903/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="0b8cd7b97a11292b05755143cfdd54252b40b3a7eef60b319ce89509d75bae76">ea28f56739cdf7e0c1b6eef8e5c0d7b848fb7d1ea2363cafd5f7408718ec2a9ffc39d9834b8cc63feb027fc4f806a8ce9cd4988bfcb732d81dabebfebe6a54088e42a38d46a9cc9ba920023f480d650fdda9482d96868f350fdde8d244c8d51e2328f8c8cbd7964d4498925388f55283a6611a5f8c6f546bd2bcb1292edcddb2eebc4f99967329495bb24637979e824852982f3a3a11ef03db83407224947b68c01ef994de09abd979204094e23712a6cda23cdb51ad01c6e03aeb49a2c4380d69a6332415aefd06d7d3db2e1103840f73a176ecaa5619696d235fd5738cb2f3112d5be0fd75a9423aded04bfc5ffddb44729c4a3cddfdbeb68a179cf192829012eba2b1214f653049b8b1482059c6e1b28977c24e4bc813f1f93a68e6d4fe9aaa89ba40d69f206504fb76022f10a22b77dc421a69d80d5b40661a51d6dd99c51a31fb20b879762c46225281242650c0373660f1a7751813ec2e988fbf20fef559a1e43503859adfb0633b47c3c851715a7e3ef4ccc24fee36bbe97a999f1aa5d9a0fed51b13ae29f0adcd50838f0d807c1f9ad1c75575dd1aed80afa78faa99b0ec7fabb5237d5cab3718935a165eccc89b957e0bcf6c9270f7c2c7f91548b5b00696df69791d1d5b1d4f9e547fdb0d9dc0296ecbda693683cebba18d41afb07416bc5924b0015006f33d8b4a76886a23665298c0e41b1098e7606cd3668eab9ced68a1d71f551217ea4bb1be50215d92022e17c1ca13c510abb1de8b384b3e19d8172f50c47383c36979b587383663137994045d5ceef8edee7b85e0d78f72eae50f401c6d5d40b8adf5ac42199e5add13d0c2c6a90940f157cb40bed48d31682c712b32287fb5654839f048e507a4570bc99aeeb4bb475ab03fd955c4a62b91fffa64283c0083dfd966b18be0916e7533436afd815c16799c35c86588ecb9dff74cb7baa683c3d3877be263b24e3eae4b36aa0b7445cd4862c08f5bd10ae5e4834e8bb5a64249198143800dee7fbd4335c3cb7133bf9ede91718973f8ab3af23ccdbc1b53c9713eebb98b2864946796d49f377125443eeba8c98d69a6487f51e6cf43f8a418d3a8b3fb478156f632ea8f1a9b3dd4fdd5711de5accdbfa15356ce509a09f92502da9f3b24bd17e46ca0eff516d6bc2c506676b70bbcde3335</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>鸽~</tag>
        <tag>考试</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200904</title>
    <url>/2020/09/04/T20200904/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="6c1e862982636fad8327450087c3f41fb168fab8fb94a641c0b5ebfe1bfd19de"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>贪心</tag>
        <tag>鸽~</tag>
        <tag>考试</tag>
        <tag>矩阵</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200903赛后总结(转载)</title>
    <url>/2020/09/03/T20200903(%E8%BD%AC%E8%BD%BD)/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="8e3b179056a8be7e757e72444b3e0ffb38fbe4df6248b8077c7b0cafc3d9b063"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>考试</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200922</title>
    <url>/2020/09/22/T20200922/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="693d9add7f54a48edcdbb230c7a56aaf60bf6466429987008712423b4c448bf7"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>莫比乌斯反演</tag>
        <tag>数据结构</tag>
        <tag>鸽~</tag>
        <tag>考试</tag>
        <tag>期望Dp</tag>
        <tag>笛卡尔树</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200924</title>
    <url>/2020/09/25/T20200924/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="c5e34b51ba6f9e35b101a738b9ed40f5d6e1e10cf9c77bca925b4e8ab033f040"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>二分</tag>
        <tag>贪心</tag>
        <tag>鸽~</tag>
        <tag>最短路</tag>
        <tag>考试</tag>
      </tags>
  </entry>
  <entry>
    <title>T20200929</title>
    <url>/2020/09/29/T20200929/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="d3e7a9817aa5a738787c1ffe485021d74e9536e78fc79ea45e73210ce0b4597f"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>二分</tag>
        <tag>数据结构</tag>
        <tag>生成树</tag>
        <tag>考试</tag>
      </tags>
  </entry>
  <entry>
    <title>Telephone Line S</title>
    <url>/2020/09/15/Telephone-Line-S/</url>
    <content><![CDATA[<h1 id="Telephone-Line-S"><a href="#Telephone-Line-S" class="headerlink" title="Telephone Line S"></a><a href="https://ac.nowcoder.com/acm/problem/24950" target="_blank" rel="noopener">Telephone Line S</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意:"></a>题目大意:</h2><p>首先你有一张图，问你从$1$到$n$的路径中第$k+1$条最大的边最小有多大</p>
<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>这个题很显然是可以二分答案的</p>
<p>但是我们考虑换一种做法：分层图</p>
<p>那么就是跨层的时候让其代价为$0$，那么一共就有$k+1$层图</p>
<p>在跑一个类似最短路的东西就可以了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x7f7f7f7f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, p, k, cur;</span><br><span class="line"><span class="keyword">int</span> head[maxn], edge[maxn], __prev[maxn], cost[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">void</span> _addedge(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span><br><span class="line">&#123;</span><br><span class="line">    __prev[++cur] = head[u];</span><br><span class="line">    head[u] = cur;</span><br><span class="line">    edge[cur] = v;</span><br><span class="line">    cost[cur] = w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">void</span> __addedge(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span><br><span class="line">&#123;</span><br><span class="line">    _addedge(u, v, w), _addedge(v, u, w);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">SPFA</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span> (dis, <span class="number">0x7f</span>, <span class="keyword">sizeof</span> dis);</span><br><span class="line">    <span class="built_in">deque</span> &lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    Q.push_back(<span class="number">1</span>);</span><br><span class="line">    dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> now = Q.front();</span><br><span class="line">        Q.pop_front();</span><br><span class="line">        vis[now] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[now]; i; i = __prev[i]) &#123;</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">int</span> v = edge[i];</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &lt;= max(dis[now], cost[i])) <span class="keyword">continue</span>;</span><br><span class="line">            dis[v] = max(dis[now], cost[i]);</span><br><span class="line">            <span class="keyword">if</span> (vis[v]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (Q.empty() || dis[v] &lt;= dis[Q.front()]) Q.push_front(v);</span><br><span class="line">            <span class="keyword">else</span> Q.push_back(v);</span><br><span class="line">            vis[v] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dis[n * (k + <span class="number">1</span>)] == inf) <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, dis[n * (k + <span class="number">1</span>)]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), p = __read(), k = __read();</span><br><span class="line">    <span class="keyword">while</span> (p--) &#123;</span><br><span class="line">        <span class="keyword">int</span> u = __read(), v = __read(), a = __read();</span><br><span class="line">        __addedge(u, v, a);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; ++i) &#123;</span><br><span class="line">            __addedge(i * n + u, i * n + v, a);</span><br><span class="line">            _addedge((i - <span class="number">1</span>) * n + u, i * n + v, <span class="number">0</span>);</span><br><span class="line">            _addedge((i - <span class="number">1</span>) * n + v, i * n + u, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    SPFA();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>最短路</tag>
        <tag>分层图</tag>
      </tags>
  </entry>
  <entry>
    <title>ToMyself</title>
    <url>/2020/07/23/ToMyself/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="9b3ecd1aeb1fa90fbd626bc0ac0a3d95e97b6aa5edfe0130d9358238b8536d5a"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>秘密</tag>
      </tags>
  </entry>
  <entry>
    <title>[USACO19DEC]Greedy Pie Eaters P</title>
    <url>/2020/09/24/USACO19DEC-Greedy-Pie-Eaters-P/</url>
    <content><![CDATA[<h1 id="USACO19DEC-Greedy-Pie-Eaters-P"><a href="#USACO19DEC-Greedy-Pie-Eaters-P" class="headerlink" title="[USACO19DEC]Greedy Pie Eaters P"></a><a href="https://www.luogu.com.cn/problem/P5851" target="_blank" rel="noopener">[USACO19DEC]Greedy Pie Eaters P</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>有$n$个派可以吃</p>
<p>有$m$头牛来吃</p>
<p>第$m$头牛的重量为$w_i$，这头牛要吃的区间为$[l_i,r_i]$</p>
<p>然后你是要保证每头牛都有的吃</p>
<p>那么你可以安排这些牛吃派的顺序</p>
<p>最后会得到这样一个序列$c_1,c_2\cdots c_n$</p>
<p>求：</p>
<script type="math/tex; mode=display">
ans = max(\sum_{i=1}^nw_{c_i})</script><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>看上去像个贪心啥的</p>
<p>但是贪心不能保证每头牛都有得吃，所以我们考虑$Dp$</p>
<p>参考<a href="http://www.usaco.org/current/data/sol_pieaters_platinum_dec19.html" target="_blank" rel="noopener">官方题解</a></p>
<p><img src="https://s1.ax1x.com/2020/09/24/0pYJ2R.png" alt=""></p>
<p>可以，就是这个意思</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">300</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) &#123;</span><br><span class="line">        x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[maxn][maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> g[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = __read(), m = __read();</span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        <span class="keyword">int</span> w = __read(), l = __read(), r = __read();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> p = l; p &lt;= r; ++p)</span><br><span class="line">            f[p][l][r] = w;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> p = <span class="number">1</span>; p &lt;= n; ++p)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = p; l &gt;= <span class="number">1</span>; --l)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> r = p; r &lt;= n; ++r)</span><br><span class="line">                f[p][l - <span class="number">1</span>][r] = max(f[p][l - <span class="number">1</span>][r], f[p][l][r]),</span><br><span class="line">                f[p][l][r + <span class="number">1</span>] = max(f[p][l][r + <span class="number">1</span>], f[p][l][r]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> r = <span class="number">1</span>; r &lt;= n; ++r)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = r; l; --l)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = l; k &lt;= r; ++k)</span><br><span class="line">                g[l][r] = max(g[l][r], g[l][k - <span class="number">1</span>] + g[k + <span class="number">1</span>][r] + f[k][l][r]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, g[<span class="number">1</span>][n]);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>贪心</tag>
        <tag>区间Dp</tag>
      </tags>
  </entry>
  <entry>
    <title>UVA11475</title>
    <url>/2020/09/04/UVA11475/</url>
    <content><![CDATA[<h1 id="UVA11475-Extend-to-Palindrome"><a href="#UVA11475-Extend-to-Palindrome" class="headerlink" title="UVA11475[Extend to Palindrome]"></a><a href="https://www.luogu.com.cn/problem/UVA11475" target="_blank" rel="noopener">UVA11475[Extend to Palindrome]</a></h1><h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给你一个字符串$S$，让你找一个长度最小的回文串$P$使得$S$是$P$的前缀</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>我们能够构造出的最简单的回文串$P\prime=S+reverse(S)$</p>
<p>显然$P\prime$要尽量的小，那么$S$与$reverse(S)$就要尽可能地重叠</p>
<p>观察发现，尽可能重叠，其实是求得$S$末尾的最大的回文串</p>
<p>所以就有很多大佬用什么$\text{manacher、SA}$然而我都不会</p>
<p>那么我们重新想一想回文的定义，简单地说就是<del>正着读，倒着读是一样的</del></p>
<p>那么我们可以把$S$反转一下得到$S\prime$，做一次$\text{KMP}$看在$S$左后一个字符的最大匹配</p>
<p>那么这个值就是$S$后缀的最长回文串，那么需要补上的字符串不就可以直接输出了？</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> a[maxn], b[maxn];</span><br><span class="line"><span class="keyword">int</span> len, last, kmp[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ac</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    len = <span class="built_in">strlen</span>(a + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memset</span> (kmp, <span class="number">0</span>, <span class="keyword">sizeof</span> kmp);</span><br><span class="line">    <span class="built_in">memset</span> (b, <span class="number">0</span>, <span class="keyword">sizeof</span> b);</span><br><span class="line">    <span class="built_in">memcpy</span>(b + <span class="number">1</span>, a + <span class="number">1</span>, len);</span><br><span class="line">    reverse(b + <span class="number">1</span>, b + len + <span class="number">1</span>);</span><br><span class="line">    last = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= len; ++i) &#123;</span><br><span class="line">        <span class="keyword">while</span> (last &amp;&amp; b[last + <span class="number">1</span>] != b[i]) last = kmp[last];</span><br><span class="line">        <span class="keyword">if</span> (b[last + <span class="number">1</span>] == b[i]) ++last;</span><br><span class="line">        kmp[i] = last;</span><br><span class="line">    &#125;</span><br><span class="line">    last = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; ++i) &#123;</span><br><span class="line">        <span class="keyword">while</span> (last &amp;&amp; a[i] != b[last + <span class="number">1</span>]) last = kmp[last];</span><br><span class="line">        <span class="keyword">if</span> (a[i] == b[last + <span class="number">1</span>]) ++last;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%s%s\n"</span>, a + <span class="number">1</span>, b + last + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%s"</span>, a + <span class="number">1</span>))ac();</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>贪心</tag>
        <tag>KMP</tag>
      </tags>
  </entry>
  <entry>
    <title>Working Out</title>
    <url>/2020/09/15/Working-Out/</url>
    <content><![CDATA[<h1 id="Working-Out"><a href="#Working-Out" class="headerlink" title="Working Out"></a><a href="https://ac.nowcoder.com/acm/problem/110489" target="_blank" rel="noopener">Working Out</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意:"></a>题目大意:</h2><p>给定一个矩阵，每个点都有一个点权，让你求从矩阵中某一点到矩阵四个顶点的权值之和减去自己的四倍的值最大(就是这个点没有贡献)</p>
<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>我们画两张图，看看他们的路径，就会发现其实只有两种情况<br><strong>一</strong>:<br><img src="https://uploadfiles.nowcoder.com/files/20200908/675676897_1599549981026_wQibfx.md.png" alt=""><br><strong>二</strong>：<br><img src="https://uploadfiles.nowcoder.com/files/20200908/675676897_1599550140637_wQFl90.png" alt=""></p>
<p>就是说其实只有两种转移的方式</p>
<p>那么我们用4个数组分别记录到四个顶点的最大距离<br>然后再枚举每个点作为交点时的答案，不断更新</p>
<script type="math/tex; mode=display">
ans=\max_{1<i<n,1<j<m}(dp[1][i - 1][j] + dp[3][i + 1][j] + dp[2][i][j + 1] + dp[4][i][j - 1],dp[1][i][j - 1] + dp[3][i][j + 1] + dp[2][i - 1][j] + dp[4][i + 1][j])</script><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">5</span>][maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n, m, ans, a[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">max_</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Read</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	int x(0), f = 1;</span><br><span class="line">    <span class="keyword">char</span> ch = getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123; </span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="keyword">while</span> (ch &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (ch ^ <span class="number">48</span>), ch = getchar();</span><br><span class="line">	<span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = Read(), m = Read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j) a[i][j] = Read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j) </span><br><span class="line">            dp[<span class="number">1</span>][i][j] = max_(dp[<span class="number">1</span>][i - <span class="number">1</span>][j], dp[<span class="number">1</span>][i][j - <span class="number">1</span>]) + a[i][j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = m; j &gt;= <span class="number">1</span>; --j) </span><br><span class="line">            dp[<span class="number">2</span>][i][j] = max_(dp[<span class="number">2</span>][i - <span class="number">1</span>][j], dp[<span class="number">2</span>][i][j + <span class="number">1</span>]) + a[i][j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; --i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = m; j &gt;= <span class="number">1</span>; --j) </span><br><span class="line">            dp[<span class="number">3</span>][i][j] = max_(dp[<span class="number">3</span>][i + <span class="number">1</span>][j], dp[<span class="number">3</span>][i][j + <span class="number">1</span>]) + a[i][j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; --i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j) </span><br><span class="line">            dp[<span class="number">4</span>][i][j] = max_(dp[<span class="number">4</span>][i + <span class="number">1</span>][j], dp[<span class="number">4</span>][i][j - <span class="number">1</span>]) + a[i][j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt; m; ++j)</span><br><span class="line">            ans = max_ (ans, dp[<span class="number">1</span>][i - <span class="number">1</span>][j] + dp[<span class="number">3</span>][i + <span class="number">1</span>][j] + dp[<span class="number">2</span>][i][j + <span class="number">1</span>] + dp[<span class="number">4</span>][i][j - <span class="number">1</span>]), </span><br><span class="line">            ans = max_ (ans, dp[<span class="number">1</span>][i][j - <span class="number">1</span>] + dp[<span class="number">3</span>][i][j + <span class="number">1</span>] + dp[<span class="number">2</span>][i - <span class="number">1</span>][j] + dp[<span class="number">4</span>][i + <span class="number">1</span>][j]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>Dp优化</tag>
      </tags>
  </entry>
  <entry>
    <title>JSOI平衡点</title>
    <url>/2020/07/24/%5BJSOI%5D%E5%B9%B3%E8%A1%A1%E7%82%B9/</url>
    <content><![CDATA[<h1 id="JSOI2004-平衡点-吊打XXX"><a href="#JSOI2004-平衡点-吊打XXX" class="headerlink" title="[JSOI2004]平衡点 / 吊打XXX"></a><a href="https://www.luogu.com.cn/problem/P1337" target="_blank" rel="noopener">[JSOI2004]平衡点 / 吊打XXX</a></h1><p>被吊打了啊 !</p>
<p><del>这道题, 看上去真的挺难的 .</del></p>
<p>简言之, 就是求平衡状态时, 中心点的位置 .</p>
<p>做出受力分析图, 我们可以看得出来, 这个点的位置, 其实与绳子是无关的, 每根绳的拉力, 也一定是等于重物的</p>
<p>所以, 我们可以先随机一个点, 求出这$n$根线对着个点的作用力的合力. 因为力的方向不好表示, 所以我们可以正交分解, 将力分解到$x$轴和$y$轴上去.</p>
<p>这个点必定会沿合力方向移动一定的距离, 直到合力为零. </p>
<p>但是, 我们在不用其他数学工具的情况下, 我们可以随机一个较大步长, 然后不断地缩小这个步长, 就可以越来越接近这个目标点了. </p>
<p>当某一次的移动前后的变化小于精度范围时, 那么我们就找到答案了.</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">double</span> X, Y;</span><br><span class="line">bool Xf(1), Yf(1);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> X, Y, G;</span><br><span class="line">&#125;Points[Maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Solve</span><span class="params">(<span class="keyword">double</span> M)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    double x(0), y(0), Temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        Temp = <span class="built_in">sqrt</span>((X - Points[i].X) * (X - Points[i].X) + (Y - Points[i].Y) * (Y - Points[i].Y));</span><br><span class="line">        <span class="keyword">if</span> (!Temp) <span class="keyword">continue</span>;</span><br><span class="line">        x += Points[i].G / Temp * (Points[i].X - X);</span><br><span class="line">        y += Points[i].G / Temp * (Points[i].Y - Y);</span><br><span class="line">    &#125;</span><br><span class="line">    Temp = <span class="built_in">sqrt</span>(x * x + y * y);</span><br><span class="line">    Y += M / Temp * y;</span><br><span class="line">    X += M / Temp * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%d %d %d"</span>, &amp;Points[i].X, &amp;Points[i].Y, &amp;Points[i].G);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> M = <span class="number">10000</span>, tx, ty;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tx = X, ty = Y;</span><br><span class="line">        Solve(M);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(tx - X) &lt; <span class="number">0.00001</span> &amp;&amp; <span class="built_in">abs</span>(ty - Y) &lt; <span class="number">0.00001</span>) <span class="keyword">break</span>;</span><br><span class="line">        M *= <span class="number">0.9</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%.3lf %.3lf\n"</span>, X, Y);</span><br><span class="line">    system (<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>几何</tag>
      </tags>
  </entry>
  <entry>
    <title>kmp</title>
    <url>/2020/06/24/kmp/</url>
    <content><![CDATA[<h1 id="模板KMP"><a href="#模板KMP" class="headerlink" title="模板KMP"></a><a href="https://www.luogu.com.cn/problem/P3375" target="_blank" rel="noopener"><strong>模板KMP</strong></a></h1><p>$KMP$简单的来是用一个串在另一个串中匹配</p>
<p>那么对于这样一个模板我们可以怎么处理呢?</p>
<p>假象现在我们在进行暴力匹配，此时情况如下:</p>
<script type="math/tex; mode=display">
s1="abcabc...."\\
s2="abcabb"....</script><p>可以看见现在的$s2$的最后一个$b$对齐的是$s1$的$c$</p>
<p>简单地说现在的$b$就是一个失配点</p>
<p>也就是说现在我们需要重新匹配</p>
<p>如果再从头开始的匹配的话显然有些浪费时间了</p>
<p>于是我们似乎可以就寻找上一个失配点的位置即$……b$的位置</p>
<p>于是我们找到了$ab$，也就是$s2$的开头的两个字符，然后继续这样匹配下去就可以了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> A[Maxn], B[Maxn];</span><br><span class="line"><span class="keyword">int</span> Last, LOA, LOB, KMP[Maxn];<span class="comment">//这个KMP数组就是记录上一个失配点的位置</span></span><br><span class="line"><span class="comment">//后面的代码就非常的浅显易懂了</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>, A + <span class="number">1</span>, B + <span class="number">1</span>);</span><br><span class="line">    LOA = <span class="built_in">strlen</span>(A + <span class="number">1</span>), LOB = <span class="built_in">strlen</span>(B + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= LOB; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (Last &amp;&amp; B[i] != B[Last + <span class="number">1</span>]) Last = KMP[Last];</span><br><span class="line">        <span class="keyword">if</span> (B[Last + <span class="number">1</span>] == B[i]) ++Last;</span><br><span class="line">        KMP[i] = Last;</span><br><span class="line">    &#125;</span><br><span class="line">    Last = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= LOA; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (Last &amp;&amp; A[i] != B[Last + <span class="number">1</span>]) Last = KMP[Last];</span><br><span class="line">        <span class="keyword">if</span> (B[Last + <span class="number">1</span>] == A[i]) ++Last;</span><br><span class="line">        <span class="keyword">if</span> (Last == LOB)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, i - LOB + <span class="number">1</span>);</span><br><span class="line">            Last = KMP[Last];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= LOB; ++i) <span class="built_in">printf</span>(<span class="string">"%d "</span>, KMP[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>KMP</tag>
      </tags>
  </entry>
  <entry>
    <title>$\LaTeX$[置顶]</title>
    <url>/2223/10/22/latex/</url>
    <content><![CDATA[<h1 id="声调-变音符号"><a href="#声调-变音符号" class="headerlink" title="声调/变音符号"></a>声调/变音符号</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\dot&#123;a&#125; \ddot&#123;a&#125; \acute&#123;a&#125; \grave&#123;a&#125;$</span><br></pre></td></tr></table></figure>
<p> $\dot{a}\quad \ddot{a}\quad \acute{a}\quad \grave{a}$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\check&#123;a&#125; \breve&#123;a&#125; \tilde&#123;a&#125; \bar&#123;a&#125;$</span><br></pre></td></tr></table></figure>
<p>$\check{a}\quad \breve{a}\quad \tilde{a}\quad \bar{a}\quad$ </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\hat&#123;a&#125; \widehat&#123;a&#125; \vec&#123;a&#125;$</span><br></pre></td></tr></table></figure>
<p> $\hat{a}\quad \widehat{a}\quad \vec{a}$</p>
<h1 id="类字母符号即常数"><a href="#类字母符号即常数" class="headerlink" title="类字母符号即常数"></a>类字母符号即常数</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\infty \aleph \complement \backepsilon \eth \Finv \hbar$</span><br></pre></td></tr></table></figure>
<p> $\infty\quad \aleph\quad \complement\quad \backepsilon\quad \eth\quad \Finv\quad \hbar$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\Im \imath \jmath \Bbbk \ell \mho \wp \Re \circledS$</span><br></pre></td></tr></table></figure>
<p> $\Im\quad \imath\quad \jmath\quad \Bbbk\quad \ell\quad \mho\quad \wp\quad \Re\quad \circledS$</p>
<h1 id="数论用"><a href="#数论用" class="headerlink" title="数论用"></a>数论用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$a\equiv1\pmod&#123;m&#125;$</span><br></pre></td></tr></table></figure>
<p>$a\equiv1\pmod{m}$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$a\bmod b$</span><br></pre></td></tr></table></figure>
<p> $a\bmod b$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\gcd(m,n) \operatorname&#123;lcm&#125;(m,n)$</span><br></pre></td></tr></table></figure>
<p>$\gcd(m,n)\quad \operatorname{lcm}(m,n)$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\mid \nmid \shortmid \nshortmid$</span><br><span class="line">ps：\mid可以用|代替。</span><br></pre></td></tr></table></figure>
<p> $\mid\quad \nmid\quad \shortmid\quad \nshortmid$ </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$a\%b$</span><br></pre></td></tr></table></figure>
<p>$a\%b$</p>
<h1 id="根号"><a href="#根号" class="headerlink" title="根号"></a>根号</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\surd \sqrt&#123;2&#125; \sqrt[n]&#123;&#125; \sqrt[n]&#123;x&#125;$</span><br></pre></td></tr></table></figure>
<p> $\surd\quad \sqrt{2}\quad \sqrt[n]{}\quad \sqrt[n]{x}$</p>
<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$+ - \pm \mp \dotplus$</span><br></pre></td></tr></table></figure>
<p>$+\quad -\quad \pm\quad \mp\quad \dotplus$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\times \div \divideontimes &#x2F; \backslash$</span><br></pre></td></tr></table></figure>
<p> $\times\quad \div\quad \divideontimes\quad /\quad \backslash$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\cdot * \star \circ \bullet$</span><br><span class="line">ps:*可以用\ast代替。</span><br></pre></td></tr></table></figure>
<p> $\cdot\quad *\quad \star\quad \circ\quad \bullet$ </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\oplus \ominus \otimes \oslash \odot$</span><br></pre></td></tr></table></figure>
<p> $\oplus\quad \ominus\quad \otimes\quad \oslash\quad \odot$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\circleddash \circledcirc \circledast$</span><br></pre></td></tr></table></figure>
<p> $\circleddash\quad \circledcirc\quad \circledast$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\bigoplus \bigotimes \bigodot$</span><br></pre></td></tr></table></figure>
<p> $\bigoplus\quad \bigotimes\quad \bigodot$</p>
<h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\&#123; \&#125; \emptyset \varnothing$</span><br></pre></td></tr></table></figure>
<p> ${\quad }\quad \emptyset\quad \varnothing$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\in \notin \not\in \ni \not\ni$</span><br></pre></td></tr></table></figure>
<p> $\in\quad \notin\quad \not\in\quad \ni\quad \not\ni$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\cap \Cap \sqcap \bigcap$</span><br></pre></td></tr></table></figure>
<p> $\cap\quad \Cap\quad \sqcap\quad \bigcap$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\cup \Cup \sqcup \bigcup \bigsqcup \uplus \biguplus$</span><br></pre></td></tr></table></figure>
<p> $\cup\quad \Cup\quad \sqcup\quad \bigcup\quad \bigsqcup\quad \uplus\quad \biguplus$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\setminus \smallsetminus \times$</span><br></pre></td></tr></table></figure>
<p> $\setminus\quad \smallsetminus\quad \times$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\subset \Subset \sqsubset$</span><br></pre></td></tr></table></figure>
<p> $\subset\quad \Subset\quad \sqsubset$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\supset \Supset \sqsupset$</span><br></pre></td></tr></table></figure>
<p> $\supset\quad \Supset\quad \sqsupset$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\subseteq \nsubseteq \subsetneq \varsubsetneq \sqsubseteq$</span><br></pre></td></tr></table></figure>
<p>$\subseteq\quad \nsubseteq\quad \subsetneq\quad \varsubsetneq\quad \sqsubseteq$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\supseteq \nsupseteq \supsetneq \varsupsetneq \sqsupseteq$</span><br></pre></td></tr></table></figure>
<p> $\supseteq\quad \nsupseteq\quad \supsetneq\quad \varsupsetneq\quad \sqsupseteq$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\subseteqq \nsubseteqq \subsetneqq \varsubsetneqq$</span><br></pre></td></tr></table></figure>
<p> $\subseteqq\quad \nsubseteqq\quad \subsetneqq\quad \varsubsetneqq$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\supseteqq \nsupseteqq \supsetneqq \varsupsetneqq$</span><br></pre></td></tr></table></figure>
<p> $\supseteqq\quad \nsupseteqq\quad \supsetneqq\quad \varsupsetneqq$</p>
<h1 id="关系符号"><a href="#关系符号" class="headerlink" title="关系符号"></a>关系符号</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$&#x3D; \ne \neq \equiv \not\equiv$</span><br></pre></td></tr></table></figure>
<p> $=\quad \ne\quad \neq\quad \equiv\quad \not\equiv$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\doteq \doteqdot \overset&#123;\underset&#123;def&#125;&#123;&#125;&#125;&#123;&#x3D;&#125; :&#x3D;$</span><br></pre></td></tr></table></figure>
<p> $\doteq\quad \doteqdot\quad \overset{\underset{def}{}}{=}\quad :=$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\sim \nsim \backsim \thicksim \simeq \backsimeq \eqsim \cong \ncong$</span><br></pre></td></tr></table></figure>
<p> $\sim \quad\nsim\quad \backsim\quad \thicksim\quad \simeq \quad \backsimeq\quad \eqsim\quad \cong\quad \ncong$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\approx \thickapprox \approxeq \asymp \propto \varpropto$</span><br></pre></td></tr></table></figure>
<p> $\approx\quad\thickapprox\quad \approxeq\quad \asymp\quad \propto\quad \varpropto$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$&lt; \nless \ll \not\ll \lll \not\lll \lessdot$</span><br></pre></td></tr></table></figure>
<p> $&lt;\quad \nless\quad \ll\quad \not\quad\ll \quad\lll \quad\not\lll\quad \lessdot$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$&gt; \ngtr \gg \not\gg \ggg \not\ggg \gtrdot$</span><br></pre></td></tr></table></figure>
<p> $&gt; \quad\ngtr\quad \gg\quad \not\gg\quad \ggg\quad \not\ggg \quad\gtrdot$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\le \leq \lneq \leqq \nleq \nleqq \lneqq \lvertneqq$</span><br></pre></td></tr></table></figure>
<p> $\le\quad \leq\quad \lneq\quad \leqq\quad \nleq\quad \nleqq\quad \lneqq\quad \lvertneqq$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\ge \geq \gneq \geqq \ngeq \ngeqq \gneqq \gvertneqq$</span><br></pre></td></tr></table></figure>
<p> $\ge\quad \geq\quad \gneq\quad \geqq\quad \ngeq\quad \ngeqq\quad \gneqq\quad \gvertneqq$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\lessgtr \lesseqgtr \lesseqqgtr \gtrless \gtreqless \gtreqqless$</span><br></pre></td></tr></table></figure>
<p>$\lessgtr\quad \lesseqgtr\quad \lesseqqgtr\quad \gtrless\quad \gtreqless\quad \gtreqqless$</p>
<p>还有很多，大概率是用不上的，就不写了</p>
<h1 id="集合符号"><a href="#集合符号" class="headerlink" title="集合符号"></a>集合符号</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\parallel \nparallel \shortparallel \nshortparallel$</span><br></pre></td></tr></table></figure>
<p>$\parallel\quad \nparallel\quad \shortparallel\quad \nshortparallel$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\perp \angle \sphericalangle \measuredangle 45^\circ$</span><br></pre></td></tr></table></figure>
<p> $\perp\quad \angle\quad \sphericalangle\quad \measuredangle 45^\circ$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\Box \blacksquare \diamond \Diamond \lozenge \blacklozenge \bigstar$</span><br></pre></td></tr></table></figure>
<p>$\Box\quad \blacksquare\quad \diamond\quad \Diamond\quad\lozenge\quad \blacklozenge\quad \bigstar$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\bigcirc \triangle \bigtriangleup \bigtriangledown$</span><br></pre></td></tr></table></figure>
<p> $\bigcirc\quad \triangle\quad \bigtriangleup\quad \bigtriangledown$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\vartriangle \triangledown \triangleleft \triangleright$</span><br></pre></td></tr></table></figure>
<p> $\vartriangle\quad\triangledown \quad\triangleleft \quad\triangleright$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\blacktriangle \blacktriangledown \blacktriangleleft \blacktriangleright$</span><br></pre></td></tr></table></figure>
<p> $\blacktriangle\quad \blacktriangledown \quad\blacktriangleleft\quad \blacktriangleright$</p>
<h1 id="逻辑符号"><a href="#逻辑符号" class="headerlink" title="逻辑符号"></a>逻辑符号</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\forall \exists \nexists$</span><br></pre></td></tr></table></figure>
<p> $\forall\quad \exists\quad \nexists$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\therefore \because \And$</span><br></pre></td></tr></table></figure>
<p> $\therefore\quad \because\quad \And$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\lor \vee \curlyvee \bigvee$</span><br></pre></td></tr></table></figure>
<p> $\lor\quad \vee\quad \curlyvee\quad \bigvee$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\land \wedge \curlywedge \bigwedge$</span><br></pre></td></tr></table></figure>
<p> $\land\quad \wedge\quad \curlywedge\quad \bigwedge$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\bar&#123;q&#125; \bar&#123;abc&#125; \overline&#123;q&#125; \overline&#123;abc&#125;$</span><br></pre></td></tr></table></figure>
<p>$\bar{q}\quad \bar{abc}\quad \overline{q}\quad \overline{abc}$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\lnot \neg \bot \top$</span><br></pre></td></tr></table></figure>
<p> $\lnot\quad \neg\quad \bot\quad \top$</p>
<h1 id="箭头"><a href="#箭头" class="headerlink" title="箭头"></a>箭头</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\Rrightarrow \Lleftarrow$</span><br></pre></td></tr></table></figure>
<p> $\Rrightarrow\quad \Lleftarrow$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\Rightarrow \nRightarrow \Longrightarrow \implies$</span><br></pre></td></tr></table></figure>
<p> $\Rightarrow\quad \nRightarrow\quad \Longrightarrow\quad \implies$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\Leftarrow \nLeftarrow \Longleftarrow$</span><br></pre></td></tr></table></figure>
<p> $\Leftarrow\quad \nLeftarrow\quad \Longleftarrow$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\Leftrightarrow \nLeftrightarrow \Longleftrightarrow \iff$</span><br></pre></td></tr></table></figure>
<p> $\Leftrightarrow\quad \nLeftrightarrow\quad \Longleftrightarrow\quad \iff$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\Uparrow \Downarrow \Updownarrow$</span><br></pre></td></tr></table></figure>
<p> $\Uparrow \quad\Downarrow\quad \Updownarrow$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\leftarrow \rightarrow \nleftarrow \nrightarrow \leftrightarrow \nleftrightarrow \longleftarrow \longrightarrow \longleftrightarrow$</span><br></pre></td></tr></table></figure>
<p>$\leftarrow\quad \rightarrow\quad \nleftarrow\quad \nrightarrow \quad\leftrightarrow\quad \nleftrightarrow\quad \longleftarrow\quad \longrightarrow \quad\longleftrightarrow$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\uparrow \downarrow \updownarrow \nearrow \searrow \nwarrow \swarrow$</span><br></pre></td></tr></table></figure>
<p> $\uparrow\quad \downarrow\quad \updownarrow\quad \nearrow \quad\searrow \quad\nwarrow \quad\swarrow$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\mapsto \longmapsto$</span><br></pre></td></tr></table></figure>
<p> $\mapsto\quad \longmapsto$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\rightharpoonup \rightharpoondown \leftharpoonup \leftharpoondown \upharpoonleft \upharpoonright \downharpoonleft \downharpoonright \leftrightharpoons \rightleftharpoons$</span><br></pre></td></tr></table></figure>
<p> $\rightharpoonup \quad\rightharpoondown\quad \leftharpoonup \quad\leftharpoondown \quad\upharpoonleft\quad \upharpoonright \quad\downharpoonleft \quad\downharpoonright\quad \leftrightharpoons\quad \rightleftharpoons$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\curvearrowleft \circlearrowleft \Lsh \upuparrows \rightrightarrows \rightleftarrows \rightarrowtail \looparrowright$</span><br></pre></td></tr></table></figure>
<p>$\curvearrowleft\quad \circlearrowleft\quad \Lsh \quad\upuparrows\quad \rightrightarrows\quad \rightleftarrows \quad\rightarrowtail \quad\looparrowright$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\curvearrowright \circlearrowright \Rsh \downdownarrows \leftleftarrows \leftrightarrows \leftarrowtail \looparrowleft$</span><br></pre></td></tr></table></figure>
<p>$\curvearrowright\quad \circlearrowright\quad \Rsh \quad\downdownarrows \quad\leftleftarrows\quad \leftrightarrows \quad\leftarrowtail \quad\looparrowleft$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\hookrightarrow \hookleftarrow \multimap \leftrightsquigarrow \rightsquigarrow \twoheadrightarrow \twoheadleftarrow$</span><br></pre></td></tr></table></figure>
<p>$\hookrightarrow\quad \hookleftarrow \quad\multimap \quad\leftrightsquigarrow\quad \rightsquigarrow\quad \twoheadrightarrow \quad\twoheadleftarrow$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\xleftarrow&#123;left&#125; \xrightarrow&#123;right&#125; \xLeftarrow&#123;Left&#125; \xRightarrow&#123;Right&#125; \xleftrightarrow&#123;left\&amp; right&#125; \xLeftrightarrow&#123;Left\&amp; Right&#125;$</span><br></pre></td></tr></table></figure>
<p>$\xleftarrow{left}\quad \xrightarrow{right}\quad $后面四个貌似有点问题？</p>
<h1 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\amalg \% \dagger \ddagger \ldots \cdots$</span><br></pre></td></tr></table></figure>
<p> $\amalg\quad \% \quad\dagger\quad \ddagger\quad \ldots\quad \cdots$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\smile \frown \wr$</span><br></pre></td></tr></table></figure>
<p> $\smile\quad \frown\quad \wr$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\diamondsuit \heartsuit \clubsuit \spadesuit \Game \flat \natural \sharp$</span><br></pre></td></tr></table></figure>
<p>$\diamondsuit \quad\heartsuit\quad \clubsuit\quad \spadesuit \quad\Game\quad \flat\quad \natural\quad \sharp$</p>
<h1 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h1><p>简单的应用省略</p>
<p><strong>前置上下标</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$&#123;&#125;^2_1\!X^3_4$</span><br></pre></td></tr></table></figure>
<p>${}^2_1!X^3_4$</p>
<h1 id="导数"><a href="#导数" class="headerlink" title="导数"></a>导数</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(PNG)x^\prime$</span><br></pre></td></tr></table></figure>
<p>$x^\prime$</p>
<h2 id="导数点"><a href="#导数点" class="headerlink" title="导数点"></a>导数点</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\dot&#123;x&#125; \ddot&#123;x&#125;$</span><br></pre></td></tr></table></figure>
<p>$\dot{x}\quad\ddot{x}$</p>
<h1 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\vec&#123;x&#125; \overleftarrow&#123;AB&#125; \overrightarrow&#123;AB&#125; \widehat&#123;AB&#125;$</span><br></pre></td></tr></table></figure>
<p> $\vec{x}\quad\overleftarrow{AB}\quad\overrightarrow{AB} \quad\widehat{AB}$</p>
<h1 id="上弧"><a href="#上弧" class="headerlink" title="上弧"></a>上弧</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\overarc&#123;\frown&#125;&#123;AB&#125;$</span><br><span class="line">ps:正确的语法应该是\overarc，但因为没有引入amsmath宏包，所以无法使用，只能用这个替代下。</span><br></pre></td></tr></table></figure>
<p> $\overset{\frown}{AB}$</p>
<h1 id="上划线"><a href="#上划线" class="headerlink" title="上划线"></a>上划线</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\overline&#123;ABC&#125;$</span><br></pre></td></tr></table></figure>
<p> $\overline{ABC}$</p>
<h1 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\underline&#123;ABC&#125;$</span><br></pre></td></tr></table></figure>
<p>$\underline{ABC}$</p>
<h1 id="上括号"><a href="#上括号" class="headerlink" title="上括号"></a>上括号</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\overbrace&#123;1+2+\cdots+100&#125;$  </span><br><span class="line"></span><br><span class="line">$\begin&#123;matrix&#125;</span><br><span class="line">5050\\</span><br><span class="line">\overbrace&#123;1+2+\cdots+100&#125;</span><br><span class="line">\end&#123;matrix&#125;$</span><br></pre></td></tr></table></figure>
<p> $\overbrace{1+2+\cdots+100}$ </p>
<script type="math/tex; mode=display">
\begin{matrix}5050 \\ \overbrace{1+2+\cdots+100}\end{matrix}</script><h1 id="下括号"><a href="#下括号" class="headerlink" title="下括号"></a>下括号</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\underbrace&#123;1+2+\cdots+100&#125;$  </span><br><span class="line"></span><br><span class="line">$\begin&#123;matrix&#125;</span><br><span class="line">\underbrace&#123;1+2+\cdots+100&#125;\\</span><br><span class="line">5050</span><br><span class="line">\end&#123;matrix&#125;$</span><br></pre></td></tr></table></figure>
<p>$\underbrace{1+2+\cdots+100}$ </p>
<script type="math/tex; mode=display">
\begin{matrix} \underbrace{1+2+\cdots+100} \\ 5050\end{matrix}</script><h1 id="极限"><a href="#极限" class="headerlink" title="极限"></a>极限</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\lim_&#123;n\to\infty&#125;x_n \lim\limits_&#123;n\to\infty&#125;x_n$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
\lim_{n\to\infty}x_n\quad \lim\limits_{n\to\infty}x_n</script><h1 id="积分"><a href="#积分" class="headerlink" title="积分"></a>积分</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\int_&#123;-N&#125;^&#123;N&#125;e^x\,dx$</span><br></pre></td></tr></table></figure>
<p> $\int_{-N}^{N}e^x\,dx$</p>
<h1 id="双重积分"><a href="#双重积分" class="headerlink" title="双重积分"></a>双重积分</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\iint_M^Ndx\,dy$</span><br></pre></td></tr></table></figure>
<p> $\iint_M^Ndx\,dy$</p>
<h1 id="三重积分"><a href="#三重积分" class="headerlink" title="三重积分"></a>三重积分</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\iiint_M^Ndx\,dy\,dz$</span><br></pre></td></tr></table></figure>
<p>$\iiint_M^Ndx\,dy\,dz$</p>
<h1 id="交集"><a href="#交集" class="headerlink" title="交集"></a>交集</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\bigcap_1^np \bigcap\limits_1^np$</span><br></pre></td></tr></table></figure>
<p> $\bigcap_1^np\quad \bigcap\limits_1^np$</p>
<h1 id="并集"><a href="#并集" class="headerlink" title="并集"></a>并集</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\bigcup_1^np \bigcup\limits_1^np$</span><br></pre></td></tr></table></figure>
<p> $\bigcup_1^np\quad \bigcup\limits_1^np$</p>
<h1 id="分数矩阵"><a href="#分数矩阵" class="headerlink" title="分数矩阵"></a>分数矩阵</h1><h2 id="分数"><a href="#分数" class="headerlink" title="分数"></a>分数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\frac&#123;1&#125;&#123;2&#125;&#x3D;0.5$</span><br></pre></td></tr></table></figure>
<p> $\frac{1}{2}=0.5$</p>
<h2 id="小型分数"><a href="#小型分数" class="headerlink" title="小型分数"></a>小型分数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\tfrac&#123;1&#125;&#123;2&#125;&#x3D;0.5$</span><br></pre></td></tr></table></figure>
<p>$\tfrac{1}{2}=0.5$</p>
<h2 id="大型分数"><a href="#大型分数" class="headerlink" title="大型分数"></a>大型分数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\dfrac&#123;1&#125;&#123;2&#125;&#x3D;0.5 \dfrac&#123;1&#125;&#123;x+\dfrac&#123;3&#125;&#123;y+\dfrac&#123;1&#125;&#123;5&#125;&#125;&#125;$</span><br></pre></td></tr></table></figure>
<p> $\dfrac{1}{2}=0.5\quad \dfrac{1}{x+\dfrac{3}{y+\dfrac{1}{5}}}$</p>
<h2 id="二项式系数"><a href="#二项式系数" class="headerlink" title="二项式系数"></a>二项式系数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\dbinom&#123;n&#125;&#123;m&#125;&#x3D;\dbinom&#123;n&#125;&#123;n-m&#125;&#x3D;C_n^m&#x3D;C_n^&#123;n-m&#125;$</span><br></pre></td></tr></table></figure>
<p>$\dbinom{n}{m}=\dbinom{n}{n-m}=C_n^m=C_n^{n-m}$</p>
<h2 id="小型二项式系数"><a href="#小型二项式系数" class="headerlink" title="小型二项式系数"></a>小型二项式系数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\tbinom&#123;n&#125;&#123;m&#125;&#x3D;\tbinom&#123;n&#125;&#123;n-m&#125;&#x3D;C_n^m&#x3D;C_n^&#123;n-m&#125;$</span><br></pre></td></tr></table></figure>
<p>$\tbinom{n}{m}=\tbinom{n}{n-m}=C_n^m=C_n^{n-m}$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\binom&#123;n&#125;&#123;m&#125;&#x3D;\binom&#123;n&#125;&#123;n-m&#125;&#x3D;C_n^m&#x3D;C_n^&#123;n-m&#125;$</span><br></pre></td></tr></table></figure>
<p> $\binom{n}{m}=\binom{n}{n-m}=C_n^m=C_n^{n-m}$</p>
<h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\begin&#123;matrix&#125;a&amp;b\\ c&amp;d\end&#123;matrix&#125;$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
\begin{matrix}a&b\\ c&d\end{matrix}</script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\begin&#123;vmatrix&#125;a&amp;b\\ c&amp;d\end&#123;vmatrix&#125;$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
\begin{vmatrix}a&b\\ c&d\end{vmatrix}</script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\begin&#123;Vmatrix&#125;a&amp;b\\ c&amp;d\end&#123;Vmatrix&#125;$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
\begin{Vmatrix}a&b\\ c&d\end{Vmatrix}</script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\begin&#123;bmatrix&#125;a&amp;\cdots&amp;b\\\vdots&amp;\ddots&amp;\vdots\\ c&amp;\cdots&amp;d\end&#123;bmatrix&#125;$</span><br><span class="line">ps:\vdots是竖着3个点，\ddots是斜着3个点。</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
\begin{bmatrix}a&\cdots&b\\\vdots&\ddots&\vdots\\ c&\cdots&d\end{bmatrix}</script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\begin&#123;Bmatrix&#125;a&amp;c\\ b&amp;d\end&#123;Bmatrix&#125;$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
\begin{Bmatrix}a&c\\ b&d\end{Bmatrix}</script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\begin&#123;pmatrix&#125;a&amp;c\\ b&amp;d\end&#123;pmatrix&#125;$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
 \begin{pmatrix}a&c\\ b&d\end{pmatrix}</script><h2 id="矩阵嵌套"><a href="#矩阵嵌套" class="headerlink" title="矩阵嵌套"></a>矩阵嵌套</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\begin&#123;vmatrix&#125; \begin&#123;Bmatrix&#125;A &amp; \\ c &amp; d \end&#123;Bmatrix&#125; &amp; x\\ \dfrac&#123;1&#125;&#123;2&#125; &amp; \begin&#123;matrix&#125; 1 &amp; 2 \\ 3 &amp; 4 \end&#123;matrix&#125; \end&#123;vmatrix&#125;$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
\begin{vmatrix} \begin{Bmatrix}A & \\ c & d \end{Bmatrix} & x\\ \dfrac{1}{2} & \begin{matrix} 1 & 2 \\ 3 & 4 \end{matrix} \end{vmatrix}</script><h2 id="条件定义-如分段函数"><a href="#条件定义-如分段函数" class="headerlink" title="条件定义(如分段函数)"></a>条件定义(如分段函数)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$f(x)&#x3D;\begin&#123;cases&#125;x-1&amp;x\leqslant3\\ x^2+3x-1&amp;x&gt;3\end&#123;cases&#125;$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
f(x)=\begin{cases}x-1&x\leqslant3\\ x^2+3x-1&x>3\end{cases}</script><h2 id="方程组"><a href="#方程组" class="headerlink" title="方程组"></a>方程组</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\begin&#123;cases&#125;2x+9y-5z&#x3D;10\\ 4x+20y+z&#x3D;24\\ x-\dfrac&#123;1&#125;&#123;2&#125;y+3z&#x3D;8\end&#123;cases&#125;$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
\begin{cases}2x+9y-5z=10\\ 4x+20y+z=24\\ x-\dfrac{1}{2}y+3z=8\end{cases}</script><h2 id="多行等式"><a href="#多行等式" class="headerlink" title="多行等式"></a>多行等式</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\begin&#123;aligned&#125;f(x) &amp; &#x3D; (x + 1)^2 \\ &amp; &#x3D; x^2 + 2x + 1\end&#123;aligned&#125;$</span><br><span class="line"></span><br><span class="line">$\begin&#123;aligned&#125;a_1 &amp; &#x3D; 1 \\ a_2 &amp; &#x3D; 2 \\ &amp; \dots \\ a_n &amp; &#x3D; n\end&#123;aligned&#125;$ </span><br><span class="line"></span><br><span class="line">ps:原语法为align，现在是aligned。感觉align没啥不好的</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
\begin{aligned}f(x) & = (x + 1)^2 \\ & = x^2 + 2x + 1\end{aligned}</script><script type="math/tex; mode=display">
\begin{aligned}a_1 & = 1 \\ a_2 & = 2 \\ & \dots \\ a_n & = n\end{aligned}</script><h2 id="数组-表格"><a href="#数组-表格" class="headerlink" title="数组/表格"></a>数组/表格</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\begin&#123;array&#125;&#123;|c|c||c|&#125;x&amp;y&amp;z\\8&amp;2&amp;4\\2&amp;3&amp;9\\10&amp;\dfrac&#123;3&#125;&#123;4&#125;&amp;\sqrt&#123;3&#125;\\a&amp;b&amp;c\end&#123;array&#125;$</span><br><span class="line"> ps:\begin&#123;array&#125;&#123;&#125;←这个大括号里是形如&#39;|c|c||c|&#39;这样的格式，&#39;|&#39;是两列的分割线，&#39;c&#39;是表示这里有一列，而内容中使用&#39;&amp;&#39;来分开每一列的内容。这里可能讲的不是很清楚，所以最好还是自己尝试一下。</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
\begin{array}{|c|c||c|}x&y&z\\ 8&2&4\\ 2&3&9\\ 10&\dfrac{3}{4}&\sqrt{3}\\ a&b&c\end{array}</script><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\Alpha \Beta \Gamma\Delta \Epsilon \Zeta \Eta \Theta$</span><br></pre></td></tr></table></figure>
<p> $\Alpha \Beta \Gamma\Delta \Epsilon \Zeta \Eta \Theta$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\Iota \Kappa \Lambda \Mu \Nu \Xi \Omicron \Pi$</span><br></pre></td></tr></table></figure>
<p> $\Iota \Kappa \Lambda \Mu \Nu \Xi \Omicron \Pi$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\Rho \Sigma \Tau \Upsilon \Phi \Chi \Psi \Omega$</span><br></pre></td></tr></table></figure>
<p>$\Rho\Sigma \Tau \Upsilon \Phi \Chi \Psi \Omega$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\alpha\beta\gamma\delta\epsilon\zeta\eta\theta$</span><br></pre></td></tr></table></figure>
<p> $\alpha\beta\gamma\delta\epsilon\zeta\eta\theta$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\iota\kappa\lambda\mu\nu\xi\omicron\pi$</span><br></pre></td></tr></table></figure>
<p> $\iota\kappa\lambda\mu\nu\xi\omicron\pi$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\rho\sigma\tau\upsilon\phi\chi\psi\omega$</span><br></pre></td></tr></table></figure>
<p> $\rho\sigma\tau\upsilon\phi\chi\psi\omega$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\varepsilon\digamma\varkappa\varpi$</span><br></pre></td></tr></table></figure>
<p> $\varepsilon\digamma\varkappa\varpi$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\varrho\varsigma\vartheta\varphi$</span><br></pre></td></tr></table></figure>
<p> $\varrho\varsigma\vartheta\varphi$</p>
<p>下次继续</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>其他板子</tag>
      </tags>
  </entry>
  <entry>
    <title>从1开始的数论</title>
    <url>/2020/07/28/%E4%BB%8E1%E5%BC%80%E5%A7%8B%E7%9A%84%E6%95%B0%E8%AE%BA/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="0be9ce11997588e35da6337fbb0aba69b7fcca2fca304e855f6ea0c38b585403"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>学习笔记</tag>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>位运算好题</title>
    <url>/2020/09/28/%E4%BD%8D%E8%BF%90%E7%AE%97%E5%A5%BD%E9%A2%98/</url>
    <content><![CDATA[<p>位运算是一个十分有助的工具</p>
<p>还是要好好学的</p>
<h1 id="P6034-Ryoku-与最初之人笔记"><a href="#P6034-Ryoku-与最初之人笔记" class="headerlink" title="P6034 Ryoku 与最初之人笔记"></a><a href="https://www.luogu.com.cn/problem/P6034" target="_blank" rel="noopener">P6034 Ryoku 与最初之人笔记</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>求：</p>
<script type="math/tex; mode=display">
\sum_{a=0}^n\sum_{b=a+1}^n[a\equiv b\pmod{a\otimes b}]</script><p><del>当然，最开始的开始，是通过暴力运算直接拿的$20pt$的好成绩</del></p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>遇到位运算，换元是不错的处理方法</p>
<p>令：$y=a \text{&amp;} b,\;a=x+y,\;b=y+z$，那么有：$a|b=x+y+z,a\text^b=x+z$</p>
<p>那么通过这个换元，可以得到一些好东西：</p>
<script type="math/tex; mode=display">
(a\otimes b)|(b-a)=(x+z)|(z-x)</script><p>那么就发现了，当且仅当$x=0$时，这个才能成立</p>
<p>所以说原式可以写为：</p>
<script type="math/tex; mode=display">
\sum_{a=0}^n\sum_{b=a+1}^n[a\equiv b\pmod{a\otimes b}]=\sum_{a=1}^n\sum_{b=a+1}^n[a\text{&}b==a]</script><p>那么定义</p>
<script type="math/tex; mode=display">
f(x)=\sum_{i=1}^{x-1}[i\text{&}x==i]</script><p>显然这个可以写成是：</p>
<script type="math/tex; mode=display">
f(x)=2^{cnt_x}-1</script><p>其中$cnt_x$表示$x$再二进制下$1$的个数</p>
<p>所以原式交换求和顺序后可以变成下面的样子：</p>
<script type="math/tex; mode=display">
ans=\sum_{i=1}^n2^{f(i)}-n\\
令：s(n)=\sum_{i=1}^ns^{f(i)}</script><p>然后，还有这样一个性质：</p>
<script type="math/tex; mode=display">
f(i<<1)=f(i)\\
f(i<<1|1)=f(i)+1</script><p>所以求和的时候，可以分奇偶求：</p>
<script type="math/tex; mode=display">
\begin{align*}
s(2n)&=\sum_{i=1}^{2n}s^{f(i)}\\
&=\sum_{i=1}^n2^{f(2i-1)}+\sum_{i=1}^n2^{f(2i)}\\
&=\sum_{i=1}^n2^{f(i-1)+1}+\sum_{i=1}^n2^{f(i)}\\
&=2(1+\sum_{i=1}^{n-1}2^{f(i)})+\sum_{i=1}^{n-1}2^{f(i)}+2^{f(n)}\\
&=3\sum_{i=1}^{n-1}2^{f(i)}+2^{f(n)}+2\\
&=3s(n-1)+2^{f(n)}+2
\end{align*}</script><p>然后乱搞就完了</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; -x)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read()</span><br><span class="line">&#123;</span><br><span class="line">    ll x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) &#123;</span><br><span class="line">        x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Pow</span><span class="params">(ll x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (y) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y &amp; <span class="number">1</span>) ans = ans * x % mod;</span><br><span class="line">        x = x * x % mod;</span><br><span class="line">        y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">count</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">cnt</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        x -= lowbit(x);</span><br><span class="line">        ++cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Pow(<span class="number">2</span>, cnt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Sum</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (x &amp; <span class="number">1</span>) <span class="keyword">return</span> (Sum(x ^ <span class="number">1</span>) + count(x)) % mod;</span><br><span class="line">    ll temp = Sum((x &gt;&gt; <span class="number">1</span>) - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> (temp * <span class="number">3</span> + count(x &gt;&gt; <span class="number">1</span>) + <span class="number">2</span>) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n = __read();</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, ((Sum(n) - n) % mod + mod) % mod);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title>动态DP</title>
    <url>/2020/09/18/%E5%8A%A8%E6%80%81DP/</url>
    <content><![CDATA[<h1 id="DDp"><a href="#DDp" class="headerlink" title="DDp"></a><a href="https://www.luogu.com.cn/problem/P4719" target="_blank" rel="noopener">DDp</a></h1><h2 id="大意"><a href="#大意" class="headerlink" title="大意"></a>大意</h2><p>大概就是说, 有一棵树, 点权是会发生改变的, 让你动态求最大权独立集</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>考虑到我们每次修改一个点, 能够受到影响的点就只有链上的点, 可以直接暴力更新</p>
<p>貌似这道题数据随机, 没有出到链的情况, 所以暴力更新是可以随便过的</p>
<p>先来一份暴力的</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, p[maxn], f[maxn];</span><br><span class="line"><span class="keyword">int</span> dp[maxn][<span class="number">2</span>], cur;</span><br><span class="line"><span class="keyword">int</span> head[maxn], edge[maxn &lt;&lt; <span class="number">1</span>], __next[maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    __next[++cur] = head[u];</span><br><span class="line">    head[u] = cur;</span><br><span class="line">    edge[cur] = v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dp[u][<span class="number">1</span>] = p[u], dp[u][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    f[u] = fa;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(head[u]); i; i = __next[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (edge[i] == fa) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(edge[i], u);</span><br><span class="line">        dp[u][<span class="number">0</span>] += max(dp[edge[i]][<span class="number">0</span>], dp[edge[i]][<span class="number">1</span>]);</span><br><span class="line">        dp[u][<span class="number">1</span>] += dp[edge[i]][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), m = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) p[i] = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> a = __read(), b = __read();</span><br><span class="line">        AddEdge(a, b), AddEdge(b, a);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = __read(), val = __read();</span><br><span class="line">        <span class="keyword">int</span> update = val - p[x];</span><br><span class="line">        p[x] += update;</span><br><span class="line">        <span class="keyword">int</span> lst = x;</span><br><span class="line">        <span class="keyword">int</span> l0 = dp[x][<span class="number">0</span>], l1 = dp[x][<span class="number">1</span>];</span><br><span class="line">        dp[x][<span class="number">1</span>] += update;</span><br><span class="line">        x = f[x];</span><br><span class="line">        <span class="keyword">while</span> (x) &#123;</span><br><span class="line">            <span class="keyword">int</span> t0 = dp[x][<span class="number">0</span>], t1 = dp[x][<span class="number">1</span>];</span><br><span class="line">            dp[x][<span class="number">0</span>] -= max(l0, l1);</span><br><span class="line">            dp[x][<span class="number">0</span>] += max(dp[lst][<span class="number">0</span>], dp[lst][<span class="number">1</span>]);</span><br><span class="line">            dp[x][<span class="number">1</span>] += dp[lst][<span class="number">0</span>] - l0;</span><br><span class="line">            l0 = t0, l1 = t1;</span><br><span class="line">            lst = x;</span><br><span class="line">            x = f[x];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans = max(dp[<span class="number">1</span>][<span class="number">1</span>], dp[<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;<span class="comment">//真挺暴力的</span></span><br></pre></td></tr></table></figure>
<p>那么显然不能就这样说过去了的, 至少还是要<del>看看别人这是怎么写的吧</del></p>
<h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p>动态$dp$的套路是把$dp$方程写成矩阵乘法, 然后用什么$LCT$, 树剖, 线段树, 倍增啥啥啥的维护一下</p>
<p>这道题的矩阵乘法大概是这个样子:</p>
<script type="math/tex; mode=display">
C_{i,j}=\max_{k=1}^n(A_{i,k}+B_{k,j})</script><p>易证可以满足结合律, 可以像矩阵乘法一样乱写</p>
<p>然后就是构造矩阵, 找转移方程</p>
<p>老套路: $f(i,0)$表示这个点不作为独立集中的点, $f(i,1)$表示作为独立及中的点</p>
<p>那么显然有:</p>
<script type="math/tex; mode=display">
\begin{align*}
f_{u,0}&=\sum _{v\in son_u}max(f_{v,0}, f_{v,1})\\
f_{u,1}&=val_u+\sum_{v\in sonu} f_{v,0}
\end{align*}</script><p>啊，全局平衡二叉树还没会，先搁着</p>
<p>看看这？<a href="https://www.mina.moe/archives/11789" target="_blank" rel="noopener">优质题解</a></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>数据结构</tag>
        <tag>Dp优化</tag>
        <tag>矩阵</tag>
      </tags>
  </entry>
  <entry>
    <title>基础多项式</title>
    <url>/2020/07/29/%E5%9F%BA%E7%A1%80%E5%A4%9A%E9%A1%B9%E5%BC%8F/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="4764158a4980057975c90ea63c39028d4319c45170fc5a9dbc87ac8b04367db8"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>学习笔记</tag>
        <tag>多项式</tag>
      </tags>
  </entry>
  <entry>
    <title>复数入门</title>
    <url>/2020/07/19/%E5%A4%8D%E6%95%B0%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="一-复数"><a href="#一-复数" class="headerlink" title="(一) 复数"></a>(一) 复数</h1><h2 id="一-定义"><a href="#一-定义" class="headerlink" title="一.定义"></a>一.定义</h2><p>若$i$符合方程$X^2+1=0$, 则$i$被称为虚数单位</p>
<p>复数$z=a+bi \left(a,b\in \mathbb{R}\right)$</p>
<p>$a$为实部, $b$为虚部, 记$:a=Re(z),b=Im(z)$</p>
<h2 id="二-分类"><a href="#二-分类" class="headerlink" title="二.分类"></a>二.分类</h2><p>当$b=0$时, 复数$z$为实数</p>
<p>当$b\ne0$时, 复数$z$为虚数</p>
<p>当$b\ne0$且$a=0$时, 复数$z$为纯虚数</p>
<script type="math/tex; mode=display">
\mathbb{R}实数集\qquad\mathbb{P}虚数集\qquad\mathbb{C}复数集\qquad\mathbb{Q}纯虚数集
\\
\mathbb{R}\cap\mathbb{P}=\varnothing \qquad\mathbb{R}\cup\mathbb{P}=\varnothing\qquad \mathbb{Q}\subsetneqq\mathbb{P}\subsetneqq\mathbb{C}</script><h2 id="三-法则"><a href="#三-法则" class="headerlink" title="三.法则"></a>三.法则</h2><p>若有复数$z_1=a+bi\;,z_2=c+di\left(a,b,c,d\in\mathbb{R}\right)$</p>
<p>加法$:z_1+z_2=(a+c)+(b+d)i$</p>
<p>减法$:z_1-z_2=(a-c)+(b-d)i$</p>
<p>乘法$:z_1\cdot z_2 = (ac-bd)+(bc+ad)i$</p>
<p>除法$:\frac{z_1}{z_2}=\frac{a+bi}{c+di}=\frac{(a+bi)(c-di)}{(c+di)(c-di)}=\frac{ac+bd}{c^2+d^2}+\frac{(bc-ad)i}{c^2+d^2}$</p>
<h2 id="四-定律"><a href="#四-定律" class="headerlink" title="四.定律"></a>四.定律</h2><p>复数运算满足加法交换律,加法结合律,乘法交换律,乘法结合律,乘法分配律</p>
<h2 id="五-共轭"><a href="#五-共轭" class="headerlink" title="五.共轭"></a>五.共轭</h2><p>当两个复数的实部相等, 虚部互为相反数时, 称这两个复数为共轭复数</p>
<p><strong>特别的</strong>, 若虚部不为零时, 也称作互为共轭虚数</p>
<p>对于复数$z=a+bi(a,b\in\mathbb{R})$, 共轭复数用$\overline{z}=a-bi(a,b\in\mathbb{R})$表示</p>
<h3 id="性质"><a href="#性质" class="headerlink" title="性质:"></a>性质:</h3><script type="math/tex; mode=display">
\begin{align*}
&(1)\overline{z_1\pm z_2}=\overline{z_1}\pm\overline{z_2}\\
&(2)\overline{z_1z_2}=\overline{z_1}\overline{z_2}\\
&(3)\overline{\frac{z_1}{z_2}}=\frac{\overline{z_1}}{\overline{z_2}}\\
&(4)\overline{z^n}=\overline{z}^n\\
&(5)z+\overline{z}=2Re(z),\;z-\overline{z}=2iIm(z)\\
&(6)\overline{\overline{z}} = z\\
&(7)z=\overline{z}\Leftrightarrow z\in\mathbb{R}\quad -z=\overline{z}且z\ne0\Leftrightarrow z\in\mathbb{Q}
\end{align*}</script><h2 id="六-几何"><a href="#六-几何" class="headerlink" title="六.几何"></a>六.几何</h2><p>$z=a+bi(a,b\in\mathbb{R})$与复平面上的点$Z(a,b)$是一一对应的。点$Z(a,b)$与向量$\vec{OZ}$也成一一对应关系，点 $Z$与$\vec{OZ}$均为复数$z=a+bi(a,b\in\mathbb{R})$的几何形式</p>
<p>向量$\vec{OZ}$的模称为复数$Z$的模$\left\vert z \right\vert$，即</p>
<script type="math/tex; mode=display">
r=\left\vert z\right\vert=\sqrt{a^2+b^2}</script><h3 id="性质："><a href="#性质：" class="headerlink" title="性质："></a>性质：</h3><script type="math/tex; mode=display">
\begin{align*}
&(1)z\overline{z}=\left\vert z\right\vert^2=\left\vert \overline{z}\right\vert^2\\
&(2)\left\vert\left\vert z_1\right\vert-\left\vert z_2\right\vert\right\vert\leqslant\left\vert z_1\pm z_2\right\vert\leqslant\left\vert z_1\right\vert+\left\vert z_2\right\vert\\
&(3)\left\vert z\right\vert\geqslant\max(\left\vert Re(z)\right\vert,\left\vert Im(z)\right\vert)
\end{align*}</script><h1 id="二-复数的模与辐角"><a href="#二-复数的模与辐角" class="headerlink" title="(二) 复数的模与辐角"></a>(二) 复数的模与辐角</h1><p>设复数$z=a+bi(a,b\in\mathbb{R})$ 所对应的向量为$\vec{OZ}$，我们称始边是$x$轴正半轴，终边是$\vec{OZ}$的角称为复数$z$的辐角，记作：$Arg\;z$</p>
<p>在 $[0,2\pi)$的辐角叫做复数$z$的辐角主值，记作：$\arg{z}$</p>
<p>且有：</p>
<script type="math/tex; mode=display">
Arg\;z=\arg{z}+2k\pi(k\in\mathbb{Z})</script><p>当$z\in\mathbb{R}^*$时，有：</p>
<script type="math/tex; mode=display">
\arg{a}=0,\arg(-a)=\pi\\
\arg(ai)=\frac{\pi}{2},\arg(-ai)=\frac{3\pi}{2}\\
注意：\text{0的辐角时任意的}</script><p>结论：</p>
<script type="math/tex; mode=display">
\begin{align*}
&(1)Arg\;(z_1z_2)=Arg(z_1)+Arg(z_2)\\
&(2)Arh(\frac{z_1}{z_2})=Arg(z_1)-Arg(z_2)\\
&(3)Arg(z^n)=nArg(z)
\end{align*}</script><p>若复数$z=a+bi(a,b\in\mathbb{R}且ab\ne0)$，则有：</p>
<script type="math/tex; mode=display">
\arg{z}=\begin{cases}
            \arctan(\frac{b}{a}) \text{，点$(a,b)$在第一象限}\\
            \pi+\arctan(\frac{b}{a}) \text{，点$(a,b)$在第二、三象限}\\
            2\pi+\arctan(\frac{b}{a}) \text{，点$(a,b)$在第四象限}\\
            \end{cases}</script><p>设复数$z=a+bi(a,b\in\mathbb{R})$的模等于$r$，辐角为$\theta$</p>
<p>那么称$z=r(\cos{\theta}+i\sin{\theta})$为复数$z=a+bi(a,b\in\mathbb{R})$的三角式</p>
<h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><h3 id="一-平方与开方"><a href="#一-平方与开方" class="headerlink" title="一.平方与开方"></a>一.平方与开方</h3><p>若$z_1=r_1(\cos{\theta_1}+i\sin{\theta_1}),z_2=r_2(\cos{\theta_2}+i\sin{\theta_2})$，则：</p>
<script type="math/tex; mode=display">
\begin{align*}
z_1\cdot z_2&=r_1(\cos{\theta_1}+i\sin{\theta_1})\cdot r_2(\cos{\theta_2}+i\sin{\theta_2})\\
&=r_1r_2[\cos(\theta_1+\theta_2)+isin(\theta_1+\theta_2)]
\end{align*}\\
即: 积的模为模的积，积的辐角为辐角的和</script><p>复数的$n$次幂的模等于这个复数模的$n$次幂，它的辐角等于这个复数的辐角的$n$倍(***定理)，即：</p>
<script type="math/tex; mode=display">
z^n=r^n(\cos(n\theta)+i\sin(n\theta))</script><h3 id="二-除法"><a href="#二-除法" class="headerlink" title="二.除法"></a>二.除法</h3><p>若$z_1=r_1(\cos{\theta_1}+i\sin{\theta_1}),z_2=r_2(\cos{\theta_2}+i\sin{\theta_2})$，则：</p>
<script type="math/tex; mode=display">
\begin{align*}
\frac{z_1}{z_2}&=\frac{r_1(\cos{\theta_1}+i\sin{\theta_1})}{r_2(\cos{\theta_2}+i\sin{\theta_2})}\\
&=\frac{r_1}{r_2}[\cos(\theta_1-\theta_2)+i\sin(\theta_1-\theta_2)]
\end{align*}\\
即: 商的模为模的商，商的辐角为辐角的被除数减去除数的辐角</script><h3 id="三-开方"><a href="#三-开方" class="headerlink" title="三.开方"></a>三.开方</h3><p>复数$z=r(\cos\theta+i\sin\theta)$的$n(n\in\mathbb{N}^*)$次方根为：</p>
<script type="math/tex; mode=display">
\sqrt[n]z=\sqrt[n]r(\cos(\frac{\theta+2k\pi}{n})+i\sin(\frac{\theta+2k\pi}{n}))(k\in[0,n-1]\&k\in\mathbb{N})</script><p>复数的$n$次方根为$n$个复数，模均为这个复数的模的$n$次算数平方根，辐角分等于这个数的辐角与$2\pi$的$0,1,2\cdots n-1$倍的和的$n$分之一</p>
<h3 id="四-三角函数"><a href="#四-三角函数" class="headerlink" title="四.三角函数"></a>四.三角函数</h3><p>复数$z=\cos\theta+i\sin\theta=e^{i\theta}$，则：</p>
<script type="math/tex; mode=display">
\cos(n\theta)=Re(z^n)=\frac{z^{2n}+1}{2z^n}\\
\sin(n\theta)=Im(z^n)=\frac{z^{2n}-1}{2z^ni}\\
\tan(n\theta)=\frac{Im(z^n)}{Re(z^n)}=\frac{z^{2n}-1}{(z^{2n}+1)i}</script><h1 id="三-复数与方程"><a href="#三-复数与方程" class="headerlink" title="(三) 复数与方程"></a>(三) 复数与方程</h1><h2 id="一-实际方程-ax-2-bx-c-0-a-ne0-在复数集-mathbb-C-中有两个根"><a href="#一-实际方程-ax-2-bx-c-0-a-ne0-在复数集-mathbb-C-中有两个根" class="headerlink" title="一.实际方程$ax^2+bx+c=0(a\ne0)$在复数集$\mathbb{C}$中有两个根"></a>一.实际方程$ax^2+bx+c=0(a\ne0)$在复数集$\mathbb{C}$中有两个根</h2><script type="math/tex; mode=display">
x=\frac{-b\pm i\sqrt{-\Delta}}{2a}(\Delta<0)</script><h2 id="二-复平面上的曲线方程"><a href="#二-复平面上的曲线方程" class="headerlink" title="二.复平面上的曲线方程"></a>二.复平面上的曲线方程</h2><p>若复数$z$对应着复平面上的一个点$Z(x,y)$，就可以得出一些常用曲线的复数形式的方程：</p>
<script type="math/tex; mode=display">
\begin{align*}
&(1)方程\left\vert z-z_0\right\vert=r，表示以z_0为圆心，r为半径的圆\\
&(2)方程\left\vert z-z_1\right\vert=\left\vert z-z_2\right\vert，表示线段z_1z_2的垂直平分线\\
&(3)方程\left\vert z-z_1\right\vert+\left\vert z-z_2\right\vert=2a(a>0,2a>\left\vert Z_1Z_2\right\vert)，表示以Z_1Z_2为焦点，a为长半轴的椭圆\\
&\qquad若2a=\left\vert Z_1Z_2\right\vert，则此方程表示以Z_1Z_2为断点的线段\\
&(4)方程\left\vert \left\vert z-z_1\right\vert-\left\vert z-z_2\right\vert\right\vert=2a(0<2a<\left\vert Z_1Z_2\right\vert)表示以Z_1Z_2为焦点，实轴长为2a的椭圆
\end{align*}</script><h1 id="四-单位根"><a href="#四-单位根" class="headerlink" title="(四)单位根"></a>(四)单位根</h1><p>对于方程$x^n-1=0(n\in\mathbb{N}^*,n\geqslant2)$</p>
<p>由复数开方法则，就可以得到它的$n$个根</p>
<script type="math/tex; mode=display">
\epsilon_k=\cos\frac{2k\pi}{n}+i\sin\frac{2k\pi}{n}\qquad(k\in[0, n-1])</script><p>他们显然是1的$n$次方根，称为$n$次单位根</p>
<p>利用复数乘方公式，有：</p>
<script type="math/tex; mode=display">
\epsilon_k=(\cos\frac{2\pi}{n}+\sin\frac{2\pi}{n})^k=\epsilon_1^k</script><p>这说明，$n$个$n$次单位根可以表示为：</p>
<script type="math/tex; mode=display">
1,\epsilon_1,\epsilon_1^2,\epsilon_1^3,\cdots\epsilon_1^{n-1}</script><p>关于$n$次单为根，性质如下：</p>
<script type="math/tex; mode=display">
\begin{align*}
&(1)\left\vert\epsilon_k\right\vert=1\quad (k\in\mathbb{N})\\
&(2)\epsilon_j\epsilon_k=\epsilon_{j+k}\quad (j,k\in\mathbb{N})\\
&(3)\sum\limits_{i=0}^{n-1}\epsilon_1^i=0\quad (n\geqslant2)\\
&设m为整数，则：\\
&\sum\limits_{i=0}^{n-1}\epsilon_i^m=\begin{cases}n，当m时n的倍数\\
0，当m不是n的倍数\end{cases}
\end{align*}</script><h1 id="五-复数与向量的应用"><a href="#五-复数与向量的应用" class="headerlink" title="(五) 复数与向量的应用"></a>(五) 复数与向量的应用</h1><h2 id="一-设复平面上两点-Z-1Z-2-对应的复数分别是-z-1-z-2-，那么两点的距离满足："><a href="#一-设复平面上两点-Z-1Z-2-对应的复数分别是-z-1-z-2-，那么两点的距离满足：" class="headerlink" title="一.设复平面上两点$Z_1Z_2$对应的复数分别是$z_1,z_2$，那么两点的距离满足："></a>一.设复平面上两点$Z_1Z_2$对应的复数分别是$z_1,z_2$，那么两点的距离满足：</h2><script type="math/tex; mode=display">
\begin{align*}
\left\vert Z_1Z_2\right\vert^2&=\left\vert z_1-z_2\right\vert^2\\
&=(z_1-z_2)(\overline{z_1}-\overline{z_2})\\
&=\left\vert z_1\right\vert^2+|z_2|^2-(z_1\overline{z_1}+z_2\overline{z_2})
\end{align*}</script><h2 id="二-设复平面上两点-Z-1-Z-2-应的复数分别是-z-1-z-2-，那么线段-Z-1Z-2-定比分点-Z-对应的复数可以表示为"><a href="#二-设复平面上两点-Z-1-Z-2-应的复数分别是-z-1-z-2-，那么线段-Z-1Z-2-定比分点-Z-对应的复数可以表示为" class="headerlink" title="二.设复平面上两点$Z_1,Z_2$应的复数分别是$z_1,z_2$，那么线段$Z_1Z_2$定比分点$Z$对应的复数可以表示为"></a>二.设复平面上两点$Z_1,Z_2$应的复数分别是$z_1,z_2$，那么线段$Z_1Z_2$定比分点$Z$对应的复数可以表示为</h2><script type="math/tex; mode=display">
z=\frac{z_1+\lambda z_2}{1+\lambda}</script><h2 id="三-设复平面上三个点-Z-1-Z-2-Z-3-应的复数分别是-z-1-z-2-z-3-，这三点共线的充要条件是存在不全为零的实数-lambda-1-lambda-2-lambda-3-使如下两式同时成立"><a href="#三-设复平面上三个点-Z-1-Z-2-Z-3-应的复数分别是-z-1-z-2-z-3-，这三点共线的充要条件是存在不全为零的实数-lambda-1-lambda-2-lambda-3-使如下两式同时成立" class="headerlink" title="三.设复平面上三个点$Z_1,Z_2,Z_3$应的复数分别是$z_1,z_2,z_3$，这三点共线的充要条件是存在不全为零的实数$\lambda_1\lambda_2\lambda_3$,使如下两式同时成立:"></a>三.设复平面上三个点$Z_1,Z_2,Z_3$应的复数分别是$z_1,z_2,z_3$，这三点共线的充要条件是存在不全为零的实数$\lambda_1\lambda_2\lambda_3$,使如下两式同时成立:</h2><script type="math/tex; mode=display">
\begin{cases}
\lambda_1+\lambda_2+\lambda_3=0\\
\lambda_1z_1+\lambda_2z_2+\lambda_3z_3=0
\end{cases}</script><h2 id="四-设不共线的四点-A-B-C-D-对应的复数分别为-z-1-z-2-z-3-z-4-则四点共圆的充要条件是"><a href="#四-设不共线的四点-A-B-C-D-对应的复数分别为-z-1-z-2-z-3-z-4-则四点共圆的充要条件是" class="headerlink" title="四.设不共线的四点$A,B,C,D$对应的复数分别为$z_1,z_2,z_3,z_4$,则四点共圆的充要条件是:"></a>四.设不共线的四点$A,B,C,D$对应的复数分别为$z_1,z_2,z_3,z_4$,则四点共圆的充要条件是:</h2><script type="math/tex; mode=display">
\frac{z_3-z_1}{z_4-z_1}=\frac{z_3-z_2}{z_4-z_2}=\lambda(\lambda\in\mathbb{R}且\lambda\ne0)</script><h2 id="五-设不共线的三点-A-B-C-对应的复数-z-1-z-2-z-3-则-Delta-ABC-的面积公式为"><a href="#五-设不共线的三点-A-B-C-对应的复数-z-1-z-2-z-3-则-Delta-ABC-的面积公式为" class="headerlink" title="五.设不共线的三点$A,B,C$对应的复数$z_1,z_2,z_3$,则$\Delta ABC$的面积公式为:"></a>五.设不共线的三点$A,B,C$对应的复数$z_1,z_2,z_3$,则$\Delta ABC$的面积公式为:</h2><script type="math/tex; mode=display">
S_{\Delta ABC}=\frac{i}{4}\cdot
\begin{vmatrix}
1&1&1\\
z_1&z_2&z_3\\
\overline{z_1}&\overline{z_2}&\overline{z_3}
\end{vmatrix}</script><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>学习笔记</tag>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>完全平方数</title>
    <url>/2020/09/23/%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/</url>
    <content><![CDATA[<h1 id="完全平方数"><a href="#完全平方数" class="headerlink" title="完全平方数"></a><a href="https://www.luogu.com.cn/problem/P4318" target="_blank" rel="noopener">完全平方数</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>就是请你求第$n$无平方因字数</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>有感觉的同学会发现，这个似乎和$\mu$有关</p>
<p>此话怎讲？</p>
<p>先考虑$\mu$的定义</p>
<script type="math/tex; mode=display">
\mu(x)=
\begin{cases}
1\quad\qquad\text{x = 1}\\
0\quad\qquad\text{x为某个不为1的完全平方数的倍数}\\
(-1)^k\quad\text{x为无平方因子数}\land x=p_1p_2\cdots p_k
\end{cases}</script><p>那么显然可以得到，无平方因子数的个数可以有如下表示</p>
<script type="math/tex; mode=display">
count=\sum_{i=1}^n\mu^2(i)</script><p>即所有无平方因字数的贡献都为$1$，而其他数没有贡献</p>
<p>那么从这里开始就可以有两种做法了</p>
<h2 id="容斥"><a href="#容斥" class="headerlink" title="容斥"></a>容斥</h2><p>就是说，要从简单的入手</p>
<p>用$n$去减掉带有平方因子数的个数</p>
<p>那么就可以来枚举一下每个完全平方数对答案的贡献</p>
<p>那么，现在有$p_1,p_2\cdots p_k$这些素数</p>
<p>$p_i^2$的贡献就有$\left\lfloor\frac n{p_i^2}\right\rfloor$</p>
<p>但是例如$p_1^2p_2^2$这个数它其实是被计算了两次的</p>
<p>多枚举几个数以后，会发现由偶数个素数构成的数会被重复计算，那么重复的部分是需要减去的</p>
<p><img src="https://s1.ax1x.com/2020/09/23/wxldOJ.png" alt=""></p>
<p>如图，红绿蓝三个交集再三个大圆中被重复计算了，中间那个像勒洛三角形的部分再减去原交集的时候同时也被剪掉了，所以又要加上它的贡献</p>
<p>那么回到这道题，就是说，一个数由$k$个因子构成，那么他的贡献可以表示为<code>(k &amp; 1) ? -1 : 1</code></p>
<p>那么这不就变回了莫比乌斯函数了吗？</p>
<p>所以可以得到：</p>
<script type="math/tex; mode=display">
ans=n-\sum_{i=2}^\sqrt n\mu(i)\left\lfloor\frac n{i^2}\right\rfloor</script><p>就可以直接写了</p>
<p>用二分查找这个应该就不用说了吧</p>
<h3 id="Code-100"><a href="#Code-100" class="headerlink" title="Code(100)"></a>Code(100)</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">5e4</span>;</span><br><span class="line"><span class="keyword">int</span> T, A, B;</span><br><span class="line"><span class="keyword">int</span> P[Maxn + <span class="number">10</span>], Cnt;</span><br><span class="line"><span class="keyword">int</span> mu[Maxn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> Vis[Maxn + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Maxn; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!Vis[i]) P[++Cnt] = i, mu[i] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= Cnt &amp;&amp; i * P[j] &lt;= Maxn; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            Vis[i * P[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % P[j]) mu[i * P[j]] = -mu[i];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">ans</span><span class="params">(x)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>, r; i * i &lt;= x; ++i)</span><br><span class="line">		ans += mu[i] * (x / i / i);</span><br><span class="line">	<span class="keyword">return</span> ans &gt;= A;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> X)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll l(X), r(X &lt;&lt; 1), ans(0);</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">ll <span class="title">Mid</span><span class="params">((l + r) &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (Check(Mid)) ans = Mid, r = Mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> l = Mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;A);</span><br><span class="line">        Find(A);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个时间复杂度是$O(5e4+T\log n)$</p>
<p>理论上乱写都是可以过的</p>
<p>但是还是可以在稍稍优化一下</p>
<p>那么就要考虑对这个求和进行类整数分块</p>
<p>可以证明$\left\lfloor\frac n{i^2}\right\rfloor$在$i\in[1,\sqrt n]$的取值是连续的</p>
<p>那么加上这样一个分块，这道题就可以过了</p>
<h3 id="Code-100-1"><a href="#Code-100-1" class="headerlink" title="Code(100)"></a>Code(100)</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">5e4</span>;</span><br><span class="line"><span class="keyword">int</span> T, A, B;</span><br><span class="line"><span class="keyword">int</span> P[Maxn + <span class="number">10</span>], Cnt;</span><br><span class="line"><span class="keyword">int</span> mu[Maxn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> Vis[Maxn + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Maxn; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!Vis[i]) P[++Cnt] = i, mu[i] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= Cnt &amp;&amp; i * P[j] &lt;= Maxn; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            Vis[i * P[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % P[j]) mu[i * P[j]] = -mu[i];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Maxn; ++i) mu[i] += mu[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">ll <span class="title">ans</span><span class="params">(x)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">2</span>, r; l * l &lt;= x; l = r + <span class="number">1</span>) &#123;</span><br><span class="line">		r = min(<span class="built_in">sqrt</span>(x / (x / l / l)), <span class="built_in">sqrt</span>(x));</span><br><span class="line">		ans += (mu[r] - mu[l - <span class="number">1</span>]) * (x / l / l);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans &gt;= A;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> X)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll l(X), r(X &lt;&lt; 1), ans(0);</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">ll <span class="title">Mid</span><span class="params">((l + r) &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (Check(Mid)) ans = Mid, r = Mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> l = Mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;A);</span><br><span class="line">        Find(A);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="杜教筛"><a href="#杜教筛" class="headerlink" title="杜教筛"></a>杜教筛</h2><p>其实我们发现$\mu^2(i)$也是一个不完全积性函数</p>
<p>那么就是可以考虑使用杜教筛的</p>
<p>杜教筛就不细说了，需要了解杜教筛的可以看我的<a href="https://alansblog.ink/2020/08/19/杜教筛/" target="_blank" rel="noopener">这篇博客</a></p>
<p>考虑构造函数$g(x)$</p>
<p>使得$\mu^2*g$能够方便的表示</p>
<p>能够方便表示的函数可以想到有：$\epsilon,1,id$</p>
<p>那么显然$\epsilon,id$是不好的得到的</p>
<p>那就考虑$\mu^2*g=1$的$g$的构造（其实可以直接$\text{Min_25筛}$，不需要怎么构造别的函数）</p>
<p>那么就是说要让：</p>
<script type="math/tex; mode=display">
\sum_{d|n}\mu^2(d)g(\frac nd)=1</script><p>考虑$\mu^2(d)$有贡献时，当且仅到$d$为无平方因子数，此时要让$g(\frac nd)$也有贡献，整体贡献才可能为$1$</p>
<p>那么感觉一下，$g(\frac nd)$大概是一个与完全平方数有关的函数</p>
<p>那么定义$g(x)=[x==\left\lfloor\sqrt x\right\rfloor^2]$，即 $x$是否是完全平方数</p>
<p>那么对于$\mu^2*g=1$就是成立的了，简单证明一下：</p>
<blockquote>
<p>要让$\mu^2(d)g(\frac nd)=1$当且仅当$d$为无平方因字数且$\frac nd$为完全平方数时才有贡献</p>
<p>那么分两种情况考虑：</p>
<blockquote>
<p>$d$为无平方因子数：那么显然当$\frac nd$不为$1$时$g(\frac nd)$的函数值都为$0$，那么只有$d=n$时，$f(n)g(1)=1$</p>
<p>$d$不为无平方因子数：就是只有当$\frac nd$为$n$的最大平方因子时，$d$才是无平方因子数，$\frac nd$也是完全平方数，此时才有$1$的贡献</p>
</blockquote>
</blockquote>
<p>所以证明了这个构造是没有问题的</p>
<p>接下来，就是杜教筛的套路：</p>
<script type="math/tex; mode=display">
\begin{align*}
g(1)S(n)&=\sum_{i=1}^n(\mu^2*g)(i)-\sum_{i=2}^ng(i)S(\left\lfloor\frac ni\right\rfloor)\\
g(1)S(n)&=n-\sum_{i=2}^ng(i)S(\left\lfloor\frac ni\right\rfloor)\\
\end{align*}</script><p>考虑到$g$函数的性质，会发现只有当$i$为完全平方数时，才有贡献</p>
<p>那么这个又可以写成：</p>
<script type="math/tex; mode=display">
S(n)=n-\sum_{i=2}^\sqrt n S(\left\lfloor\frac n{i^2}\right\rfloor)</script><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MMu</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= Maxn) <span class="keyword">return</span> mu[x];</span><br><span class="line">    <span class="keyword">if</span> (Mu[x]) <span class="keyword">return</span> Mu[x];</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> l(<span class="number">2</span>); <span class="number">1l</span>l * l * l &lt;= x; ++l) Ans += MMu(x / (l * l));</span><br><span class="line">    <span class="keyword">return</span> Mu[x] = x - Ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>就是一个样子的，最后套上二分，这道题就愉快的结束了</p>
<h3 id="Code-100-2"><a href="#Code-100-2" class="headerlink" title="Code(100)"></a>Code(100)</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="built_in">unordered_map</span> &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Mu;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">int</span> T, A, B;</span><br><span class="line"><span class="keyword">int</span> P[Maxn + <span class="number">10</span>], Cnt;</span><br><span class="line"><span class="keyword">int</span> mu[Maxn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> Vis[Maxn + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Maxn; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!Vis[i]) P[++Cnt] = i, mu[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= Cnt &amp;&amp; <span class="number">1l</span>l * i * P[j] &lt;= Maxn; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            Vis[i * P[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % P[j]) mu[i * P[j]] = mu[i];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mu[i] += mu[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MMu</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= Maxn) <span class="keyword">return</span> mu[x];</span><br><span class="line">    <span class="keyword">if</span> (Mu[x]) <span class="keyword">return</span> Mu[x];</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> l(<span class="number">2</span>); <span class="number">1l</span>l * l * l &lt;= x; ++l) Ans += MMu(x / (l * l));</span><br><span class="line">    <span class="keyword">return</span> Mu[x] = x - Ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> X)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll l(X), r(X &lt;&lt; 1);</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">ll <span class="title">Mid</span><span class="params">((l + r) &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (MMu(Mid) &gt;= X) r = Mid;</span><br><span class="line">        <span class="keyword">else</span> l = Mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;A);</span><br><span class="line">        Find(A);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>有时间的话，再用$\text{Min_25}$筛写一次吧</p>
<p><strong>注意：</strong>不用开$\text{long long}$的地方就别开$\text{long long}$，不明白为什么有的$OJ$连这个都要卡</p>
<p><img src="https://s1.ax1x.com/2020/09/24/wxXz4K.png" alt=""></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>莫比乌斯反演</tag>
        <tag>容斥</tag>
        <tag>前缀和</tag>
        <tag>Min_25筛</tag>
        <tag>杜教筛</tag>
      </tags>
  </entry>
  <entry>
    <title>悬线Dp</title>
    <url>/2020/07/24/%E6%82%AC%E7%BA%BFDp/</url>
    <content><![CDATA[<h1 id="ZJOI2007-棋盘制作"><a href="#ZJOI2007-棋盘制作" class="headerlink" title="[ZJOI2007]棋盘制作"></a><a href="https://www.luogu.com.cn/problem/P1169" target="_blank" rel="noopener">[ZJOI2007]棋盘制作</a></h1><p>这比较模板, 算是裸的悬线$dp$</p>
<p>看见$N,M\leqslant2000$, 对了, 那就是了</p>
<p>时间复杂度$O(NM)$妥妥的</p>
<p>那么悬线法就是维护以这个点为某个边界条件, 维护其他边界范围</p>
<p>一般常用的是将这个点作为矩形的下底边, 用$left$维护最左边的范围, $right$维护最右边的范围, $up$维护上边界</p>
<p>所以这个点所在的矩阵大小就是$(right-left+1)*up$</p>
<p>如果要求什么正方形之类的, 对边特殊处理一下即可</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">2005</span>;</span><br><span class="line"><span class="keyword">int</span> N, M, Map[Maxn][Maxn];</span><br><span class="line"><span class="keyword">int</span> Left[Maxn][Maxn], Right[Maxn][Maxn], Up[Maxn][Maxn];</span><br><span class="line"><span class="keyword">int</span> AnsS, AnsQ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d %d"</span>, &amp;N, &amp;M);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= M; ++j)</span><br><span class="line">            <span class="built_in">scanf</span> (<span class="string">"%d"</span>, Map[i] + j), Left[i][j] = Right[i][j] = j, Up[i][j] = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= M; ++j) <span class="keyword">if</span> (Map[i][j] ^ Map[i][j - <span class="number">1</span>]) Left[i][j] = Left[i][j - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = M - <span class="number">1</span>; j; --j) <span class="keyword">if</span> (Map[i][j + <span class="number">1</span>] ^ Map[i][j]) Right[i][j] = Right[i][j + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= M; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">1</span> &amp;&amp; Map[i][j] ^ Map[i - <span class="number">1</span>][j])</span><br><span class="line">            &#123;</span><br><span class="line">                Left[i][j] = max(Left[i - <span class="number">1</span>][j], Left[i][j]);</span><br><span class="line">                Right[i][j] = min(Right[i - <span class="number">1</span>][j], Right[i][j]);</span><br><span class="line">                Up[i][j] = Up[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> Len = Right[i][j] - Left[i][j] + <span class="number">1</span>;</span><br><span class="line">            AnsS = max(AnsS, min(Len, Up[i][j]));</span><br><span class="line">            AnsQ = max(AnsQ, Len * Up[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%d\n%d\n"</span>, AnsS * AnsS, AnsQ);</span><br><span class="line">    system (<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>悬线Dp</tag>
      </tags>
  </entry>
  <entry>
    <title>搜索专题</title>
    <url>/2020/09/05/%E6%90%9C%E7%B4%A2%E4%B8%93%E9%A2%98/</url>
    <content><![CDATA[<h1 id="必备技能"><a href="#必备技能" class="headerlink" title="必备技能"></a>必备技能</h1><ul>
<li>STL</li>
</ul>
<blockquote>
<ul>
<li>队列</li>
<li>优先队列</li>
</ul>
</blockquote>
<p>那就可以了</p>
<hr>
<h1 id="fc-DFS-amp-BFS"><a href="#fc-DFS-amp-BFS" class="headerlink" title="fc(DFS&amp;BFS)"></a>fc(DFS&amp;BFS)</h1><p>相信大家都对搜索(深搜/款搜)有了一定程度上自己的理解了</p>
<p>然后据我所了解，可能大家对这两个东西的区分度可能不是特别高，然后请允许我来<del>口胡</del>(对比、分析？)一下这两个东西</p>
<p>先来一个小练习：</p>
<p>用搜索求斐波那契数列的第$n$项</p>
<p><del>可能在座的各位已经会了递推求解、矩阵快速幂求解、通项公式求解</del></p>
<p>但还是希望大家能拿起自己的草稿纸，画一画这个运行的大概的过</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        斐波那契数列
    </div>
    <div class='spoiler-content'>
        <p><img src="https://s1.ax1x.com/2020/09/08/wQlXmn.png" alt=""></p>

    </div>
</div>
<h2 id="深度优先搜索-Depth-First-Search"><a href="#深度优先搜索-Depth-First-Search" class="headerlink" title="深度优先搜索(Depth First Search)"></a>深度优先搜索(Depth First Search)</h2><p>优势：</p>
<ul>
<li>适合状态不易储存的情况</li>
<li>有时候对子问题的依赖很强</li>
<li>符合人类的思考习惯</li>
</ul>
<p>劣势：</p>
<ul>
<li>很容易超时</li>
<li>很容易爆栈</li>
</ul>
<h2 id="宽度优先搜索-Breadth-First-Search-（Baidu-First-Search）"><a href="#宽度优先搜索-Breadth-First-Search-（Baidu-First-Search）" class="headerlink" title="宽度优先搜索(Breadth First Search （Baidu First Search）)"></a>宽度优先搜索(Breadth First Search <del>（Baidu First Search）</del>)</h2><p>优势：</p>
<ul>
<li>适合状态容易储存的问题</li>
<li>不容易爆栈（搜索深度远大于$\text{DFS}$）</li>
<li>能够将父状态继承给子状态</li>
<li>可以跑最短路啊，各种最优化问题</li>
</ul>
<p>劣势：</p>
<ul>
<li>可能产生大量的无用状态导致$MLE$</li>
<li>对某些数据结构的要求有点高</li>
</ul>
<p>接下来干嘛，练题？</p>
<p><del>太没意思了吧。。。</del></p>
<p>来点有意思的？</p>
<hr>
<h1 id="奇技淫巧一：记忆化搜索-伪dp"><a href="#奇技淫巧一：记忆化搜索-伪dp" class="headerlink" title="奇技淫巧一：记忆化搜索(伪dp)"></a>奇技淫巧一：记忆化搜索(伪dp)</h1><p>先让大家用搜索求一求</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        斐波那契数列
    </div>
    <div class='spoiler-content'>
        <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">ll n, Feb[<span class="number">105</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">feb</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">1</span> || x == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> (feb(x - <span class="number">1</span>) + feb(x -  <span class="number">2</span>)) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%lld"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">3</span>; i &lt;= n; ++i) </span><br><span class="line">        Feb[i] = (Feb[i - <span class="number">1</span>] + Feb[i - <span class="number">2</span>]) % mod;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, Feb[n]);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, feb(n));</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

    </div>
</div>
<p>好像$n$从$40$开始，这两个方式跑出来的时间差距就越来越大了</p>
<p>咋搞？</p>
<p>嗯，如题：记忆化</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">ll n, Feb[<span class="number">105</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">ll ans[<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">feb</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">1</span> || x == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (ans[x]) <span class="keyword">return</span> ans[x];</span><br><span class="line">    <span class="keyword">return</span> ans[x] = (feb(x - <span class="number">1</span>) + feb(x -  <span class="number">2</span>)) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%lld"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">3</span>; i &lt;= n; ++i) </span><br><span class="line">        Feb[i] = (Feb[i - <span class="number">1</span>] + Feb[i - <span class="number">2</span>]) % mod;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, Feb[n]);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, feb(n));</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

    </div>
</div>
<p>其实这个没有什么不一样的</p>
<p>就是记忆化，请大家$YY$一下就好</p>
<h2 id="来点例题？"><a href="#来点例题？" class="headerlink" title="来点例题？"></a>来点例题？</h2><h3 id="SHOI2012滑雪"><a href="#SHOI2012滑雪" class="headerlink" title="SHOI2012滑雪"></a><a href="https://www.luogu.com.cn/problem/P1434" target="_blank" rel="noopener">SHOI2012滑雪</a></h3><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        solution
    </div>
    <div class='spoiler-content'>
        <p>那么就是用一个$f[i][j]$来记录在$(i,j)$能往下滑的最大距离</p>
<p>那么转移的话就是</p>
<script type="math/tex; mode=display">
f[i][j]=max(f[i-1][j], f[i+1][j],f[i][j-1],f[i][j+1])+1</script><p>当然，这个方程并不完全正确，大家还需要判断一下边界条件和这个高度的大小</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, ans;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">105</span>][<span class="number">105</span>], h[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> mx[] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> my[] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (f[x][y]) <span class="keyword">return</span> f[x][y];</span><br><span class="line">    f[x][y] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">0</span>); i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> nx = x + mx[i];</span><br><span class="line">        <span class="keyword">int</span> ny = y + my[i];</span><br><span class="line">        <span class="keyword">if</span> (nx &lt; <span class="number">1</span> || nx &gt; n || ny &lt; <span class="number">1</span> || ny &gt; m) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (h[nx][ny] &gt;= h[x][y]) <span class="keyword">continue</span>;</span><br><span class="line">        f[x][y] = max(f[x][y], dfs(nx, ny) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[x][y];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">1</span>); i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j(<span class="number">1</span>); j &lt;= m; ++j)</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; h[i][j];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">1</span>); i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j(<span class="number">1</span>); j &lt;= m; ++j)</span><br><span class="line">            ans = max(ans, dfs(i, j));</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

    </div>
</div>    
<h3 id="Achen"><a href="#Achen" class="headerlink" title="Achen"></a><a href="https://www.luogu.com.cn/problem/U130279" target="_blank" rel="noopener">Achen</a></h3><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        solution
    </div>
    <div class='spoiler-content'>
        <p>手动模拟一下</p>
<p>会发现，其实$A/B$左右是否是空的，对于这道题没有本质的影响</p>
<p>因为要走遍所有的点的话，这只有一种方案</p>
<p>然后$A/B$的顺序对于本题也没有本质影响</p>
<p>来两张图？</p>
<p><img src="https://s1.ax1x.com/2020/09/10/wGGFde.png" alt=""></p>
<p><img src="https://s1.ax1x.com/2020/09/10/wGoMo8.png" alt=""></p>
<p>好像就是如果$A$不是最靠左的点，那么$A$的实际位置应该是再往右走一格的位置，$B$也同理</p>
<p>那么所有的问题都可以转化为$A,B$分别为端点的问题了</p>
<p>再想，这个又能怎么考虑呢？</p>
<p><img src="https://s1.ax1x.com/2020/09/10/wG7sq1.png" alt=""></p>
<p>这啥意思？</p>
<p>就是到最右端点的两种方案</p>
<p>如果我们用一个数组$f[i]$来表示经过了$i$点左边的所有点后，最后到达$i$这样的情况的方案数</p>
<p>那么它可以写成这样$f[i] = f[i - 1] + f[i - 3]$</p>
<p><strong>Code</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">X</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">O</span><span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (O &lt; <span class="string">'0'</span> || O &gt; <span class="string">'9'</span>) O = getchar();</span><br><span class="line">    <span class="keyword">for</span> (; O &gt;= <span class="string">'0'</span> &amp;&amp; O &lt;= <span class="string">'9'</span>; O = getchar()) X = (X &lt;&lt; <span class="number">1</span>) + (X &lt;&lt; <span class="number">3</span>) + (O ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> X;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ll Maxn = <span class="number">1e6</span> + <span class="number">10</span>, Mod = <span class="number">998244353</span>;</span><br><span class="line">ll Feb[Maxn] = &#123;<span class="number">1</span>&#125;;</span><br><span class="line">ll T, N, A, B;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">3</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (Feb[x]) <span class="keyword">return</span> Feb[x];</span><br><span class="line">    <span class="keyword">return</span> Feb[x] = (dfs(x - <span class="number">1</span>) + dfs(x - <span class="number">3</span>)) % Mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T = Read();</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        N = Read(), A = Read(), B = Read();</span><br><span class="line">        <span class="keyword">if</span> (A &gt; B) swap(A, B);</span><br><span class="line">        <span class="keyword">if</span> (A &gt; <span class="number">1</span>) A += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (B &lt; N) B -= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (B &lt; A) <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, dfs(B - A));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>就可以了</p>
<p><del>其实递推更简单，但是没有这个记搜快</del></p>

    </div>
</div>
<h3 id="过河卒"><a href="#过河卒" class="headerlink" title="过河卒"></a><a href="https://www.luogu.com.cn/problem/P1002" target="_blank" rel="noopener">过河卒</a></h3><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        solution
    </div>
    <div class='spoiler-content'>
        <p>个人觉得这是一个板子题<del>水题</del></p>
<p>极其无脑的模拟就可以了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">50</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, x, y;</span><br><span class="line">ll f[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> mx[] = &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-2</span>, <span class="number">-2</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> my[] = &#123;<span class="number">2</span>, <span class="number">-2</span>, <span class="number">2</span>, <span class="number">-2</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; n || y &gt; m) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (f[x][y] == <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (f[x][y]) <span class="keyword">return</span> f[x][y];</span><br><span class="line">    <span class="keyword">return</span> f[x][y] = dfs(x + <span class="number">1</span>, y) + dfs(x, y + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), m = __read();</span><br><span class="line">    x = __read(), y = __read();</span><br><span class="line">    f[n][m] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">0</span>); i &lt; <span class="number">9</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> nx = x + mx[i];</span><br><span class="line">        <span class="keyword">int</span> ny = y + my[i];</span><br><span class="line">        <span class="keyword">if</span> (nx &lt; <span class="number">0</span> || nx &gt; n || ny &lt; <span class="number">0</span> || ny &gt; m) <span class="keyword">continue</span>;</span><br><span class="line">        f[nx][ny] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dfs(<span class="number">0</span>, <span class="number">0</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>嗯，记得开$long\;long$我失算了，因为没开，交了三次。。。</p>
<p>难受。。。</p>

    </div>
</div>
<h1 id="奇技淫巧二：疯狂剪枝"><a href="#奇技淫巧二：疯狂剪枝" class="headerlink" title="奇技淫巧二：疯狂剪枝"></a>奇技淫巧二：疯狂剪枝</h1><p>那就是遇见不可能有贡献的答案可以直接返回</p>
<h2 id="来点例题？-1"><a href="#来点例题？-1" class="headerlink" title="来点例题？"></a>来点例题？</h2><h3 id="数的划分-加强版"><a href="#数的划分-加强版" class="headerlink" title="数的划分(加强版)"></a><a href="https://www.luogu.com.cn/problem/U130408" target="_blank" rel="noopener">数的划分(加强版)</a></h3><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        solution
    </div>
    <div class='spoiler-content'>
        <p>我们可以先写一个暴力，康康它可以怎么记忆化</p>
<p>$DFS$的时候，我们就记录三个参数</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">205</span>][<span class="number">10</span>][<span class="number">205</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> rest, <span class="keyword">int</span> num, <span class="keyword">int</span> last)</span><span class="comment">//rest -&gt; 还剩多少， 还应该分几次， last -&gt; 保证枚举出来时单调的</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!num) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rest) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = last; i &lt;= rest; ++i)</span><br><span class="line">        ans += dfs(rest - i, num - <span class="number">1</span>, i);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span> (f, <span class="number">-1</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dfs(n, k, <span class="number">1</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>记忆化一下，代码没怎么变</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">205</span>][<span class="number">10</span>][<span class="number">205</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> rest, <span class="keyword">int</span> num, <span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (~f[rest][num][last]) <span class="keyword">return</span> f[rest][num][last];</span><br><span class="line">    <span class="keyword">if</span> (!num) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rest) <span class="keyword">return</span> f[rest][num][last] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> f[rest][num][last] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (rest &lt; num * last) <span class="keyword">return</span> f[rest][num][last] = <span class="number">0</span>;</span><br><span class="line">    f[rest][num][last] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = last; i &lt;= rest; ++i)</span><br><span class="line">        f[rest][num][last] += dfs(rest - i, num - <span class="number">1</span>, i);</span><br><span class="line">    <span class="keyword">return</span> f[rest][num][last];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span> (f, <span class="number">-1</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dfs(n, k, <span class="number">1</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看看题解，惊艳了，这种吊打我代码神仙写法都有</p>
<p>当然，我将这种写法呢，只是为了让大家深刻理解一下这的记忆化搜索还有剪枝优化</p>

    </div>
</div>
<h1 id="奇技淫巧三：双向BFS、折半搜索"><a href="#奇技淫巧三：双向BFS、折半搜索" class="headerlink" title="奇技淫巧三：双向BFS、折半搜索"></a>奇技淫巧三：双向BFS、折半搜索</h1><p>怎么说？如题！</p>
<h2 id="八数码难题"><a href="#八数码难题" class="headerlink" title="八数码难题"></a><a href="https://www.luogu.com.cn/problem/P1379" target="_blank" rel="noopener">八数码难题</a></h2><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        solution
    </div>
    <div class='spoiler-content'>
        <p>双向$BFS$嘛，对吧？</p>
<p>那就从首尾两端分别搜一次呗</p>
<p>这有什么好处呢？</p>
<p>简单的说，这个东西它及大幅度的剪掉了无用的状态</p>
<p>上图？</p>
<p><img src="https://s1.ax1x.com/2020/09/11/wYbAtx.png" alt=""></p>
<p>如果要把这个搜索树给遍历完，那么这个的时间复杂度就是$O(2^{n+1})$</p>
<p>那么如果$n$的数量级在$30、40$左右，那么恭喜你，完了！绝对$TLE$！</p>
<p>但是$CJ$我表示不服，我就只会搜索。。。</p>
<p>那么我们稍微修改一下这棵树</p>
<p>怎么讲？</p>
<p>有很多叶子节点时没有用的！！！</p>
<p>那么我们让这棵树有两个根，看看那些叶子结点的信息重合了</p>
<p>重合了就可以更新答案</p>
<p>那么时间复杂度？$O(\sqrt{2^{n+1}})$，很可以！</p>
<p>如果原来是$1e12$的复杂度</p>
<p>根号一下就是$1e6$，随便跑啊！！！</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mx[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> my[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> Now, Next, Ans = <span class="number">123804765</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span> &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; en[<span class="number">2</span>];</span><br><span class="line"><span class="built_in">queue</span> &lt;<span class="keyword">int</span>&gt; q[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mswap</span><span class="params">(<span class="keyword">char</span> &amp;a, <span class="keyword">char</span> &amp;b)</span></span>&#123;a ^= b ^= a ^= b;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Get</span><span class="params">(<span class="keyword">int</span> state,<span class="keyword">int</span> k,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">    short x, y, l = en[w][state];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span>; j &gt;= <span class="number">0</span>; --j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(state % <span class="number">10</span> == <span class="number">0</span>) x = i,y = j;</span><br><span class="line">            a[i][j] = <span class="keyword">char</span>((state % <span class="number">10</span> - <span class="number">0</span>) + <span class="string">'0'</span>), state /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    short nx = x + mx[k];</span><br><span class="line">    short ny = y + my[k];</span><br><span class="line">    <span class="keyword">if</span>(nx &lt; <span class="number">0</span> || ny &lt; <span class="number">0</span> || nx &gt; <span class="number">2</span> || ny &gt; <span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    mswap(a[x][y], a[nx][ny]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; ++j)&#123;</span><br><span class="line">            state = state * <span class="number">10</span> + <span class="keyword">int</span>(a[i][j] - <span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(en[w].count(state)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    en[w][state] = l + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> state;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    Now = q[x].front();</span><br><span class="line">        q[x].pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)&#123;</span><br><span class="line">            Next = Get(Now, i, x);</span><br><span class="line">            <span class="keyword">if</span>(!Next)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(en[!x].count(Next))&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, en[<span class="number">0</span>][Next] + en[<span class="number">1</span>][Next]);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>); </span><br><span class="line">            &#125;</span><br><span class="line">            q[x].push(Next);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    q[<span class="number">0</span>].push(Now);</span><br><span class="line">    q[<span class="number">1</span>].push(Ans);</span><br><span class="line">    <span class="keyword">while</span>(q[<span class="number">0</span>].size() || q[<span class="number">1</span>].size())&#123;</span><br><span class="line">        <span class="keyword">if</span>(q[<span class="number">0</span>].size())work(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(q[<span class="number">1</span>].size())work(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;Now);</span><br><span class="line">    <span class="keyword">if</span>(Now == Ans)<span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span> bfs();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>是吧，挺简单的</p>

    </div>
</div>
<h1 id="奇技淫巧四：IDA"><a href="#奇技淫巧四：IDA" class="headerlink" title="奇技淫巧四：IDA*"></a>奇技淫巧四：IDA*</h1><h2 id="来到例题？"><a href="#来到例题？" class="headerlink" title="来到例题？"></a>来到例题？</h2><h3 id="铁盘整理"><a href="#铁盘整理" class="headerlink" title="铁盘整理"></a><a href="https://www.luogu.com.cn/problem/P2534" target="_blank" rel="noopener">铁盘整理</a></h3><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        Code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[maxn], f[maxn], limit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> _abs(<span class="keyword">int</span> x)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span>) <span class="keyword">return</span> -x;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Check</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">res</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i(<span class="number">1</span>); i &lt;= n; ++i)</span><br><span class="line">        res += (_abs(a[i] - a[i + <span class="number">1</span>]) != <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bdfs</span><span class="params">(<span class="keyword">int</span> dep, <span class="keyword">int</span> pre)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> g = Check();</span><br><span class="line">    <span class="keyword">if</span> (dep + g &gt; limit) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">if</span> (dep &gt; limit) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">if</span> (g == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, dep);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">if</span> (i != pre) &#123;</span><br><span class="line">            reverse (a + <span class="number">1</span>, a + i + <span class="number">1</span>);</span><br><span class="line">            bdfs(dep + <span class="number">1</span>, i);</span><br><span class="line">            reverse (a + <span class="number">1</span>, a + i + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i] = __read(), f[i] = a[i];</span><br><span class="line">    sort (f + <span class="number">1</span>, f + n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i] = lower_bound(f + <span class="number">1</span>, f + n + <span class="number">1</span>, a[i]) - f;</span><br><span class="line">    a[n + <span class="number">1</span>] = n + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; limit &lt;= (n &lt;&lt; <span class="number">1</span>) - <span class="number">2</span>; ++limit) bdfs(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

    </div>
</div>
<h3 id="骑士精神"><a href="#骑士精神" class="headerlink" title="骑士精神"></a><a href="https://www.luogu.com.cn/problem/P2324" target="_blank" rel="noopener">骑士精神</a></h3><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        Code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, X, Y, Get;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mx[] = &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">-2</span>, <span class="number">-2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> my[] = &#123;<span class="number">2</span>, <span class="number">-2</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">-2</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> Now[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> Goal[<span class="number">10</span>][<span class="number">10</span>] = &#123;</span><br><span class="line">    &#123;<span class="string">'1'</span>,<span class="string">'1'</span>,<span class="string">'1'</span>,<span class="string">'1'</span>,<span class="string">'1'</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'1'</span>,<span class="string">'1'</span>,<span class="string">'1'</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'*'</span>,<span class="string">'1'</span>,<span class="string">'1'</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'1'</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'0'</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Swap</span><span class="params">(<span class="keyword">char</span> &amp;x,<span class="keyword">char</span> &amp;y)</span></span>&#123;x ^= y ^= x ^= y;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">G</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> Cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>;++j)<span class="keyword">if</span> (Now[i][j] != Goal[i][j])++Cnt;</span><br><span class="line">    <span class="keyword">return</span> Cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IDA_STAR</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> Dep, <span class="keyword">int</span> Limit, <span class="keyword">int</span> Dir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Get)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (Dep &gt; Limit)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (!G())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Dep);</span><br><span class="line">        Get = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> nx = x + mx[i];</span><br><span class="line">        <span class="keyword">int</span> ny = y + my[i];</span><br><span class="line">        <span class="keyword">if</span>(nx &lt; <span class="number">0</span> || nx &gt;= <span class="number">5</span> || nx &lt;<span class="number">0</span> || ny &gt;= <span class="number">5</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(i + Dir == <span class="number">7</span>)<span class="keyword">continue</span>;</span><br><span class="line">        Swap(Now[x][y], Now[nx][ny]);</span><br><span class="line">        <span class="keyword">if</span> (G() + Dep &lt;= Limit)IDA_STAR(nx, ny, Dep + <span class="number">1</span>, Limit, i);</span><br><span class="line">        Swap(Now[x][y], Now[nx][ny]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        Get = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> Ch = getchar();</span><br><span class="line">            <span class="keyword">while</span>((Ch != <span class="string">'0'</span>) &amp;&amp; (Ch != <span class="string">'1'</span>) &amp;&amp; (Ch != <span class="string">'*'</span>))Ch = getchar();</span><br><span class="line">            Now[i][<span class="number">0</span>] = Ch;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; <span class="number">5</span>; ++j)Now[i][j] = getchar();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; ++j)</span><br><span class="line">                <span class="keyword">if</span>(Now[i][j] == <span class="string">'*'</span>) X = i, Y = j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">15</span>; ++i)IDA_STAR(X, Y, <span class="number">0</span>, i, <span class="number">8</span>);</span><br><span class="line">        <span class="keyword">if</span> (!Get)<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

    </div>
</div>
<p><del>我可能没时间写了，<a href="https://oi-wiki.org/search/astar/" target="_blank" rel="noopener">好网站</a></del></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>摆渡车</title>
    <url>/2020/09/15/%E6%91%86%E6%B8%A1%E8%BD%A6/</url>
    <content><![CDATA[<h1 id="摆渡车"><a href="#摆渡车" class="headerlink" title="摆渡车"></a><a href="https://ac.nowcoder.com/acm/problem/21471" target="_blank" rel="noopener">摆渡车</a></h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>你可以操控一辆车的发车时间，你也知道跑一次往返的时间，你还知道每一个人到达车站的时间</p>
<p>让你找到一种方案使得所有人的等待时间之和最少，求这个最小时间</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>第一反应是把到达车站的人作为一个整体<br>然后我们可以枚举最近的一次发车时间</p>
<p>假设现在的时间是$\text{i}$，最近的一次发车时间是$\text{j}$<br>那么从$j\sim i$的等待时间可以表示为$\sum_{j&lt;t_x\le i}i-t_x$<br>那么我们把这个拆开来看</p>
<script type="math/tex; mode=display">
\begin{align*}
\sum_{j<t_x\le i}i-t&=\sum_{j<t_x\le i}i-\sum_{j < t_x\le i}t_x\\
&=(cnt_i-cnt_j)*i-(sum_i-sumj)
\end{align*}</script><p>貌似变得友好了呢</p>
<p>直观感觉一下，我们有效的最近的发车时间应该是不能小于($\text{i-m}$)的</p>
<p>那么其实就是有一部分人在上一次发车时就开始等待了<br>那么这个也是要加入贡献的</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, t, mt, ans(<span class="number">0x7fffffff</span>);</span><br><span class="line"><span class="keyword">int</span> cnt[maxn], sum[maxn], f[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">x</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span><span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) o = getchar();</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">wait</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (cnt[r] - cnt[l]) * r - (sum[r] - sum[l]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = Read(), m = Read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        mt = max(t = Read(), mt);</span><br><span class="line">        cnt[t]++, sum[t] += t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m + mt; ++i) cnt[i] += cnt[i - <span class="number">1</span>], sum[i] += sum[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m + mt; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= m &amp;&amp; cnt[i] == cnt[i - m]) &#123;</span><br><span class="line">            f[i] = f[i - m];</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        f[i] = cnt[i] * i - sum[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = max(i - <span class="number">2</span> * m + <span class="number">1</span>, <span class="number">0</span>); j &lt;= i - m; ++j)</span><br><span class="line">            f[i] = min(f[i], f[j] + wait(j, i));</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= mt) ans = min(ans, f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>Dp优化</tag>
      </tags>
  </entry>
  <entry>
    <title>数位DP</title>
    <url>/2020/07/22/%E6%95%B0%E4%BD%8DDP/</url>
    <content><![CDATA[<h1 id="HDU3652-B-Number"><a href="#HDU3652-B-Number" class="headerlink" title="HDU3652 B-Number"></a><a href="https://vjudge.net/problem/HDU-3652#author=0" target="_blank" rel="noopener">HDU3652 B-Number</a></h1><p>这道题, 是非常典型的一个例子, 堪称数位$Dp$的模板</p>
<h2 id="状态设计"><a href="#状态设计" class="headerlink" title="状态设计:"></a>状态设计:</h2><p>令$Dp[Pos][Lst][Num]$表示当前枚举的这个数是第$Pos$位, 前面数字的状态为$Lst$, 前面的数的和对$13$取模的结果为$Num$</p>
<p>可以枚举第$Pos$为可能的值$i$, 并有如下转移</p>
<script type="math/tex; mode=display">
Ans=\sum\limits_{i=1}^{\min(limit,\;9)}Dp[pos-1][State][(Num*10+i)\%13]</script><p>解释一下$State$:</p>
<script type="math/tex; mode=display">
\begin{align*}
    if (&State == 0)\\
        &if (i == 1) return 1;\\
        &else\;return 0;\\
    else& if (State == 1)\\
        &if (i == 1) return 1;\\
        &else\;if (i == 3) return 2;\\
        &else\;return 0;\\
    retu&rn 2;
\end{align*}</script><p>这应该算是比较明白的了</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">13</span>;</span><br><span class="line"><span class="keyword">int</span> N, A[<span class="number">15</span>], Dp[<span class="number">15</span>][<span class="number">3</span>][<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Get</span><span class="params">(<span class="keyword">int</span> Lst, <span class="keyword">int</span> Now)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Lst == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> (Now == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Lst == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> (Now == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Now == <span class="number">3</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> Pos, <span class="keyword">int</span> Lst, <span class="keyword">int</span> Num, <span class="keyword">int</span> Lim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Pos == <span class="number">0</span>) <span class="keyword">return</span> Num == <span class="number">0</span> &amp;&amp; Lst == <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (!Lim &amp;&amp; ~Dp[Pos][Lst][Num]) <span class="keyword">return</span> Dp[Pos][Lst][Num];</span><br><span class="line">    <span class="keyword">int</span> Limit = Lim ? A[Pos] : <span class="number">9</span>, Ans(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= Limit; ++i)</span><br><span class="line">        Ans += DFS(Pos - <span class="number">1</span>, Get(Lst, i), (Num * <span class="number">10</span> + i) % M, Lim &amp;&amp; i == Limit);</span><br><span class="line">    <span class="keyword">return</span> Lim ? Ans : Dp[Pos][Lst][Num] = Ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Work</span><span class="params">(<span class="keyword">int</span> X)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Pos</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (X)</span><br><span class="line">    &#123;</span><br><span class="line">        A[++Pos] = X % <span class="number">10</span>;</span><br><span class="line">        X /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> DFS(Pos, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(Dp, <span class="number">-1</span>, <span class="keyword">sizeof</span> Dp);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;N) != EOF) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Work(N));</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="ZJOI2010-数字计数"><a href="#ZJOI2010-数字计数" class="headerlink" title="[ZJOI2010]数字计数"></a><a href="https://www.luogu.com.cn/problem/P2602" target="_blank" rel="noopener">[ZJOI2010]数字计数</a></h1><p>重复十次相同的操作……</p>
<p>因为考虑到有前导0,  会对0的统计造成影响, 所以要排除前导零的影响</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll A, B;</span><br><span class="line">ll Dp[<span class="number">20</span>][<span class="number">20</span>], Num[<span class="number">20</span>];</span><br><span class="line"><span class="function">ll <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> Pos, <span class="keyword">int</span> Nmb, ll Sum, <span class="keyword">bool</span> Lim, <span class="keyword">bool</span> Led)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Pos == <span class="number">0</span>) <span class="keyword">return</span> Sum;</span><br><span class="line">    <span class="keyword">if</span> (!Lim &amp;&amp; Led &amp;&amp; ~Dp[Pos][Sum]) <span class="keyword">return</span> Dp[Pos][Sum];</span><br><span class="line">    <span class="keyword">int</span> Up = Lim ? Num[Pos] : <span class="number">9</span>;</span><br><span class="line">    <span class="function">ll <span class="title">Ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= Up; ++i)</span><br><span class="line">        Ans += DFS(Pos - <span class="number">1</span>, Nmb, Sum + ((i || Led) &amp;&amp; (i == Nmb)), (i == Up) &amp;&amp; Lim, Led || i);</span><br><span class="line">    <span class="keyword">if</span> (!Lim &amp;&amp; Led) Dp[Pos][Sum] = Ans;</span><br><span class="line">    <span class="keyword">return</span> Ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Get</span><span class="params">(ll X, <span class="keyword">int</span> N)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span> (Dp, <span class="number">-1</span>, <span class="keyword">sizeof</span> Dp);</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Len</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (X)</span><br><span class="line">    &#123;</span><br><span class="line">        Num[++Len] = X % <span class="number">10</span>;</span><br><span class="line">        X /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> DFS(Len, N, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%lld %lld"</span>, &amp;A, &amp;B);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++i) <span class="built_in">printf</span> (<span class="string">"%lld "</span>, Get(B, i) - Get(A - <span class="number">1</span>, i));</span><br><span class="line">    system (<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>数位Dp</tag>
      </tags>
  </entry>
  <entry>
    <title>旧试题</title>
    <url>/2020/08/23/%E6%97%A7%E8%AF%95%E9%A2%98/</url>
    <content><![CDATA[<h1 id="P4619-SDOI2018-旧试题"><a href="#P4619-SDOI2018-旧试题" class="headerlink" title="P4619 [SDOI2018]旧试题"></a><a href="https://www.luogu.com.cn/problem/P4619" target="_blank" rel="noopener">P4619 [SDOI2018]旧试题</a></h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>这里没有奇奇怪怪的描述</p>
<p>这道题说白了就是求：</p>
<script type="math/tex; mode=display">
\sum_{i=1}^A\sum_{j=1}^B\sum_{k=1}^C\text{d}(ijk)\\
其中\text{d}(x)表示x的约数个数</script><p>这道题和<a href="https://www.luogu.com.cn/problem/P3327" target="_blank" rel="noopener">P3327 [SDOI2015]约数个数和</a>比较类似，其实就是多了一个$j$</p>
<h2 id="问题化简"><a href="#问题化简" class="headerlink" title="问题化简"></a>问题化简</h2><p>我们可以知道：</p>
<script type="math/tex; mode=display">
\text{d}(ijk)=\sum_{x|i}\sum_{y|j}\sum_{z|k}[x\perp y][y\perp z][z\perp x]</script><p>即，原式可以化为：</p>
<script type="math/tex; mode=display">
\begin{align*}
\sum_{i=1}^A\sum_{j=1}^B\sum_{k=1}^C\text{d}(ijk)&=\sum_{i=1}^A\sum_{j=1}^B\sum_{k=1}^C\sum_{x|i}\sum_{y|j}\sum_{z|k}[x\perp y][y\perp z][x\perp z]\\
&=\sum_{x=1}^A\sum_{y=1}^B\sum_{z=1}^C[x\perp y][y\perp z][x\perp z][\frac Ax][\frac By][\frac Cz]\\
&\text{选择x$\perp$y进行反演，即：}\\
&=\sum_{x=1}^A\sum_{y=1}^B\sum_{z=1}^C(\sum_{d|\gcd(x,y)}\mu(d))[y\perp z][x\perp z][\frac Ax][\frac By][\frac Cz]\\
&=\sum_{d=1}^{\min(A,B)}\mu(d)\sum_{x=1}^{\lfloor\frac Ad\rfloor}\sum_{y=1}^{\lfloor\frac Bd\rfloor}\sum_{z=1}^C[yd\perp z][xd\perp z][\frac A{xd}][\frac B{yd}][\frac Cz]\\
&\text{整理一下可以得到：}\\
&=\sum_{z=1}^C[\frac Cz]\sum_{d=1}^{\min(A,B)}\mu(d)[d\perp z](\sum_{x=1}^{\frac Ad}[x\perp z][\frac A{dx}])(\sum_{y=1}^{\frac Bd}[y\perp z][\frac B{dx}])
\end{align*}</script><p>这样一来，我们就成功了一大半了</p>
<p>现在，我们发现有两串看似比较相似的运算，我们可以用一个函数来代替它:</p>
<script type="math/tex; mode=display">
f(n,k)=\sum_{i=1}^n[i\perp k][\frac ni]\\
g(n,k)=\sum_{i=1}^n\mu(i)[i\perp k]</script><p>那么：</p>
<script type="math/tex; mode=display">
\begin{align*}
Ans&=\sum_{z=1}^C[\frac Cz]\sum_{d=1}^{\min(A,B)}\mu(d)[d\perp z]f(\frac Ad,z)f(\frac Bd,z)\\
&=\sum_{z=1}^C[\frac Cz]\sum (g(r,z)-g(l-1,z))f(\frac Al,z)f(\frac Bl,z)\\
\end{align*}</script><p>这里，我们发现$\sum (g(r,z)-g(l-1,z))f(\frac Al,z)f(\frac Bl,z)$其实与$z$本身无关</p>
<p>简言之，我们只需要考虑$z$的无平方因子数</p>
<p>即：</p>
<script type="math/tex; mode=display">
lw(z)=\prod_{i=1} P_i^1</script><p>但是如何快速求解这两个函数呢？</p>
<p>按照老套路，我们可以用$f(n,k/x)\;or\;g(n,k/x)$减去这其中不可行的得到</p>
<p>那么就有：</p>
<script type="math/tex; mode=display">
\begin{align*}
f(n,k)&=\sum_{i=1}^n[i\perp k][\frac ni]\\
&=\sum_{i=1}^n[i\perp \frac kx][\frac ni]-\sum_{i=1}^n[i\perp \frac kx][\frac ni][x|i]\\
&=f(n,k/x)-\sum_{d=1}^{[\frac nx]}[dx\perp\frac kx][\frac n{dx}][x|kx]\\
&=f(n,k/x)-\sum_{d=1}^{[\frac nx]}[dx\perp\frac kx][\frac n{dx}]\\
&=f(n,k/x)-[x\perp \frac kx]\sum_{d=1}^{[\frac nx]}[d\perp\frac kx][\frac n{dx}]\\
&=f(n,k/x)-f([\frac nx],k/x)
\end{align*}</script><p>那么还有：</p>
<script type="math/tex; mode=display">
\begin{align*}
g(n,k)&=\sum_{i=1}^n\mu(i)[i\perp k]
\\&=\sum_{i=1}^n\mu(i)[i\perp \frac kx]-\sum_{i=1}^n\mu(i)[i\perp\frac kx][x|i]
\\&=g(n,k/x)-\sum_{d=1}^{[\frac nx]}\mu(dx)[dx\perp\frac kx][x|dx]
\\&=g(n, k/x)-\sum_{d=1}^{[\frac nx]}\mu(d)\mu(x)[d\perp x][dx\perp \frac kx][x|dx]
\\&=g(n,k/x)-\mu(x)[x\perp\frac kx]\sum_{d=1}^{[\frac nx]}\mu(d)[d\perp x][d\perp\frac kx]
\\&=g(n,k/x)-\mu(x)[x\perp\frac kx]\sum_{d=1}^{[\frac nx]}\mu(d)[d\perp (x*\frac kx)]
\\&=g(n,k/x)+\sum_{d=1}^{[\frac nx]}\mu(d)[d\perp k]
\\&=g(n,k/x)+g([\frac nx],k)
\end{align*}</script><p>根据上文，我们知道所有的$k$都一定是我平方因字数，所以这个结论很好得到</p>
<p>即：</p>
<script type="math/tex; mode=display">
\begin{align*}
f(n,k)&=f(n,k/x)-f(\lfloor\frac nx\rfloor,k/x)\\
g(n,k)&=g(n,k/x)+g(\lfloor\frac nx\rfloor,k)
\end{align*}</script><p>现在，最后的问题就是关于这两个函数的边界的问题了</p>
<script type="math/tex; mode=display">
\begin{align*}
g(n,1)&=\sum_{i=1}^n\mu(i)\qquad\text{这个可以直接前缀和预处理}
\\f(n,1)&=\sum_{i=1}^n[\frac ni]\qquad\,\text{这个用数论分块吗？}
\end{align*}</script><p>下面有一个非常巧妙的，线性求接的办法</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Prework</span><span class="params">(<span class="keyword">int</span> N)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	D[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!Ip[i]) P[++P[<span class="number">0</span>]] = i, D[i] = <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= P[<span class="number">0</span>] &amp;&amp; i * P[j] &lt;= N; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			Ip[i * P[j]] = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span> (i % P[j]) D[i * P[j]] = D[i] &lt;&lt; <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				D[i * P[j]] = (D[i] &lt;&lt; <span class="number">1</span>) - D[i / P[j]];</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) D[i] += D[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关于这个的证明我先鸽了，<del>不会</del></p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">2e5</span> + <span class="number">10</span>, Lim = <span class="number">2e5</span>, Mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">ll D[Maxn], F[Maxn][<span class="number">10</span>], G[Maxn][<span class="number">10</span>], S[Maxn], Ans;</span><br><span class="line"><span class="keyword">int</span> Prim[Maxn], Mu[Maxn], Lw[Maxn];</span><br><span class="line"><span class="keyword">bool</span> IP[Maxn];</span><br><span class="line"><span class="keyword">int</span> T, A, B, C;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">X</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">O</span><span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (O &lt; <span class="string">'0'</span> || O &gt; <span class="string">'9'</span>) O = getchar ();</span><br><span class="line">    <span class="keyword">for</span> (; O &gt;= <span class="string">'0'</span> &amp;&amp; O &lt;= <span class="string">'9'</span>; O = getchar ()) X = (X &lt;&lt; <span class="number">1</span>) + (X &lt;&lt; <span class="number">3</span>) + (O ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> X; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Prework</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Mu[<span class="number">1</span>] = D[<span class="number">1</span>] = Lw[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Lim; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!IP[i]) Prim[++Prim[<span class="number">0</span>]] = i, Mu[i] = <span class="number">-1</span>, D[i] = <span class="number">2</span>, Lw[i] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= Prim[<span class="number">0</span>] &amp;&amp; i * Prim[j] &lt;= Lim; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">int</span> New = i * Prim[j];</span><br><span class="line">            IP[New] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % Prim[j]) D[New] = D[i] &lt;&lt; <span class="number">1</span>, Lw[New] = Lw[i] * Prim[j], Mu[New] = -Mu[i];</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                D[New] = (D[i] &lt;&lt; <span class="number">1</span>) - D[i / Prim[j]];</span><br><span class="line">                Lw[New] = Lw[i];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Lim; ++i) D[i] += D[i - <span class="number">1</span>], Mu[i] += Mu[i - <span class="number">1</span>];</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r; l &lt;= A; l = r + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r = min(A / (A / l), B / (B / l));</span><br><span class="line">        G[r][<span class="number">1</span>] = Mu[r];</span><br><span class="line">        F[A / l][<span class="number">1</span>] = D[A / l];</span><br><span class="line">        F[B / l][<span class="number">1</span>] = D[B / l];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span> (S, <span class="number">0</span>, <span class="keyword">sizeof</span> S);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> z = <span class="number">1</span>; z &lt;= C; ++z) S[Lw[z]] += <span class="number">1l</span>l * C / z;</span><br><span class="line">    Ans = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">UpDate</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r; l &lt;= A; l = r + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r = min(A / (A / l), B / (B / l));</span><br><span class="line">        G[r][k] = G[r][k - <span class="number">1</span>] + G[r / x][k];</span><br><span class="line">        F[A / l][k] = F[A / l][k - <span class="number">1</span>] - F[(A / l) / x][k - <span class="number">1</span>];</span><br><span class="line">        F[B / l][k] = F[B / l][k - <span class="number">1</span>] - F[(B / l) / x][k - <span class="number">1</span>]; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//x就是上文中推公式用的x，k表示的是第k个素数，因为空间的问题，就写成这个鬼样子了</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> z, <span class="keyword">int</span> u, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">Tmp</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r; l &lt;= A; l = r + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r = min(A / (A / l), B / (B / l));</span><br><span class="line">        Tmp += (G[r][k] - G[l - <span class="number">1</span>][k]) * F[A / l][k] * F[B / l][k];</span><br><span class="line">        Tmp = (Tmp % Mod + Mod) % Mod;</span><br><span class="line">    &#125;</span><br><span class="line">    Ans = (Ans + S[z] * Tmp % Mod) % Mod;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> v = u; <span class="number">1l</span>l * Prim[v] * z &lt;= C; v++) UpDate(Prim[v], k + <span class="number">1</span>), DFS(z * Prim[v], v + <span class="number">1</span>, k + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T = Read();</span><br><span class="line">    Prework();</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        A = Read(), B = Read(), C = Read();</span><br><span class="line">        <span class="keyword">if</span> (A &gt; B) swap (A, B);</span><br><span class="line">        Init();</span><br><span class="line">        DFS (<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, Ans);</span><br><span class="line">    &#125;</span><br><span class="line">    system (<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>莫比乌斯反演</tag>
      </tags>
  </entry>
  <entry>
    <title>最长异或路径</title>
    <url>/2020/09/16/%E6%9C%80%E9%95%BF%E5%BC%82%E6%88%96%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<h1 id="The-XOR-longest-Path"><a href="#The-XOR-longest-Path" class="headerlink" title="The XOR-longest Path"></a><a href="https://ac.nowcoder.com/acm/problem/50349" target="_blank" rel="noopener">The XOR-longest Path</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给定一棵树, 让你求树上异或和最大的简单路径的异或和</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>想要异或和最大, 那么我们想要的显然是贪心, 那就是尽量让他们在二进制下不相同</p>
<p>这样考虑的话, 我们可以想到的是$01$字典树, 从高次项向低处贪心, 能保证最值</p>
<p>那么还有一个问题, 如何求一个简单路径的异或值?</p>
<p>我们又可以想到关于异或的优良性质:$x\otimes y\otimes x=y$</p>
<p>就是说, 可以随机找一个根, 求$root$到其他所有结点的链的路径异或和</p>
<p>如果我们要求的是$sum<em>{i,j}$, 那么它就可以十分简单的表示为$sum</em>{root,i}\otimes sum_{root,j}$</p>
<p>那么我们把所有的从根开始的路径插入到$01$字典树中, 暴力查询跟新答案就好惹</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">100000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> Tree[Maxn * <span class="number">31</span>][<span class="number">2</span>], Id;</span><br><span class="line"><span class="keyword">int</span> Xor[Maxn];</span><br><span class="line"><span class="keyword">int</span> N, U, V, C, Ans;</span><br><span class="line"><span class="keyword">int</span> Head[Maxn], Next[Maxn &lt;&lt; <span class="number">1</span>], Edge[Maxn &lt;&lt; <span class="number">1</span>], W[Maxn &lt;&lt; <span class="number">1</span>], Cur;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> U, <span class="keyword">int</span> V, <span class="keyword">int</span> C)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Next[++Cur] = Head[U];</span><br><span class="line">    Head[U] = Cur;</span><br><span class="line">    Edge[Cur] = V;</span><br><span class="line">    W[Cur] = C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> X, <span class="keyword">int</span> Rt = <span class="number">0</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span> &lt;&lt; <span class="number">30</span>; i; i &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> F = X &amp; i;</span><br><span class="line">        <span class="keyword">if</span> (!Tree[Rt][F]) Tree[Rt][F] = ++Id;</span><br><span class="line">        Rt = Tree[Rt][F];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> X, <span class="keyword">int</span> Rt = <span class="number">0</span>, <span class="keyword">int</span> Ans = <span class="number">0</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span> &lt;&lt; <span class="number">30</span>; i; i &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> F = X &amp; i;</span><br><span class="line">        <span class="keyword">if</span> (Tree[Rt][!F]) Ans += i, Rt = Tree[Rt][!F];</span><br><span class="line">        <span class="keyword">else</span> Rt = Tree[Rt][F];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> U, <span class="keyword">int</span> F)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = Head[U]; i; i = Next[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Edge[i] == F) <span class="keyword">continue</span>;</span><br><span class="line">        Xor[Edge[i]] = Xor[U] ^ W[i];</span><br><span class="line">        DFS(Edge[i], U);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> a &gt; b ? a : b;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;U, &amp;V, &amp;C);</span><br><span class="line">        AddEdge(U, V, C), AddEdge(V, U, C);</span><br><span class="line">    &#125;</span><br><span class="line">    DFS(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) Insert(Xor[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) Ans = max(Ans, Query(Xor[i]));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>字典树</tag>
      </tags>
  </entry>
  <entry>
    <title>Reviwe</title>
    <url>/2020/07/12/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="T1-生物实验"><a href="#T1-生物实验" class="headerlink" title="T1:生物实验"></a>T1:生物实验</h1><ul>
<li><p>你有$n$个瓶子,其中$m$瓶有毒,然后你有$k\left(k\geqslant m\right)$ 只老鼠</p>
</li>
<li><p>每次每个瓶子只会有一只老鼠吃它!</p>
</li>
<li><p>每次有老鼠死后瓶子会被标记,以后不会再有老鼠去吃它了</p>
</li>
<li><p>问期望多少次可以把所有有毒的瓶子全部找到</p>
<p>对于$100\%$的数据有$T \leqslant 1000, N \leqslant 500, M \leqslant 200, M\leqslant K \leqslant N$</p>
</li>
</ul>
<p><strong>输入</strong>:</p>
<p>第一行是一个$T$</p>
<p>接下来$T$行每行三个正整数: $n, m, k$</p>
<p><strong>输出:</strong></p>
<p>一共有$T$行</p>
<p>对于每一组数据输出一行答案</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解:"></a>题解:</h1><blockquote>
<p>$DP[i]$表示还剩下$i$瓶有毒的期望步数</p>
<p>那么这个可以构成一张$DAG$</p>
<p>因为$i$ 这个点只能与比$i$小的点建一条有向边</p>
<p>既然已经知道有一张$DAG$了, 那么就可以拓扑逆向跑一边就可以得出答案了</p>
<script type="math/tex; mode=display">
Dp[i] = \frac{\mathrm{C}_n^k}{\mathrm{C}_{n + i}^k}\times\left(Dp[i] + 1\right) + \sum\limits_{k=1}^i\frac{\mathrm{C}_n^{k-j}\cdot\mathrm{C}_m^j}{\mathrm{C}_{n+m}^k}\left(Dp[i-k] + 1\right)</script><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">const</span> <span class="keyword">int</span> <span class="title">Maxn</span><span class="params">(<span class="number">1e3</span> + <span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> T, N, M, K;<span class="comment">//N个瓶子, M瓶有毒, K只老鼠</span></span><br><span class="line"><span class="keyword">int</span> n, m, k;</span><br><span class="line"><span class="keyword">double</span> Dp[Maxn];<span class="comment">//死了i只老鼠的期望步数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> M, <span class="keyword">int</span> N)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">Ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; ++i) Ans *= <span class="keyword">double</span>(N--) / <span class="keyword">double</span>(M - i);</span><br><span class="line">    <span class="keyword">return</span> Ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> k)</span><span class="comment">//C(k, a)/C(k, b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">Ans</span><span class="params">(<span class="number">1.0</span>)</span></span>;</span><br><span class="line">    Ans = <span class="keyword">double</span> (C(k, a)) / <span class="keyword">double</span> (C(k, b));</span><br><span class="line">    <span class="keyword">return</span> Ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> j, <span class="keyword">int</span> k)</span><span class="comment">//C(k - j, a) * C(j, b) / C(k, c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">long</span> <span class="keyword">double</span> <span class="title">Ans</span><span class="params">(<span class="number">1.0</span>)</span></span>;</span><br><span class="line">    Ans = <span class="keyword">double</span> (C(k - j, a)) / <span class="keyword">double</span>(C(k, c)) * <span class="keyword">double</span>(C(j, b));</span><br><span class="line">    <span class="keyword">return</span> Ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d\n"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%d %d %d"</span>, &amp;N, &amp;M, &amp;K);</span><br><span class="line">        n = N - M;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= M; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            k = min(K - M + i, n + i);</span><br><span class="line">            <span class="keyword">double</span> P = C(n, n + i, k), Temp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; ++j) Temp += (Dp[i - j] + <span class="number">1.0</span>) * C(n, i, n + i, j, k);</span><br><span class="line">            Dp[i] = (Temp + P) / (<span class="number">1.0</span> - P);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%.2lf\n"</span>, Dp[M]);</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>李超线段树</title>
    <url>/2020/08/02/%E6%9D%8E%E8%B6%85%E7%BA%BF%E6%AE%B5%E6%A0%91/</url>
    <content><![CDATA[<h1 id="HEOI2013-Segment"><a href="#HEOI2013-Segment" class="headerlink" title="[HEOI2013]Segment"></a><a href="https://www.luogu.com.cn/problem/P4097" target="_blank" rel="noopener">[HEOI2013]Segment</a></h1><p>不厚道得借鉴一些$OI\;Wiki$的好东西</p>
<p>此题, 大概就是模板题了</p>
<p>其实, 如果按照常规思路, 想到的东西大概也是一样的</p>
<p>和线段树一样, 我们需要维护$X$轴上的信息</p>
<p>就是说, 我们只需要记录对于每一个$X$, 它对应的答案是啥</p>
<blockquote>
<p>对答案没有贡献的线段, 相当于就被丢弃了</p>
<p>所以此时的线段树中的值, 就是唯一的比较的对象了</p>
</blockquote>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h3 id="情况一"><a href="#情况一" class="headerlink" title="情况一:"></a>情况一:</h3><p>那么如果这个区间没有被覆盖, 可以直接标记为最值</p>
<h3 id="情况二"><a href="#情况二" class="headerlink" title="情况二:"></a>情况二:</h3><p>如果这个被覆盖了, 那么又要分三种情况</p>
<p>我们另绿色为新加入的点</p>
<h4 id="1-New-k-gt-T-X-k"><a href="#1-New-k-gt-T-X-k" class="headerlink" title="(1)$New.k&gt;T_X.k$"></a>(1)$New.k&gt;T_X.k$</h4><ul>
<li><strong>1.中值可以被更新</strong></li>
</ul>
<p><img src="./greater.png" alt=""></p>
<p>我们看见, 此时新的线段可以更新到$mid$的位置, 它也可以继续更新$mid+1$到$r$的位置, 但是$l$到$mid$的部分, 就不一定可以更新了, 但是我们可以看见, 它仍有一部分是可以更新的</p>
<ul>
<li><p><strong>2.中值无法更新</strong></p>
<p><img src="./greater2.png" alt=""></p>
</li>
</ul>
<p>那么对于这种情况, 我们就不需要更新$l$到$mid$的值了, 但是我们也有可能更新$mid+1$到$r$</p>
<h4 id="2-New-k-lt-T-X-k"><a href="#2-New-k-lt-T-X-k" class="headerlink" title="(2)$New.k&lt;T_X.k$"></a>(2)$New.k&lt;T_X.k$</h4><p><img src="./less.png" alt=""></p>
<p><img src="./less2.png" alt=""></p>
<p>同理分析即可</p>
<h4 id="3-斜率相等"><a href="#3-斜率相等" class="headerlink" title="(3)斜率相等"></a>(3)斜率相等</h4><p>显然是要截距大的啊, 是吧</p>
<h2 id="时间复杂度分析"><a href="#时间复杂度分析" class="headerlink" title="时间复杂度分析"></a>时间复杂度分析</h2><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><p>这个操作将长度为$n$的线段, 分成了$\log n$段去更新, 复杂度为$O(\log n)$</p>
<p>对于每一个$O(\log n)$的区间, 我们有花费$O(\log n)$的时间往下更新</p>
<p>故插入的时间复杂度大约为$O(\log^2n)$</p>
<h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>就得到包含$x$的所有区间的中值</p>
<p>那么这样的区间有多少呢?</p>
<blockquote>
<p>口胡开始了, 假设这个点为$P$, 他左边有$X$个节点, 那么右边就有$N-X-1$个节点, 那么左端点的个数就有$X$个, 右端点就有$N-X-1$个</p>
<p>乘法原理, 求和算期望, 就可以了</p>
</blockquote>
<p>!#%!$%!@:%&gt;!”$%!@#%!@$!”@&gt;%3!@#&gt;%#&gt;:&gt;”1”</p>
<p>$Fake$了啊</p>
<p>这棵树一共就才多少节点, 一共就只有多少层 ?</p>
<p>$\log n$?</p>
<p>差不多, $\log n$跑一次就可以出答案了</p>
<p>快乐水过了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">double</span> X, Y;</span><br><span class="line">bool Xf(1), Yf(1);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> X, Y, G;</span><br><span class="line">&#125;Points[Maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Solve</span><span class="params">(<span class="keyword">double</span> M)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    double x(0), y(0), Temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        Temp = <span class="built_in">sqrt</span>((X - Points[i].X) * (X - Points[i].X) + (Y - Points[i].Y) * (Y - Points[i].Y));</span><br><span class="line">        <span class="keyword">if</span> (!Temp) <span class="keyword">continue</span>;</span><br><span class="line">        x += Points[i].G / Temp * (Points[i].X - X);</span><br><span class="line">        y += Points[i].G / Temp * (Points[i].Y - Y);</span><br><span class="line">    &#125;</span><br><span class="line">    Temp = <span class="built_in">sqrt</span>(x * x + y * y);</span><br><span class="line">    Y += M / Temp * y;</span><br><span class="line">    X += M / Temp * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%d %d %d"</span>, &amp;Points[i].X, &amp;Points[i].Y, &amp;Points[i].G);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> M = <span class="number">10000</span>, tx, ty;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tx = X, ty = Y;</span><br><span class="line">        Solve(M);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(tx - X) &lt; <span class="number">0.00001</span> &amp;&amp; <span class="built_in">abs</span>(ty - Y) &lt; <span class="number">0.00001</span>) <span class="keyword">break</span>;</span><br><span class="line">        M *= <span class="number">0.9</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%.3lf %.3lf\n"</span>, X, Y);</span><br><span class="line">    system (<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>数据结构</tag>
        <tag>学习笔记</tag>
        <tag>李超线段树</tag>
      </tags>
  </entry>
  <entry>
    <title>杜教筛</title>
    <url>/2020/08/19/%E6%9D%9C%E6%95%99%E7%AD%9B/</url>
    <content><![CDATA[<h1 id="杜教筛"><a href="#杜教筛" class="headerlink" title="杜教筛"></a>杜教筛</h1><p>简单的说是用来求数论函数的前缀和，时间复杂度低于线性时间复杂度</p>
<p>如求：$S(n)=\sum_{i=1}^nf(i)$</p>
<p>常规思路，构造类似数论分块的玩意儿$S(\lfloor\frac ni\rfloor)$，就这个</p>
<p>先构造函数$g$，考虑用迪利克雷卷积先乱搞一下</p>
<script type="math/tex; mode=display">
\begin{align*}
\sum_{i=1}^n\sum_{d|n}g(d)f(\frac id)&=\sum_{i=1}g(i)S(\lfloor\frac ni\rfloor)\\
&=\sum_{i=1}^ng(i)\sum_{j=1}^{\lfloor\frac ni\rfloor}f(j)\\
&=\sum_{i=1}^n\sum_{j=1}^{\lfloor\frac ni\rfloor\\}g(i)f(j) \\
\text{令:  i * j = d}\\
&=\sum_{d=1}^n\sum_{i|d}^ng(i)f(\frac di)\qquad\text{证毕!!}
\\\Leftrightarrow\sum_{i=1}^n(f*g)(i)&=\sum_{i=1}g(i)S(\lfloor\frac ni\rfloor)\\
\end{align*}</script><p>那么就可以有：</p>
<script type="math/tex; mode=display">
g(1)S(n)=\sum(f*g)(i)-\sum_{i=2}^ng(i)S(\lfloor\frac ni\rfloor)</script><p>嗯嗯，这个就可以数论分块乱搞了</p>
<p>来，看个实例</p>
<h1 id="P4213-【模板】杜教筛（Sum"><a href="#P4213-【模板】杜教筛（Sum" class="headerlink" title="P4213 【模板】杜教筛（Sum)"></a><a href="https://www.luogu.com.cn/problem/P4213" target="_blank" rel="noopener">P4213 【模板】杜教筛（Sum)</a></h1><p>求</p>
<script type="math/tex; mode=display">
S_1 = \sum_{i=1}^n\varphi(i)\\
S_2 = \sum_{i=1}^n\mu(i)</script><p>先来看看第一问：</p>
<p>首先，我们知道$\mu*1=id$，这个应该是很好证明的，<del>反正我不会</del></p>
<script type="math/tex; mode=display">
\sum_{i=1}^n\sum_{d|i}\varphi(d)=\sum_{i=1}^nS_1(\lfloor\frac ni\rfloor)\\
\begin{align*}
\therefore S_1&=\sum_{i=1}^n(\varphi*1)(i)-\sum_{i=2}^nS(\lfloor\frac ni\rfloor)\\
&=\sum_{i=1}^ni-\sum_{i=2}^nS(\lfloor\frac ni\rfloor)
\end{align*}</script><p>来，再看看第二问：</p>
<script type="math/tex; mode=display">
\sum_{i=1}^n\sum_{d|i}\mu(d)=\sum S_2(\lfloor\frac ni\rfloor)\\
\begin{align*}
\therefore S_2&=\sum_{i=1}^n(\mu*1)(i)-\sum_{i=2}^nS(\lfloor\frac ni\rfloor)\\
&=\sum_{i=1}^n\epsilon(i)-\sum_{i=2}^nS(\lfloor\frac ni\rfloor)\\
&=1-\sum_{i=2}^nS(\lfloor\frac ni\rfloor)
\end{align*}</script><p>这个推出来了，问题就变得十分的简单了</p>
<p>但是我们又发现了一个更大的问题：数组开不下</p>
<p>怎么办？</p>
<p>我们发现问题是离散的，并不是连续的</p>
<p>那么我们就可以用$map$之类的好工具</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="built_in">unordered_map</span> &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Mu;</span><br><span class="line"><span class="built_in">unordered_map</span> &lt;<span class="keyword">int</span>, ll&gt; Phi;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">5e6</span>;</span><br><span class="line"><span class="keyword">int</span> T, A, B;</span><br><span class="line"><span class="keyword">int</span> P[Maxn + <span class="number">10</span>], Cnt;</span><br><span class="line"><span class="keyword">int</span> mu[Maxn + <span class="number">10</span>];</span><br><span class="line">ll phi[Maxn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> Vis[Maxn + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>] = phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Maxn; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!Vis[i]) P[++Cnt] = i, mu[i] = <span class="number">-1</span>, phi[i] = i - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= Cnt &amp;&amp; i * P[j] &lt;= Maxn; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            Vis[i * P[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % P[j]) mu[i * P[j]] = -mu[i], phi[i * P[j]] = phi[i] * phi[P[j]];</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                phi[i * P[j]] = phi[i] * P[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Maxn; ++i) mu[i] += mu[i - <span class="number">1</span>], phi[i] += phi[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">PPhi</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= Maxn) <span class="keyword">return</span> phi[x];</span><br><span class="line">    <span class="keyword">if</span> (Phi[x]) <span class="keyword">return</span> Phi[x];</span><br><span class="line">    ll Ans = <span class="number">1l</span>l * x * (x + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll l(<span class="number">2</span>), r; l &lt;= x; l = r + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r = x / (x / l);</span><br><span class="line">        Ans -= (r - l + <span class="number">1</span>) * PPhi(x / l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Phi[x] = Ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">MMu</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= Maxn) <span class="keyword">return</span> mu[x];</span><br><span class="line">    <span class="keyword">if</span> (Mu[x]) <span class="keyword">return</span> Mu[x];</span><br><span class="line">    <span class="function">ll <span class="title">Ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (ll l(<span class="number">2</span>), r; l &lt;= x; l = r + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r = x / (x / l);</span><br><span class="line">        Ans -= (r - l + <span class="number">1</span>) * MMu(x / l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Mu[x] = Ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;A);</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%lld %d\n"</span>, PPhi(A), MMu(A));</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>前缀和</tag>
        <tag>学习笔记</tag>
        <tag>数学</tag>
        <tag>杜教筛</tag>
      </tags>
  </entry>
  <entry>
    <title>树状数组</title>
    <url>/2020/09/22/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h1 id="一维树状数组"><a href="#一维树状数组" class="headerlink" title="一维树状数组"></a>一维树状数组</h1><p>这是一个单次修改、查询都为$O(\log n)$的数据结构，空间复杂度为 $O(n)$</p>
<p>当然有时候还是会用一些辅助数组的</p>
<h2 id="树状数组-1-：单点修改，区间查询"><a href="#树状数组-1-：单点修改，区间查询" class="headerlink" title="树状数组 1 ：单点修改，区间查询"></a><a href="https://loj.ac/problem/130" target="_blank" rel="noopener">树状数组 1 ：单点修改，区间查询</a></h2><p>有这样一个区间查询，首先想到的就是用左右端点的前缀和做差去维护</p>
<p>那么对于裸的前缀和，一次修改操作的时间复杂度为$O(n)$</p>
<p>所以想到用数据结构乱搞一下</p>
<p>那么就是用树状数组去维护，具体就不细说了，直接上代码</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; -x)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read()</span><br><span class="line">&#123;</span><br><span class="line">    ll x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll n, m;</span><br><span class="line">ll t[maxn], d[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">(ll x, ll val)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">temp</span><span class="params">(x)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (x &lt;= n) &#123;</span><br><span class="line">        t[x] += val;</span><br><span class="line">        d[x] += val * temp;</span><br><span class="line">        x += lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(ll x)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans(0), temp(x);</span><br><span class="line">    <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        ans += t[x] * (temp + <span class="number">1</span>) - d[x];</span><br><span class="line">        x ^= lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), m = __read();</span><br><span class="line">    ll last = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        ll x = __read();</span><br><span class="line">        Update(i, x - last);</span><br><span class="line">        last = x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        ll opt = __read(), l = __read(), r = __read();</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            ll k = __read();</span><br><span class="line">            Update(l, k);</span><br><span class="line">            Update(r + <span class="number">1</span>, -k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, Query(r) - Query(l - <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="树状数组-2-：区间修改，单点查询"><a href="#树状数组-2-：区间修改，单点查询" class="headerlink" title="树状数组 2 ：区间修改，单点查询"></a><a href="https://loj.ac/problem/131" target="_blank" rel="noopener">树状数组 2 ：区间修改，单点查询</a></h2><p>考虑维护一个差分序列</p>
<p>那么这个数的差分序列的前缀和就是这个数</p>
<p>如果对区间$[l,r]$整体修改，即$a[l]-a[l-1]$与$a[r+1]-a[r]$的值发生了改变</p>
<p>即我们只需要去修改$cf[l]$和$cf[r+1]$的权值</p>
<h2 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; -x)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read() &#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span><span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>)</span><br><span class="line">            t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">ll t[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> x, ll val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (x &lt;= n) &#123;</span><br><span class="line">        t[x] += val;</span><br><span class="line">        x += lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        ans += t[x];</span><br><span class="line">        x ^= lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = __read(), m = __read();</span><br><span class="line">    <span class="keyword">int</span> last = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = __read();</span><br><span class="line">        Update(i, x - last);</span><br><span class="line">        last = x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        <span class="keyword">int</span> opt = __read(), l = __read();</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> r = __read(), k = __read();</span><br><span class="line">            Update(l, k);</span><br><span class="line">            Update(r + <span class="number">1</span>, -k);</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, Query(l));</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="树状数组-3-：区间修改，区间查询"><a href="#树状数组-3-：区间修改，区间查询" class="headerlink" title="树状数组 3 ：区间修改，区间查询"></a><a href="https://loj.ac/problem/132" target="_blank" rel="noopener">树状数组 3 ：区间修改，区间查询</a></h2><p>按照上一个操作的思想，现在得到了差分序列${cf}$</p>
<p>此时要求的是区间$[l,r]$的和</p>
<p>按照差分的写法，就应该是</p>
<script type="math/tex; mode=display">
ans=  \sum_{i=l}^r\sum_{j=1}^icf[j]</script><p>为了方便考虑，那么就可以用$r$的前缀和前去$l-1$的前缀和</p>
<p>那么考虑求$[1,r]$的和</p>
<script type="math/tex; mode=display">
\begin{align*}
 ans&=\sum_{i=1}^r\sum_{j=1}^icf[j]\\
 &=\sum_{i=1}^r(r-i+1)cf[i]\\
 &=(r+1)\sum_{i=1}^rcf[i]-\sum_{i=1}^ri\cdot cf[i]
 \end{align*}</script><p>我们发现，这个似乎变成了两个需要维护的序列，那就写两个呗</p>
<h2 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; -x)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ll __read()</span><br><span class="line">&#123;</span><br><span class="line">    ll x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll n, m;</span><br><span class="line">ll t[maxn], d[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">(ll x, ll val)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">temp</span><span class="params">(x)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (x &lt;= n) &#123;</span><br><span class="line">        t[x] += val;</span><br><span class="line">        d[x] += val * temp;</span><br><span class="line">        x += lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(ll x)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans(0), temp(x);</span><br><span class="line">    <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        ans += t[x] * (temp + <span class="number">1</span>) - d[x];</span><br><span class="line">        x ^= lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), m = __read();</span><br><span class="line">    ll last = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        ll x = __read();</span><br><span class="line">        Update(i, x - last);</span><br><span class="line">        last = x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        ll opt = __read(), l = __read(), r = __read();</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            ll k = __read();</span><br><span class="line">            Update(l, k);</span><br><span class="line">            Update(r + <span class="number">1</span>, -k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, Query(r) - Query(l - <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="二维树状数组"><a href="#二维树状数组" class="headerlink" title="二维树状数组"></a>二维树状数组</h1><p>这个和一维树状数组的思路大致相同，但是每次修改、查询的复杂度都是$O(\log_2n\times\log_2m)$</p>
<h2 id="二维树状数组-1：单点修改，区间查询"><a href="#二维树状数组-1：单点修改，区间查询" class="headerlink" title=" 二维树状数组 1：单点修改，区间查询"></a><a href="https://loj.ac/problem/133" target="_blank" rel="noopener"> 二维树状数组 1：单点修改，区间查询</a></h2><p>直接维护二维前缀和，简单容斥一下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; -x)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, opt;</span><br><span class="line">ll t[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x; i &lt;= n; i += lowbit(i))</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = y; j &lt;= m; j += lowbit(j))</span><br><span class="line">            t[i][j] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x; i; i ^= lowbit(i))</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = y; j; j ^= lowbit(j))</span><br><span class="line">            ans += t[i][j];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), m = __read();</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;opt)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> a = __read(), b = __read(), x = __read();</span><br><span class="line">            Update(a, b, x);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> a = __read(), b = __read(), c = __read(), d = __read();</span><br><span class="line">            <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, Query(c, d) + Query(a - <span class="number">1</span>, b - <span class="number">1</span>) - Query(a - <span class="number">1</span>, d) - Query(c, b - <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="二维树状数组-2：区间修改，单点查询"><a href="#二维树状数组-2：区间修改，单点查询" class="headerlink" title="二维树状数组 2：区间修改，单点查询"></a><a href="https://loj.ac/problem/134" target="_blank" rel="noopener">二维树状数组 2：区间修改，单点查询</a></h2><p>简单地说，维护二维差分序列可以做到区间修改，直接二维前缀和就是一个单点查询</p>
<p>考虑如何去构造差分序列</p>
<p>对于每一维，可以有$cf[i][j]=a[i][j]-a[i][j-1]$或$cf[i][j]=a[i][j]-a[i-1][j]$</p>
<p>确实，这个可以把两维分开，看成$n$个一维的，但是下面还有区间修改区间查询的</p>
<p>所以这里要说的显然不是一维的做法</p>
<p>考虑合并行和列的差分序列后，与二维前缀和的关系</p>
<p>容易发现：</p>
<script type="math/tex; mode=display">
\begin{align*}
a[x][y]&=\sum_{i=1}^x\sum_{j=1}^ycf[i][j]\\
a[x-1][y]&=\sum_{i=1}^{x-1}\sum_{j=1}^ycf[i][j]\\
a[x][y-1]&=\sum_{i=1}^x\sum_{j=1}^{y-1}cf[i][j]\\
a[x-1][y-1]&=\sum_{i=1}^{x-1}\sum_{j=1}^{y-1}cf[i][j]
\end{align*}</script><p>那么就可以轻松的得到$cf[x][y]=a[x][y]-a[x-1][y]-a[x][y-1]+a[x-1][y-1]$了</p>
<p>就是说现在已经构造出了二维前缀和等于该点原本的值的差分序列了</p>
<p>考虑如何区间修改呢</p>
<p>这得画图</p>
<p><a href="https://imgchr.com/i/wXbyct" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/09/23/wXbyct.png" alt="wXbyct.png" border="0" /></a></p>
<p>那么蓝色矩形就是需要修改的矩形，按照差分数组的定义，差分序列发生改变了的点就是图中四个绿色的小矩形，就可以直接改了</p>
<h2 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; -x)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, opt;</span><br><span class="line">ll t[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x; i &lt;= n; i += lowbit(i))</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = y; j &lt;= m; j += lowbit(j))</span><br><span class="line">            t[i][j] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x; i; i ^= lowbit(i))</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = y; j; j ^= lowbit(j))</span><br><span class="line">            ans += t[i][j];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), m = __read();</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;opt)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> a = __read(), b = __read(), c = __read(), d = __read(), x = __read();</span><br><span class="line">            Update(a, b, x);</span><br><span class="line">            Update(a, d + <span class="number">1</span>, -x);</span><br><span class="line">            Update(c + <span class="number">1</span>, b, -x);</span><br><span class="line">            Update(c + <span class="number">1</span>, d + <span class="number">1</span>, x);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> a = __read(), b = __read();</span><br><span class="line">            <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, Query(a, b));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="二维树状数组-3：区间修改，区间查询"><a href="#二维树状数组-3：区间修改，区间查询" class="headerlink" title="二维树状数组 3：区间修改，区间查询"></a><a href="https://loj.ac/problem/135" target="_blank" rel="noopener">二维树状数组 3：区间修改，区间查询</a></h2><p>这个就是继承了<strong>二维树状数组2</strong>和<strong>树状数组3</strong>的思想了</p>
<p>现在得到了二维差分序列，需要求的确实这样一个东西</p>
<script type="math/tex; mode=display">
ans=\sum_{x=xl}^{xr}\sum_{y=yl}^{yr}\sum_{i=1}^x\sum_{j=1}^ycf[i][j]</script><p>丑死了。。。</p>
<p>还是直接考虑简单容斥，那就只剩下一个二维前缀和了</p>
<script type="math/tex; mode=display">
\begin{align*}
ans&=\sum_{x=1}^{xr}\sum_{y=1}^{yr}\sum_{i=1}^x\sum_{j=1}^ycf[i][j]\\
&=\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]*(x-i+1)*(y-j+1)\\
&=\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]*(xy-xj+x-iy+ij-i+y-j+1)\\
&=\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]*((xy+x+y+1)-(xj-j)-(iy-i)+ij)\\
&=\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]*\big((x+1)(y+1)-(x+1)j-(y+1)i+ij\big)\\
&=\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]*(x+y)(y+1)-\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]*(x+1)*j-\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]*(y+1)*i+\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]*ij\\
&=(x+y)(y+1)\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]-(x+1)\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]*j-(y+1)\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]*i+\sum_{i=1}^{xr}\sum_{j=1}^{yr}cf[i][j]*ij\\
\end{align*}</script><p>所以分别要维护的就是$cf[i][j], cf[i][j]<em>j, cf[i][j]</em>i, cf[i][j]*ij$四个数组了</p>
<p>嗯~ o(<em>￣▽￣</em>)o，就可以愉快的跑路走人了</p>
<h2 id="Code-4"><a href="#Code-4" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; -x)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, opt;</span><br><span class="line">ll t[<span class="number">4</span>][maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x; i &lt;= n; i += lowbit(i))</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = y; j &lt;= m; j += lowbit(j)) &#123;</span><br><span class="line">            t[<span class="number">0</span>][i][j] += val;</span><br><span class="line">            t[<span class="number">1</span>][i][j] += val * y;</span><br><span class="line">            t[<span class="number">2</span>][i][j] += val * x;</span><br><span class="line">            t[<span class="number">3</span>][i][j] += val * x * y;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x; i; i ^= lowbit(i))</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = y; j; j ^= lowbit(j))</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k(<span class="number">0</span>); k &lt; <span class="number">4</span>; ++k) </span><br><span class="line">                ans[k] += t[k][i][j];</span><br><span class="line">    <span class="keyword">return</span> (x + <span class="number">1</span>) * (y + <span class="number">1</span>) * ans[<span class="number">0</span>] - (x + <span class="number">1</span>) * ans[<span class="number">1</span>] - (y + <span class="number">1</span>) * ans[<span class="number">2</span>] + ans[<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), m = __read();</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span> (<span class="string">"%d"</span>, &amp;opt)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> a = __read(), b = __read(), c = __read(), d = __read(), x = __read();</span><br><span class="line">            Update(a, b, x);</span><br><span class="line">            Update(a, d + <span class="number">1</span>, -x);</span><br><span class="line">            Update(c + <span class="number">1</span>, b, -x);</span><br><span class="line">            Update(c + <span class="number">1</span>, d + <span class="number">1</span>, x);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> a = __read(), b = __read(), c = __read(), d = __read();</span><br><span class="line">            <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, Query(c, d) - Query(a - <span class="number">1</span>, d) - Query(c, b - <span class="number">1</span>) + Query(a - <span class="number">1</span>, b - <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>模板</title>
    <url>/2020/06/24/%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1> <video id="video" controls="" preload="none" poster="http://media.w3.org/2010/05/sintel/poster.png">
      <source id="mp4" src="http://media.w3.org/2010/05/sintel/trailer.mp4" type="video/mp4">
      <source id="webm" src="http://media.w3.org/2010/05/sintel/trailer.webm" type="video/webm">
      <source id="ogv" src="http://media.w3.org/2010/05/sintel/trailer.ogv" type="video/ogg">
      <p>Your user agent does not support the HTML5 Video element.</p>
    </video>


<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"video"</span> <span class="attr">controls</span>=<span class="string">""</span> <span class="attr">preload</span>=<span class="string">"none"</span> <span class="attr">poster</span>=<span class="string">"http://media.w3.org/2010/05/sintel/poster.png"</span>&gt;</span>//poster是封面</span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">"mp4"</span> <span class="attr">src</span>=<span class="string">"http://media.w3.org/2010/05/sintel/trailer.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span>//id为支持的视频的格式</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Your user agent does not support the HTML5 Video element.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>就可以了</p>
<h1 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1374056689&auto=0&height=66"></iframe>

<p><img src="music.png" alt=""></p>
<p><img src="music2.png" alt=""></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=1374056689&amp;auto=0&amp;height=66"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="哔哩哔哩"><a href="#哔哩哔哩" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h1><iframe class="bilibili"src="//player.bilibili.com/player.html?aid=73773499&cid=146795963&page=1&high_quality=1&danmaku=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width: 100%; height: 500px; max-width: 100%；align:center; padding:20px 0;"> </iframe>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">"bilibili"</span> <span class="attr">src</span>=<span class="string">"//player.bilibili.com/player.html?aid=73773499&amp;cid=146795963&amp;page=1&amp;high_quality=1&amp;danmaku=1"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">framespacing</span>=<span class="string">"0"</span> <span class="attr">allowfullscreen</span>=<span class="string">"true"</span> <span class="attr">style</span>=<span class="string">"width: 100%; height: 500px; max-width: 100%；align:center; padding:20px 0;"</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>该地址应该就可以了?</p>
<h1 id="pdf"><a href="#pdf" class="headerlink" title="pdf"></a>pdf</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-pdf --save</span><br></pre></td></tr></table></figure>


	<div class="row">
    <embed src="Problem.pdf" width="100%" height="550" type="application/pdf">
	</div>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;%pdf Problem.pdf%&#125;</span><br></pre></td></tr></table></figure>
<p>pdf 后面是跟的相对路径</p>
<hr>
<h1 id="文章内容折叠"><a href="#文章内容折叠" class="headerlink" title="文章内容折叠"></a>文章内容折叠</h1><h2 id="hexo-sliding-spoiler插件"><a href="#hexo-sliding-spoiler插件" class="headerlink" title="hexo-sliding-spoiler插件"></a>hexo-sliding-spoiler插件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-sliding-spoiler --save</span><br></pre></td></tr></table></figure>
<h2 id="自定义设置"><a href="#自定义设置" class="headerlink" title="自定义设置"></a>自定义设置</h2><p><strong>1.</strong>默认是 <code>Show: .../ Hide: ...</code>，我们可以更改前面的字。</p>
<p><strong>2.</strong>打开文件<code>F:\OI\Blog\hexo\node_modules\_hexo-sliding-spoiler@1.2.1@hexo-sliding-spoiler\assets\spoiler.css</code>，大概25-31行？修改其中的<code>content</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.spoiler</span><span class="selector-class">.collapsed</span> <span class="selector-class">.spoiler-title</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"Show: "</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.spoiler</span><span class="selector-class">.expanded</span> <span class="selector-class">.spoiler-title</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"Hide: "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% spoiler "隐藏内容的标题" %&#125;</span><br><span class="line"></span><br><span class="line">隐藏文字隐藏文字隐藏文字。  </span><br><span class="line">支持 <span class="code">`markdown`</span> 语法</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>支持 <span class="strong">**粗体**</span>、<span class="emphasis">*斜体*</span></span><br><span class="line"><span class="bullet">- </span>支持列表</span><br><span class="line"><span class="bullet">- </span>支持md插入图片语法</span><br><span class="line"><span class="bullet">- </span>支持html插入图片语法</span><br><span class="line"><span class="bullet">- </span>支持行内代码 <span class="code">`markdown`</span></span><br><span class="line"><span class="bullet">- </span>支持代码块</span><br><span class="line">  </span><br><span class="line"><span class="code">    ```cpp</span></span><br><span class="line"><span class="code">    #include &lt;initializer_list&gt;</span></span><br><span class="line"><span class="code">    #include &lt;iostream&gt;</span></span><br><span class="line"><span class="code">    struct A &#123;</span></span><br><span class="line"><span class="code">        A() &#123; std::cout &lt;&lt; "1"; &#125;</span></span><br><span class="line"><span class="code">        A(int) &#123; std::cout &lt;&lt; "2"; &#125;</span></span><br><span class="line"><span class="code">        A(std::initializer_list&lt;int&gt;) &#123; std::cout &lt;&lt; "3"; &#125;</span></span><br><span class="line"><span class="code">    &#125;;</span></span><br><span class="line"><span class="code">    int main(int argc, char *argv[]) &#123;</span></span><br><span class="line"><span class="code">        A a1;</span></span><br><span class="line"><span class="code">        A a2&#123;&#125;;</span></span><br><span class="line"><span class="code">        A a3&#123; 1 &#125;;</span></span><br><span class="line"><span class="code">        A a4&#123; 1, 2 &#125;;</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">    ```// 此处加点文字，防止排版错误：因为这是代码块内的代码。使用时可删除</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>支持表格</span><br><span class="line"></span><br><span class="line"><span class="code">    | 文字 | 文字 |</span></span><br><span class="line"><span class="code">    | ----------- | ----------- |</span></span><br><span class="line"><span class="code">    | 文字 | 文字 |</span></span><br><span class="line"></span><br><span class="line">&#123;% endspoiler %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        隐藏内容的标题
    </div>
    <div class='spoiler-content'>
        <p>隐藏文字隐藏文字隐藏文字。<br>支持 <code>markdown</code> 语法</p>
<ul>
<li><p>支持 <strong>粗体</strong>、<em>斜体</em></p>
</li>
<li><p>支持列表</p>
</li>
<li><p>支持md插入图片语法</p>
</li>
<li><p>支持html插入图片语法</p>
</li>
<li><p>支持行内代码 <code>markdown</code></p>
</li>
<li><p>支持代码块</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;initializer_list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span> &#123;</span></span><br><span class="line">    A() &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"1"</span>; &#125;</span><br><span class="line">    A(<span class="keyword">int</span>) &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"2"</span>; &#125;</span><br><span class="line">    A(<span class="built_in">std</span>::<span class="built_in">initializer_list</span>&lt;<span class="keyword">int</span>&gt;) &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"3"</span>; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    A a1;</span><br><span class="line">    A a2&#123;&#125;;</span><br><span class="line">    A a3&#123; <span class="number">1</span> &#125;;</span><br><span class="line">    A a4&#123; <span class="number">1</span>, <span class="number">2</span> &#125;;</span><br><span class="line">&#125;</span><br><span class="line">​```<span class="comment">// 此处加点文字，防止排版错误：因为这是代码块内的代码。使用时可删除</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>支持表格</p>
<p>  | 文字 | 文字 |<br>  | —— | —— |<br>  | 文字 | 文字 |</p>
<p>  事实证明不支持表格？</p>
</li>
</ul>

    </div>
</div>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>其他板子</tag>
      </tags>
  </entry>
  <entry>
    <title>生成函数</title>
    <url>/2020/09/06/%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="b624b98457a3c8cdbb09d7c15c4b07b2844858aaa1e1ee40dcce2cc4ae0a2ec1"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>学习笔记</tag>
        <tag>鸽~</tag>
        <tag>生成函数</tag>
      </tags>
  </entry>
  <entry>
    <title>莫比乌斯反演</title>
    <url>/2020/06/14/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/</url>
    <content><![CDATA[<h3 id="P3911-最小公倍数之和"><a href="#P3911-最小公倍数之和" class="headerlink" title="P3911 最小公倍数之和"></a><a href="https://www.luogu.com.cn/problem/P3911" target="_blank" rel="noopener">P3911 最小公倍数之和</a></h3><script type="math/tex; mode=display">
求\sum\limits_{i=1}^n\sum\limits_{j=1}^n{lcm(a_i,a_j)}\\
\forall a_i \in \left[ 1, \;Maxn\right]</script><h4 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h4><script type="math/tex; mode=display">
\sum\limits_{i=1}^n\sum\limits_{j=1}^n{lcm(a_i,a_j)}\\
\Leftrightarrow\sum\limits_{i=1}^n\sum\limits_{j=1}^n{lcm(i,j)}\cdot c_i \cdot c_j\\
{PS： c_i,\; c_j分别别表示i，j出现的次数}</script><h5 id="化简："><a href="#化简：" class="headerlink" title="化简："></a>化简：</h5><script type="math/tex; mode=display">
\sum\limits_{i=1}^n\sum\limits_{j=1}^nlcm(i,\;j)\cdot i \cdot j\\
\Leftrightarrow\sum\limits_{i=1}^n\sum\limits_{j=1}^n\frac{i \cdot j \cdot c_i \cdot c_j}{\gcd(i,\;j)}\\
\Leftrightarrow\sum\limits_{d=1}^n\;d\;\sum\limits_{i=1}^\left[\frac{n}{d}\right]\sum\limits_{j=1}^\left[\frac{n}{d}\right]\left[ \gcd(i,\;j) = 1\right]\cdot i \cdot j \cdot c_{id} \cdot c_{jd} \\
\Leftrightarrow\sum\limits_{d=1}^n\;d\;\sum\limits_{i=1}^\left[\frac{n}{d}\right]\sum\limits_{j=1}^\left[\frac{n}{d}\right]\sum\limits_{k\mid \gcd (i,j)}\mu(k)\cdot i\cdot j\cdot c_{id}\cdot c_{jd}\\
\Leftrightarrow\sum\limits_{d=1}^n\sum\limits_{k=1}^\left[\frac{n}{d}\right]\;d\cdot \mu(k)\sum\limits_{i=1}^\left[\frac{n}{kd}\right]\sum\limits_{j=1}^\left[\frac{n}{kd}\right] i\cdot j\cdot c_{idk}\cdot c_{jdk}\cdot k^2\\
\Leftrightarrow\sum\limits_{T=1}^nT\cdot\;(\sum\limits_{i=1}^\left[ \frac{n}{T} \right]i\cdot c_{iT})^2 \cdot \sum\limits_{k \mid T}\mu(k) \cdot k</script><p>然后有：</p>
<script type="math/tex; mode=display">
\sum\limits_{k \mid T}\mu(k) \cdot k</script><p>这个可以预处理的</p>
<h5 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">5e4</span>;</span><br><span class="line">ll N, Temp, MaxNum, Ans;</span><br><span class="line">ll Cnt[Maxn + <span class="number">5</span>], Mu[Maxn + <span class="number">5</span>], Pri[Maxn + <span class="number">5</span>], S[Maxn + <span class="number">5</span>], Tot;</span><br><span class="line"><span class="keyword">bool</span> Vis[Maxn + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> Maxn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Maxn; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!Vis[i]) Pri[++Tot] = i, Mu[i] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= Tot &amp;&amp; i * Pri[j] &lt;= Maxn; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            Vis[i * Pri[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % Pri[j]) Mu[i * Pri[j]] = -Mu[i];</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                Mu[i * Pri[j]] = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Maxn; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;= Maxn; j += i) S[j] += Mu[i] * i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Max</span><span class="params">(ll &amp;X, ll Y)</span> </span>&#123;X = (X &gt; Y ? X : Y);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">while</span> (N--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;Temp);</span><br><span class="line">        Cnt[Temp]++;</span><br><span class="line">        Max(MaxNum, Temp);</span><br><span class="line">    &#125;</span><br><span class="line">    Init(MaxNum);</span><br><span class="line">    <span class="keyword">for</span> (ll T = <span class="number">1</span>; T &lt;= MaxNum; ++T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">ll <span class="title">Temp</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= MaxNum / T; ++i) Temp += i * Cnt[i * T];</span><br><span class="line">        Ans += T * Temp * Temp * S[T];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, Ans);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="Ps-双倍经验AT2500"><a href="#Ps-双倍经验AT2500" class="headerlink" title="Ps : 双倍经验AT2500"></a>Ps : 双倍经验<a href="https://www.luogu.com.cn/problem/AT5200" target="_blank" rel="noopener">AT2500</a></h5><p>只需要在这道题的基础上减去自己的贡献再乘上2的逆元，注意<strong>取模</strong>啊！！！</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ll Maxn = <span class="number">1e6</span>, Mod = <span class="number">998244353</span>;</span><br><span class="line">ll N, Temp, MaxNum, Ans, TempA;</span><br><span class="line">ll Cnt[Maxn + <span class="number">5</span>], Mu[Maxn + <span class="number">5</span>], Pri[Maxn + <span class="number">5</span>], S[Maxn + <span class="number">5</span>], Tot;</span><br><span class="line"><span class="keyword">bool</span> Vis[Maxn + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> Maxn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Maxn; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!Vis[i]) Pri[++Tot] = i, Mu[i] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= Tot &amp;&amp; i * Pri[j] &lt;= Maxn; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            Vis[i * Pri[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % Pri[j]) Mu[i * Pri[j]] = -Mu[i];</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                Mu[i * Pri[j]] = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Mu[i] &lt; <span class="number">0</span>) Mu[i] += Mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Maxn; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;= Maxn; j += i) S[j] = (S[j] + Mu[i] * i % Mod) % Mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Max</span><span class="params">(ll &amp;X, ll Y)</span> </span>&#123;X = (X &gt; Y ? X : Y);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Pow</span><span class="params">(ll Y, ll X = <span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">Ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (Y)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Y &amp; <span class="number">1</span>) Ans = Ans * X % Mod;</span><br><span class="line">        X = X * X % Mod;</span><br><span class="line">        Y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Ans % Mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">while</span> (N--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;Temp);</span><br><span class="line">        TempA = (TempA + Temp) % Mod;</span><br><span class="line">        Cnt[Temp]++;</span><br><span class="line">        Max(MaxNum, Temp);</span><br><span class="line">    &#125;</span><br><span class="line">    Init(MaxNum);</span><br><span class="line">    <span class="keyword">for</span> (ll T = <span class="number">1</span>; T &lt;= MaxNum; ++T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">ll <span class="title">Temp</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= MaxNum / T; ++i) Temp = (Temp + i * Cnt[i * T] % Mod) % Mod;</span><br><span class="line">        Ans = (Ans + T * Temp % Mod * Temp % Mod * S[T] % Mod) % Mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, (Ans - TempA + Mod) % Mod * Pow(Mod - <span class="number">2</span>) % Mod);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="P1447-NOI2010-能量采集"><a href="#P1447-NOI2010-能量采集" class="headerlink" title="P1447 [NOI2010]能量采集"></a><a href="https://www.luogu.com.cn/problem/1447" target="_blank" rel="noopener">P1447 [NOI2010]能量采集</a></h3><script type="math/tex; mode=display">
求\sum\limits_{i=1}^n\sum\limits_{j=1}^m\left[(2\cdot\gcd(i,j))-1\right]</script><h4 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h4><script type="math/tex; mode=display">
\sum\limits_{i=1}^n\sum\limits_{j=1}^m\left[(2\cdot\gcd(i,j))-1\right]\\\\
\Leftrightarrow\sum\limits_{i=1}^n\sum\limits_{j=1}^m 2 \cdot\gcd(i,j) - m\cdot n\\\\
\Leftrightarrow2\cdot\sum\limits_{d=1}^nd\;\cdot\sum\limits_{i=1}^\left[\frac{n}{d}\right]\sum\limits_{j=1}^\left[\frac{m}{d}\right]\left[\gcd(i,j)=1\right]-m\cdot n\\\\
\Leftrightarrow2\cdot\sum\limits_{d=1}^nd\;\cdot\sum\limits_{i=1}^\left[\frac{n}{d}\right]\sum\limits_{j=1}^\left[\frac{m}{d}\right]\sum\limits_{k\mid\gcd(i,j)}\mu(k)-m\cdot n\\\\
\Leftrightarrow2\cdot\sum\limits_{d=1}^nd\cdot\sum\limits_{k=1}^\left[\frac{n}{d}\right]\mu(k)\cdot\left[\frac{n}{dk}\right]\cdot\left[\frac{m}{dk}\right]-m\cdot n\\\\
\Leftrightarrow2\cdot\sum\limits_{T=1}^n\left[\frac{n}{T}\right]\cdot\left[\frac{m}{T}\right]\sum\limits_{d\mid T}^\left[\frac{n}{T}\right]d\cdot\mu(\frac{T}{d})-m\cdot n\\\\</script><h5 id="化简：-1"><a href="#化简：-1" class="headerlink" title="化简："></a>化简：</h5><script type="math/tex; mode=display">
令：h(n) = \sum\limits_{d\mid T}^\left[\frac{n}{T}\right]d\cdot\mu(\frac{T}{d})\\\\
h=id*\mu\\\\
\because \mu * 1=\epsilon\\\\
\therefore h*1=id* (\mu * 1)\\\\
\therefore h*1=id*\epsilon\\\\
\therefore h*1=id\\\\
又\because id = \varphi * 1\\\\
\therefore h = \varphi\\\\
即：2\cdot\sum\limits_{T=1}^n\left[\frac{n}{T}\right]\cdot\left[\frac{m}{T}\right]\sum\limits_{d\mid T}^\left[\frac{n}{T}\right]d\cdot\mu(\frac{T}{d})-m\cdot n\\\\
\Leftrightarrow2\cdot\sum\limits_{T=1}^n\varphi(T)\cdot\left[\frac{n}{T}\right]\cdot\left[\frac{m}{T}\right]-m\cdot n</script><h5 id="代码：-1"><a href="#代码：-1" class="headerlink" title="代码："></a>代码：</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">1e5</span>;</span><br><span class="line">ll N, M, Ans, Cnt;</span><br><span class="line">ll Phi[Maxn + <span class="number">10</span>], Pri[Maxn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> Vis[Maxn + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Maxn; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!Vis[i]) Phi[i] = i - <span class="number">1</span>, Pri[++Cnt] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= Cnt &amp;&amp; i * Pri[j] &lt;= Maxn; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            Vis[i * Pri[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % Pri[j]) Phi[i * Pri[j]] = Phi[i] * Phi[Pri[j]];</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                Phi[i * Pri[j]] = Phi[i] * Pri[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Maxn; ++i) Phi[i] += Phi[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>, &amp;N, &amp;M);</span><br><span class="line">    <span class="keyword">if</span> (N &gt; M) swap(N, M);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r; l &lt;= N; l = r + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r = min(N / (N / l), M / (M / l));</span><br><span class="line">        Ans += <span class="number">2</span> * (Phi[r] - Phi[l - <span class="number">1</span>]) * (N / l) * (M / l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>, Ans - N * M);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="P5221-Product"><a href="#P5221-Product" class="headerlink" title="P5221 Product"></a><a href="https://www.luogu.com.cn/problem/P5221" target="_blank" rel="noopener">P5221 Product</a></h3><script type="math/tex; mode=display">
求:\prod\limits_{i=1}^N\prod\limits_{j=1}^N\frac{lcm(i,j)}{\gcd(i,j)}(mod\;104857601)</script><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><script type="math/tex; mode=display">
\prod\limits_{i=1}^N\prod\limits_{j=1}^N\frac{\operatorname{lcm}(i,j)}{\gcd(i,j)}\\
\Leftrightarrow\prod\limits_{i=1}^N\prod\limits_{j=1}^N\frac{i\cdot j}{\gcd(i,j)^2}\\
\Leftrightarrow\prod\limits_{i=1}^N\prod\limits_{j=1}^Ni\cdot j\prod\limits_{i=1}^N\prod\limits_{j=1}^N\frac{1}{\gcd(i,j)^2}\\</script><h5 id="化简"><a href="#化简" class="headerlink" title="化简:"></a>化简:</h5><script type="math/tex; mode=display">
其中:\prod\limits_{i=1}^N\prod\limits_{j=1}^Ni\cdot j
\\=\prod\limits_{i=1}^N\left(i^N\cdot N!\right)\\
=\left(N!\right)^N\prod\limits_{i=1}^Ni^N\\
=\left(N!\right)^N\cdot\left(N!\right)^N\\
=\left(N!\right)^{2N}</script><script type="math/tex; mode=display">
其中还有:\prod\limits_{i=1}^N\prod\limits_{j=1}^N\frac{1}{\gcd(i,j)^2}\\
=\prod\limits_{d=1}^N\prod\limits_{i=1}^N\prod\limits_{j=1}^N\frac{1}{d^2\cdot\left[\gcd(i,j)=d\right]}\\
若:gcd(i,j)\ne d\;则整体贡献为1\\
=\left(\prod\limits_{d=1}^Nd^{\sum\limits_{i=1}^N\sum\limits_{j=1}^N\left[\gcd(i, j)=d\right]}\right)^{-2}\\
=\left(\prod\limits_{d=1}^Nd^{\sum\limits_{i=1}^\frac{N}{d}\sum\limits_{j=1}^\frac{N}{d}\left[\gcd(i, j)=1\right]}\right)^{-2}\\
令:sum(x) = \sum\limits_{i=1}^x\varphi(i)\\
=\left(\prod\limits_{d=1}^Nd^{2sum(\frac{N}{d}) - 1}\right)^{-2}\\
\therefore Ans = (N!)^{2N}\left(\prod\limits_{d=1}^Nd^{2sum(\frac{N}{d}) - 1}\right)^{-2}</script><h5 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn = <span class="number">1e6</span>, Mod = <span class="number">104857601</span>;</span><br><span class="line"><span class="keyword">int</span> N, Cnt, Phi[Maxn + <span class="number">5</span>], Fac(<span class="number">1</span>), Tmp(<span class="number">1</span>), Pri[Maxn/<span class="number">2</span>];</span><br><span class="line"><span class="keyword">bool</span> Vis[Maxn + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Pow</span><span class="params">(<span class="keyword">int</span> X, <span class="keyword">int</span> Y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Y %= (Mod - <span class="number">1</span>);</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (Y)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Y &amp; <span class="number">1</span>) Ans = <span class="number">1l</span>l * Ans * X % Mod;</span><br><span class="line">        X = <span class="number">1l</span>l * X * X % Mod;</span><br><span class="line">        Y &gt;&gt;= <span class="number">1</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Ans % Mod;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> Maxn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Maxn; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        Fac = <span class="number">1l</span>l * Fac * i % Mod;</span><br><span class="line">        <span class="keyword">if</span> (!Vis[i]) Pri[++Cnt] = i, Phi[i] = i - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= Cnt &amp;&amp; i * Pri[j] &lt;= Maxn; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            Vis[i * Pri[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % Pri[j]) Phi[i * Pri[j]] = Phi[i] * (Pri[j] - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                Phi[i * Pri[j]] = Phi[i] * Pri[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Maxn; ++i) Phi[i] = ( Phi[i - <span class="number">1</span>] + <span class="number">2l</span>l * Phi[i]) % (Mod - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Maxn; ++i) Tmp = <span class="number">1l</span>l * Tmp * Pow(i, Phi[Maxn / i] - <span class="number">1</span>) % Mod;</span><br><span class="line">    Fac = Pow(Fac, Maxn * <span class="number">2</span>);</span><br><span class="line">    Tmp = <span class="number">1l</span>l * Pow(<span class="number">1l</span>l * Tmp * Tmp % Mod, Mod - <span class="number">2</span>) * Fac % Mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    Init(N);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Tmp);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>莫比乌斯反演</tag>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>道路和航线</title>
    <url>/2020/09/15/%E9%81%93%E8%B7%AF%E5%92%8C%E8%88%AA%E7%BA%BF/</url>
    <content><![CDATA[<h1 id="道路和航线"><a href="#道路和航线" class="headerlink" title="道路和航线"></a><a href="https://ac.nowcoder.com/acm/problem/50381" target="_blank" rel="noopener">道路和航线</a></h1><p>本质就是一个最短路，有负边，题目保证无环</p>
<p>$SPFA$直接跑的正确性就不用证明了</p>
<p>这道题卡掉了朴素的$SPFA$，用双端队列优化即可？</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, P, R, S, cur, dis[maxn];</span><br><span class="line"><span class="keyword">int</span> hed[maxn], edg[maxn], nxt[maxn], cst[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++cur] = hed[u];</span><br><span class="line">    hed[u] = cur;</span><br><span class="line">    edg[cur] = v;</span><br><span class="line">    cst[cur] = w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">SPFA</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">deque</span> &lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    Q.push_front(S);</span><br><span class="line">    dis[S] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> now = Q.front();</span><br><span class="line">        Q.pop_front();</span><br><span class="line">        vis[now] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hed[now]; i; i = nxt[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dis[edg[i]] &lt;= cst[i] + dis[now]) <span class="keyword">continue</span>;</span><br><span class="line">            dis[edg[i]] = cst[i] + dis[now];</span><br><span class="line">            <span class="keyword">if</span> (vis[edg[i]]) <span class="keyword">continue</span>;</span><br><span class="line">            vis[edg[i]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (Q.empty() || dis[edg[i]] &lt;= dis[Q.front()]) Q.push_front(edg[i]);</span><br><span class="line">            <span class="keyword">else</span> Q.push_back(edg[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T = __read(), R = __read(), P = __read(), S = __read();</span><br><span class="line">    <span class="keyword">while</span> (R--) &#123;</span><br><span class="line">        <span class="keyword">int</span> a = __read(), b = __read(), c = __read();</span><br><span class="line">        AddEdge(a, b, c), AddEdge(b, a, c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (P--) &#123;</span><br><span class="line">        <span class="keyword">int</span> a = __read(), b = __read(), c = __read();</span><br><span class="line">        AddEdge(a, b, c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span> (dis, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dis);</span><br><span class="line">    SPFA();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= T; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (dis[i] == inf) <span class="built_in">puts</span>(<span class="string">"NO PATH"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, dis[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>最短路</tag>
      </tags>
  </entry>
  <entry>
    <title>进阶数据结构1</title>
    <url>/2020/07/27/%E8%BF%9B%E9%98%B6%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%841/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="67b90ce59a49f66c52e2ffd13fcef7e1d624d3e16e1bdaf71b9ec14fd6b750a9"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>数据结构</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Tree</title>
    <url>/2020/09/15/Tree/</url>
    <content><![CDATA[<h1 id="Tree"><a href="#Tree" class="headerlink" title="Tree"></a><a href="https://ac.nowcoder.com/acm/problem/112609" target="_blank" rel="noopener">Tree</a></h1><h2 id="题目大意："><a href="#题目大意：" class="headerlink" title="题目大意："></a>题目大意：</h2><ul>
<li>首先，我们有$Q$次操作</li>
</ul>
<blockquote>
<ul>
<li>操作$1$：在节点$R$下面再加一个权值为$W$的点</li>
<li>操作$2$：询问从点$X$开始往上走，（每次遇到权值大于当前选过的最后一个点的点必定会选），问最多能选多少点</li>
</ul>
</blockquote>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>我们可以很容易的发现，我们选中的点一定是一个单调不下降序列</p>
<p>那么就是说，我们可以稍微改动一下操作一，让每一条链都一定是单调不上升的（从根出发的链）</p>
<p>然后，我们每次加入的点必定不会是已经存在的某个点的祖先，所以我们改变他的位置对原来的树是没有影响的</p>
<p>若有节点成为了这个被我们认为操作的节点的儿子，它的值依赖于我们人为操作的那个点，所以这个答案也不会因为我们的操作出现问题</p>
<p>那么我们就可以在加入节点的时候，找到第一个权值大于该节点的点做为这个点的父节点</p>
<p>顺便跟新一下前缀和</p>
<p>这个用倍增实现就好了<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddPoint</span><span class="params">(ll u, ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll v = ++cnt;</span><br><span class="line">    wight[v] = p;</span><br><span class="line">    <span class="keyword">if</span> (wight[u] &gt;= wight[v]) &#123;</span><br><span class="line">        father[v][<span class="number">0</span>] = u;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">19</span>; ~i; --i)</span><br><span class="line">            <span class="keyword">if</span> (wight[father[u][i]] &lt; wight[v])</span><br><span class="line">                u = father[u][i];</span><br><span class="line">        father[v][<span class="number">0</span>] = father[u][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    sum[v][<span class="number">0</span>] = wight[father[v][<span class="number">0</span>]]; </span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt; <span class="number">20</span>; ++i) &#123;</span><br><span class="line">        father[v][i] = father[father[v][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (sum[v][i - <span class="number">1</span>] &lt; inf &amp;&amp; father[v][i]) &#123;</span><br><span class="line">            sum[v][i] = sum[v][i - <span class="number">1</span>] + sum[father[v][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后查询的话，能跳就跳，每次向上跳了更新一下限制即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (wight[x] &gt; limit) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    limit -= wight[x];</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">19</span>; ~i; --i)</span><br><span class="line">        <span class="keyword">if</span> (sum[x][i] &lt;= limit) &#123;</span><br><span class="line">            ans += (<span class="number">1</span> &lt;&lt; i);<span class="comment">//向上跳了2的i次方层，那就有2的i次方个点</span></span><br><span class="line">            limit -= sum[x][i];</span><br><span class="line">            x = father[x][i];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">4e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll inf = <span class="number">0x6f6f6f6f6f6f6f6f</span>;</span><br><span class="line"></span><br><span class="line">ll father[maxn][<span class="number">20</span>], wight[maxn], cnt(<span class="number">1</span>);</span><br><span class="line">ll sum[maxn][<span class="number">20</span>], lastans, limit;</span><br><span class="line">ll Q, Opt, X, Y;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddPoint</span><span class="params">(ll u, ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll v = ++cnt;</span><br><span class="line">    wight[v] = p;</span><br><span class="line">    <span class="keyword">if</span> (wight[u] &gt;= wight[v]) &#123;</span><br><span class="line">        father[v][<span class="number">0</span>] = u;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">19</span>; ~i; --i)</span><br><span class="line">            <span class="keyword">if</span> (wight[father[u][i]] &lt; wight[v])</span><br><span class="line">                u = father[u][i];</span><br><span class="line">        father[v][<span class="number">0</span>] = father[u][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    sum[v][<span class="number">0</span>] = wight[father[v][<span class="number">0</span>]]; </span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt; <span class="number">20</span>; ++i) &#123;</span><br><span class="line">        father[v][i] = father[father[v][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (sum[v][i - <span class="number">1</span>] &lt; inf &amp;&amp; father[v][i]) &#123;</span><br><span class="line">            sum[v][i] = sum[v][i - <span class="number">1</span>] + sum[father[v][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Query</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (wight[x] &gt; limit) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    limit -= wight[x];</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">19</span>; ~i; --i)</span><br><span class="line">        <span class="keyword">if</span> (sum[x][i] &lt;= limit) &#123;</span><br><span class="line">            ans += (<span class="number">1</span> &lt;&lt; i);</span><br><span class="line">            limit -= sum[x][i];</span><br><span class="line">            x = father[x][i];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ll <span class="title">x</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span><span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) o = getchar();</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span> (sum, <span class="number">0x6f</span>, <span class="keyword">sizeof</span> sum);</span><br><span class="line">    wight[<span class="number">0</span>] = inf;</span><br><span class="line">    Q = Read();</span><br><span class="line">    <span class="keyword">while</span> (Q--)</span><br><span class="line">    &#123;</span><br><span class="line">        Opt = Read(), X = Read() ^ lastans, Y = Read() ^ lastans;</span><br><span class="line">        <span class="keyword">if</span> (Opt == <span class="number">1</span>) AddPoint(X, Y);</span><br><span class="line">        <span class="keyword">else</span> limit = Y, <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, lastans = Query(X));</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>倍增</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa11536 Smallest Sub-Array</title>
    <url>/2020/09/17/UVa11536-Smallest-Sub-Array/</url>
    <content><![CDATA[<h1 id="UVa11536-Smallest-Sub-Array"><a href="#UVa11536-Smallest-Sub-Array" class="headerlink" title="UVa11536 Smallest Sub-Array"></a><a href="https://www.luogu.com.cn/problem/UVA11536" target="_blank" rel="noopener">UVa11536 Smallest Sub-Array</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给定一个长度为$n$的序列, 然你找一个最小的区间, 是的这个区间内包含了$[1,k]$</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>易证的我们可以贪心的去找这个区间</p>
<p>贪心方案就是尽可能的让没用的数字不在这个区间内</p>
<ul>
<li><p>大于$k$的数可以直接不考虑它作为左右端点</p>
</li>
<li><p>如果当前左端点为$l$, 且$[l+1,r]$范围内存在$a[l]$, 那么$a[l]$也不用考虑作为任何端点</p>
</li>
</ul>
<p>那么我们可以从$1\sim n$扫描一遍,这样枚举右端点, 在贪心得将左端点向右移,如果区间符合条件, 那么更新答案即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int q(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) </span><br><span class="line">        q = (q &lt;&lt; <span class="number">1</span>) + (q &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    <span class="keyword">return</span> q * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> q[maxn] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> t[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen (<span class="string">".out"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> T = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> test = <span class="number">1</span>; test &lt;= T; ++test) &#123;</span><br><span class="line">    </span><br><span class="line">        <span class="built_in">memset</span> (t, <span class="number">0</span>, <span class="keyword">sizeof</span> t);<span class="comment">//每次都要清空桶</span></span><br><span class="line">        int ans(maxn), cnt(0);</span><br><span class="line">        <span class="keyword">int</span> n = __read(), m = __read(), k = __read();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4</span>; i &lt;= n; ++i) </span><br><span class="line">        	q[i] = (q[i - <span class="number">1</span>] + q[i - <span class="number">2</span>] + q[i - <span class="number">3</span>]) % m + <span class="number">1</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (q[l] &gt; k &amp;&amp; l &lt;= n) ++l;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= n; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (q[i] &gt; k) <span class="keyword">continue</span>;<span class="comment">//无用状态直接不用考虑</span></span><br><span class="line">            <span class="keyword">if</span> (!t[q[i]])++cnt;</span><br><span class="line">            t[q[i]]++;</span><br><span class="line">            <span class="keyword">while</span> (l &lt; i &amp;&amp; (t[q[l]] &gt; <span class="number">1</span> || q[l] &gt; k)) </span><br><span class="line">            	t[q[l]]--, ++l;</span><br><span class="line">            <span class="keyword">if</span> (cnt == k) ans = min(ans, i - l + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"Case %d: "</span>, test);</span><br><span class="line">        <span class="keyword">if</span> (ans &lt; maxn) <span class="built_in">printf</span> (<span class="string">"%d\n"</span>, ans);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"sequence nai"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>单调队列</tag>
      </tags>
  </entry>
  <entry>
    <title>[APIO2014]序列分割</title>
    <url>/2020/10/06/APIO2014-%E5%BA%8F%E5%88%97%E5%88%86%E5%89%B2/</url>
    <content><![CDATA[<h1 id="APIO2014-序列分割"><a href="#APIO2014-序列分割" class="headerlink" title="[APIO2014]序列分割"></a><a href="https://www.luogu.com.cn/problem/P3648" target="_blank" rel="noopener">[APIO2014]序列分割</a></h1><p>可以直接看一下式子：</p>
<script type="math/tex; mode=display">
f(i,k)=\min_{j=1}^{i=1}\{f(j,k-1)+s_j(s_i-s_j)\}</script><p>因为这个只与上一维的状态有关，所以是可以滚掉一维的，那么令上一维的状态为$g$，这一维的状态就为$f$</p>
<p>考虑此时的最优决策点$(j&lt;k)$：</p>
<script type="math/tex; mode=display">
\begin{aligned}
g(j)+s_j(s_i-s_j)&> g(k)+s_k(s_i-s_k)\\
g(j)+s_js_i-{s_j}^2&> g(k)+s_ks_i-{s_k}^2\\
(g(j)-{s_j}^2)-(g(k)-{s_k}^2)&> s_i(s_k-s_j)\\
\frac {(g(j)-{s_j}^2)-(g(k)-{s_k}^2)}{s_k-s_j}&> s_i
\end{aligned}</script><p>然后注意到，这个$s_i$一定是单调递增的，所以可以直接用队列维护斜率单增</p>
<p>然后就写完了</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar()) &#123;</span><br><span class="line">        x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll s[maxn], f[<span class="number">2</span>][maxn];</span><br><span class="line"><span class="keyword">int</span> __pre[maxn][<span class="number">205</span>], q[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Slope</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll y1 = f[t][x] - s[x] * s[x], x1 = s[x];</span><br><span class="line">    ll y2 = f[t][y] - s[y] * s[y], x2 = s[y];</span><br><span class="line">    <span class="keyword">if</span> (x1 == x2) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">double</span> (y1 - y2) / (x2 - x1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = __read(), k = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        s[i] = s[i - <span class="number">1</span>] + __read();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; ++j) &#123;</span><br><span class="line">        int l(1), r(1), t(j &amp; 1);</span><br><span class="line">        q[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            <span class="keyword">while</span> (l &lt; r &amp;&amp; Slope(q[l], q[l + <span class="number">1</span>], t ^ <span class="number">1</span>) &lt;= s[i]) ++l;</span><br><span class="line">            __pre[i][j] = q[l];</span><br><span class="line">            f[t][i] = f[t ^ <span class="number">1</span>][q[l]] + s[q[l]] * (s[i] - s[q[l]]);</span><br><span class="line">            <span class="keyword">while</span> (l &lt; r &amp;&amp; Slope(q[r - <span class="number">1</span>], q[r], t ^ <span class="number">1</span>) &gt;= Slope(q[r], i, t ^ <span class="number">1</span>)) --r;</span><br><span class="line">            q[++r] = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, f[k &amp; <span class="number">1</span>][n]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> p = n; k; --k) p = __pre[p][k], <span class="built_in">printf</span> (<span class="string">"%d "</span>, p);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>Dp优化</tag>
      </tags>
  </entry>
  <entry>
    <title>[NOI2015]寿司晚宴</title>
    <url>/2020/10/07/NOI2015-%E5%AF%BF%E5%8F%B8%E6%99%9A%E5%AE%B4/</url>
    <content><![CDATA[<h1 id="NOI2015-寿司晚宴"><a href="#NOI2015-寿司晚宴" class="headerlink" title="[NOI2015]寿司晚宴"></a><a href="https://www.luogu.com.cn/problem/P2150" target="_blank" rel="noopener">[NOI2015]寿司晚宴</a></h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>你有数集 ${1,2,3\cdots n-1}$ ，问你把这些数分派到两个集合中（可以是空集）且这两个集合的没有公共的素因子的方案数</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这个是可以暴力枚举的，期望 $30$ 分？</p>
<p>考虑把所有数的素因子列出来，可以发现，对于每个数，它一定不会有两个及以上大于 $22$ 的素因子</p>
<p>那么就是可以这样理解，可以把所有的小于 $22$ 的素数列举出来，那么就只有 $8$ 个，这部分就可以状压，那么就可以单独用一维来处理素因子大于 $22$ 的部分</p>
<p>听上去十分的简单，但是，这个必须保证所有有大于 $22$ 的素因子的数在同一个集合中，所以要用 $f_1$表示这类数在第一个集合中，用 $f_2$ 表示这一类数在第二个集合中</p>
<p>然后在用 $f$ 表示上一种状态答案，然后每次大素数发生改变的时候，就可以更新一下所有的信息 （要用一个简单容斥）</p>
<p>然后这样看上去貌似就不难了</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> __read()</span><br><span class="line">&#123;</span><br><span class="line">    int x(0), t(1);</span><br><span class="line">    <span class="function"><span class="keyword">char</span> <span class="title">o</span> <span class="params">(getchar())</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (o &lt; <span class="string">'0'</span> || o &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">'-'</span>) t = <span class="number">-1</span>;</span><br><span class="line">        o = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; o &gt;= <span class="string">'0'</span> &amp;&amp; o &lt;= <span class="string">'9'</span>; o = getchar())      &#123;</span><br><span class="line">        x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (o ^ <span class="number">48</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p[<span class="number">10</span>] = &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> sta, res;</span><br><span class="line"></span><br><span class="line">    Node () &#123;&#125;</span><br><span class="line"></span><br><span class="line">    Node(<span class="keyword">int</span> val) &#123;</span><br><span class="line">        sta = res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; p[i]; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (val % p[i]) <span class="keyword">continue</span>;</span><br><span class="line">            sta |= <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">            <span class="keyword">while</span> (!(val % p[i])) val /= p[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (val &gt; <span class="number">1</span>) res = val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Node &amp;T) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> res &lt; T.res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[<span class="number">505</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[<span class="number">265</span>][<span class="number">265</span>], f1[<span class="number">265</span>][<span class="number">265</span>], f2[<span class="number">265</span>][<span class="number">265</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> t = x + y;</span><br><span class="line">    <span class="keyword">if</span> (t &gt;= m) <span class="keyword">return</span> t - m;</span><br><span class="line">    <span class="keyword">return</span> t; </span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = __read(), m = __read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) a[i - <span class="number">1</span>] = Node(i);</span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    sort (a + <span class="number">1</span>, a + n);    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">1</span> || a[i].res ^ a[i - <span class="number">1</span>].res || !a[i].res) &#123;</span><br><span class="line">            <span class="built_in">memcpy</span> (f1, f, <span class="keyword">sizeof</span> f1);</span><br><span class="line">            <span class="built_in">memcpy</span> (f2, f, <span class="keyword">sizeof</span> f2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">255</span>; ~j; --j)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">255</span>; ~k; --k) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j &amp; k) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">const</span> <span class="keyword">int</span> t = a[i].sta;</span><br><span class="line">                <span class="keyword">if</span> (!(t &amp; j)) f2[j][k | t] = add(f2[j][k | t], f2[j][k]);</span><br><span class="line">                <span class="keyword">if</span> (!(t &amp; k)) f1[j | t][k] = add(f1[j | t][k], f1[j][k]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i == n - <span class="number">1</span> || a[i].res ^ a[i + <span class="number">1</span>].res || !a[i].res) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">255</span>; ++j)</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= <span class="number">255</span>; ++k) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (j &amp; k) <span class="keyword">continue</span>;</span><br><span class="line">                    f[j][k] = add(f1[j][k], add(f2[j][k], m - f[j][k]));</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">255</span>; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">255</span>; ++j)</span><br><span class="line">            <span class="keyword">if</span> (!(i &amp; j)) ans = add(ans, f[i][j]);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>数论</tag>
        <tag>Dp优化</tag>
      </tags>
  </entry>
  <entry>
    <title>初赛整合-临门一脚[转载&amp;置顶]</title>
    <url>/2223/10/22/%E5%88%9D%E8%B5%9B%E6%95%B4%E5%90%88-%E4%B8%B4%E9%97%A8%E4%B8%80%E8%84%9A/</url>
    <content><![CDATA[<p><a href="https://denerate.ink/articles/%E5%88%9D%E8%B5%9B%E6%95%B4%E5%90%88-%E4%B8%B4%E9%97%A8%E4%B8%80%E8%84%9A/" target="_blank" rel="noopener">🔗原文链接</a></p>
<ul>
<li><p>CSP一年三次，分为”入门组”，”提高组”，”专业认证”，到今年为止，CCF已成功举办19次CSP</p>
</li>
<li><p>NOIP开始于1996年，全称是National Olympiad in Informatics in Provinces</p>
</li>
<li><p>NOI开始于1983年，今年是第37届在湖南长沙一中举行</p>
</li>
<li><p>IOI第一届于1989年在保加利亚的布拉维茨举行</p>
</li>
<li><p>省队名额分为A,B,C,D,E，初中只能进E队</p>
</li>
<li><p>Linux系统具有开源且免费，跨平台等优良特征，而Mac OS，Windows系统并不开源</p>
</li>
<li><p>常用的电脑操作系统：Windows，UNIX，Linux，Mac OS，DOS，Windows系统使用最广，Linux深受码农喜爱</p>
</li>
<li><p>正数的补码为其本身，负数的补码为其除了符号位之后取反+1的值</p>
</li>
<li><p>计算机能直接执行的指令：操作码和操作数（而非：源操作数和目标操作数）<br>“∨” 表示”或”<br>“∧” 表示”与”<br>“┐”表示”非”</p>
</li>
<li><p>CSP和NOIP举办的目的不同，且没有从属关系</p>
</li>
<li><p>照片内存计算：分辨率 * 位数 / 字长(8) / $ 1024^x $</p>
</li>
<li><p>概念：贪心是求局部最优，以得到全局最优 true</p>
</li>
<li><p>函数式编程语言<br>定义：函数式编程语言（functional programming language）或称函数程序设计，又称泛函编程，是一种编程典范，它将计算机运算视为数学上的函数计算，并且避免使用程序状态以及易变对象。函数编程语言最重要的基础是λ演算（lambda calculus）<br>特征：</p>
<ul>
<li>1.以“函数”为首，如同命令式语言中的“变量”，函数可以赋值给其他变量，可以作为其他函数的参数，或者作为其他函数的返回值</li>
<li>2.不修改变量的值</li>
<li>3.只有表达式，没有语句。此处的语句指的是没有返回值得某些操作</li>
<li>4.引用透明（Referential transparency），函数的运行不依赖与外部变量或“状态”，简单的说就是，同一个输入（参数），总是会产生同一个输出（返回值），这与数学函数的特征很一致。命令式语言因为全局变量等的存在，就无法做到这一点</li>
<li>5.对比命令式语言，递归形式的循环</li>
</ul>
</li>
<li><p>纯函数式编程语言：Concurrent Clean，Haskell，Miranda，Lazy K<br>非纯函数式编程语言：F#，ML，OCaml，Scala，Erlang，LISP，LOGOScheme，Clojure，Mathematica，R，Unlambda<br>其他函数编程语言：APL，XSLT</p>
</li>
<li><p>树边（tree edge）：每次搜索找到一个还没有访问过的结点的时候就形成了一条树边<br>反祖边（back edge）：也被叫做回边，即指向祖先结点的边<br>横叉边（cross edge）：它主要是在搜索的时候遇到了一个已经访问过的结点，但是这个结点 并不是 当前结点的祖先时形成的<br>前向边（forward edge）：它是在搜索的时候遇到子树中的结点的时候形成的<br>$ \therefore $ 对于DFS生成树有树边，返祖边，横叉边，无前向边</p>
</li>
<li><p><a href="https://denerate.ink/articles/%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">时间复杂度主定理</a></p>
</li>
<li><p>闰年-&gt;分为普通闰年和世纪闰年<br>普通闰年：公历年份是4的倍数的，且不是100的倍数，为普通闰年<br>世纪闰年：公历年份是整百数的，必须是400的倍数才是世纪闰年</p>
</li>
<li><p>闰月-&gt;是一种立法置闰方式，在亚洲（尤其在中国），闰月特指农历每$ 2 \sim 3 $年增加的一个月</p>
</li>
<li><p><a href="https://imgchr.com/i/06XN9S" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/11/06XN9S.png" alt="06XN9S.png"></a></p>
</li>
<li><p>计算机在存储，传送或操作时<br>字：一个单元的一组二进制码<br>字长：一个字中的二进制位的位数</p>
</li>
<li><p>字长是决定电脑计算精度<br>衡量CPU指标的是字长<br>　字长越长，电脑运算能力越强，精度越高，有效数据的存储单元数越多，寻址能力越强</p>
</li>
<li><p>32位系统的最大寻址空间为4GB<br>64位系统的最大寻址空间为</p>
<script type="math/tex; mode=display">
2^{64} = 4^{32} >> 1e8</script></li>
<li><p>$ B \rightarrow KB \rightarrow MB \rightarrow GB \rightarrow TB \rightarrow PB \rightarrow EB \rightarrow ZB \rightarrow YB $</p>
</li>
<li><p>KiB是kilo binary byte的缩写，指千位二进制字节，1KiB=1024B<br>KB是kilobyte的缩写，指千字节，1KB=1000B</p>
</li>
<li><p>机器字长：是指计算机能直接处理的二知进制数据的位数，zhi决定了计算机的运算精度<br>指令字长：一个指令字中包含二进制代码的位数<br>存储字长：一个存储单元存储一串二进制代码（存储字专），这属串二进制代码的位数称为存储字长，存储字长可以是8位、16位、32位等</p>
</li>
<li><p><a href="https://denerate.ink/articles/%E4%BA%8C%E5%88%86%E5%9B%BE%E6%89%A9%E5%B1%95%E6%A6%82%E5%BF%B5/" target="_blank" rel="noopener">二分图相关概念</a></p>
</li>
<li><p>NOI各省组织单位必须遵循CCF《关于 NOIP 数据提交格式的说明》的规范在竞赛结束后规定时间内向 CCF 提交本赛区所有参赛选手的程序</p>
</li>
<li><p>英特尔是全球最大的半导体芯片制造商，成立于1968年<br>AMD是目前业内唯一一个可以提供高性能CPU，高性能独立显卡GPU，主板芯片组三大组件的半导体公司，并是首家推出x86架构处理器的公司</p>
</li>
<li><p>CPU<br>功能：解释计算机指令，处理计算机软件中的数据<br>组成：控制器，运算器，高速缓冲存储器，以及连接它们的数据控制的总线<br>功效：处理指令，执行操作，控制时间，处理数据</p>
</li>
<li><p>CPU性能衡量指标：主频，位数，缓存指令集<br>主频：时钟频率<br>位数：处理器能够一次性计算的浮点数位数<br>缓存指令集：主要指的是能够对CPU运算进行知道以及优化的硬程序</p>
</li>
<li><p>计算机三大核心部件：CPU，内部存储器，输入/输出设备</p>
</li>
<li><p>图形加速器（图形加速卡）：<br>概念：一种以芯片集成方式专门进行图形运算的图像适配卡<br>组成：一般由具备独立CPU的硬件和相应软件构成<br>用途：专门为图形图像显示而优化</p>
</li>
<li><p>3D加速器：一种可安装成城电脑</p>
</li>
<li><p>g++编译器常用指令：<br>-Ofast：-Ofast优化<br>-o：file生成指定的输出文件<br>-O0：不进行优化处理<br>-O（-O1）：优化生成代码<br>-O2：进一步优化<br>-O3：比-O2更进一步优化，包括inline函数<br>exec：将源文件编译为可执行程序且保留调试信息<br>-w：不生成任何警告信息<br>-Wall：生成所有警告信息<br>-E：只运行C预编译器<br>-c：只编译并生成目标文件<br>-g：生成调试信息（GNU调试器可利用该信息）<br>-shared：生成共享目标文件（通常用在建立共享库时）<br>-static：禁止使用共享链接</p>
</li>
<li><p>P类问题（polynominal，多项式）：存在多项式时间算法的问题<br>NP问题（Nondeterministic polynominal，非确定性多项式）：能在多项式时间内验证得出一个正确解的问题（不知道这个问题存不存在多项式时间的算法）<br>NPC问题（Nondeterminism Polynomial complete）：存在这样一个NP问题，所有的NP问题都可以约化成它<br>NP-Hard问题：NP-Hard问题是这样一种问题，它满足NPC问题定义的第二条但不一定要满足第一条（就是说，NP-Hard问题要比 NPC问题的范围广，NP-Hard问题没有限定属于NP），即所有的NP问题都能约化到它，但是它不一定是一个NP问题<br><img src="https://i.loli.net/2020/10/10/PZqDrCM1gKpRfLz.jpg" alt="初赛-3.jpg"></p>
</li>
<li><p>常见图像文件格式：<br>PSD，PDD：Photoshop软件自身的专用格式，是唯一能支持全部图像颜色模式的格式<br>GIF：一种使用LZW压缩的格式，目的在于最小化文件和减少传输时间<br>JPEG，JPG：既是一种文件格式，又是一种压缩技术<br>PNG：可以存储透明，完爆GIF格式的地方在于失真小，没锯齿，缺点是不支持动画<br>PDF：一种灵活的，跨平台，跨应用程序的便携文档格式，可以精确地显示并保留字体<br>SVG：可缩放的矢量图形，当该格式文件的图像进行任意缩放，都不放影响他的清晰度和光滑度</p>
</li>
<li><p>编译器功能：一种语言（通常为高级语言）翻译为另一种语言（通常为低级语言）<br>主要工作流程：源代码 (source code) → 预处理器(preprocessor) → 编译器 (compiler) → 目标代码 (object code) → 链接器(Linker) → 可执行程序 (executables)</p>
</li>
<li><p>Gitee：基于Git的代码托管和研发协作平台</p>
</li>
<li><p><a href="https://denerate.ink/articles/memset%E5%A4%84%E7%90%86/" target="_blank" rel="noopener">memset的一般设置</a></p>
</li>
<li><p>计算机发展代别划分：<br><img src="https://i.loli.net/2020/10/10/viQbReHfqO5ZP6l.png" alt="初赛-1.png"></p>
</li>
<li><p>1946年2月，在美国宾夕法尼亚大学诞生了世界上第一台电子计算机ENIAC（Electronic Numerical Integrator And Computer），这台计算机占地170 $ m^2 $，重达30t，用了18000多个电子管，加法运算次数5000次/s</p>
</li>
<li><p>1944年，美籍匈牙利数学家冯·诺依曼提出计算机基本结构和工作方式的设想，为计算机的诞生和发展提供了理论基础<br>其理论要点：计算机硬件设备由存储器、运算器、控制器、输入设备和输出设备5部分组成<br>存储程序思想：把计算过程描述为由许多命令按一定顺序组成的程序，然后把程序和数据一起输入计算机，计算机对已存入的程序和数据处理后，输出结果</p>
</li>
<li><p>计算机分类：巨型机，大中型机，小型机，微型机，工作站</p>
</li>
<li><p>图灵（Alan Turing）是英国人，1913年图灵进入剑桥大学国王学院，毕业后到美国普林斯顿大学攻读博士学位，二战爆发后回到剑桥，后曾协助军方破解德国著名密码系统Enigma，帮助盟军取得了二战胜利</p>
</li>
<li><p>汉字信息编码：<br>1.汉字交换码：汉字交换码是指不同的具有汉字处理功能的计算机系统之间在交换汉字信息时所使用的代码标准。国家标准GB2312－80公布以来，我国一直延用该标准所规定的国标码作为统一的汉字信息交换码(GB5007-85图形字符代码)。</p>
<ul>
<li>GB2312－80标准包括了6763个汉字，按其使用频度分为一级汉字3755个和二级汉字3008个。一级汉字按拼音排序，二级汉字按部首排序。该标准还包括标点符号、数种西文字母、图形、数码等符号682个。              </li>
<li>区位码的区码和位码均采用从01到94的十进制，国标码采用十六进制的21H到73H（数字后加H表示其为十六进制数）。区位码和国标码的换算关系是：区码和位码分别加上十进制数32。如“国”字在表中的25行90列，其区位码为2590，国标码是397AH<br>2.字形存储码：字形存储码是指供计算机输出汉字（显示或打印）用的二进制信息，也称字模。通常，采用的是数字化点阵字模              </li>
<li>一般的点阵规模有16×16，24×24等，每一个点在存储器中用一个二进制位（bit）存储。在16×16的点阵中，需8×32 bit 的存储空间，每8 bit为1字节，所以，需32字节的存储空间。在相同点阵中，不管其笔划繁简，每个汉字所占的字节数相等。             </li>
<li>为了节省存储空间，普遍采用字形数据压缩技术。所谓的矢量汉字是指用矢量方法将汉字点阵字模进行压缩后得到的汉字字形的数字化信息</li>
</ul>
</li>
<li><p>IP地址：所谓IP地址，是用于标识 IP Internet 网络上节点的 32 位地址(以后可能使用的V6版本是128位的，分8组，每组16位)。对于 IP Internet 网络上的每个节点都必须指派一个唯一的地址，它由网络 ID 和唯一的主机 ID 组成。该地址通常用由句点分隔的八位字节的十进制数表示(例:192.168.7.27)。</p>
</li>
<li><p>算法性质：有穷性，确定性，输入，输出，可行性</p>
</li>
<li><p>0的反码有两种表示：$ +0 \rightarrow 000 \cdots 000，-0 \rightarrow 111 \cdots 111 $</p>
</li>
<li><p>C++运算等级：<br><img src="https://i.loli.net/2020/10/10/5CZH6uYresFRg71.png" alt="初赛-2.png"></p>
</li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>学习笔记</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>联赛Day1</title>
    <url>/2020/10/12/%E8%81%94%E8%B5%9BDay1/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="e9a9a5afc279138c5e90af2f5af7ce1972ce0a2fcc70ad8d9bb7e84fec8e2f79"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>鸽~</tag>
        <tag>考试</tag>
      </tags>
  </entry>
</search>
